<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>opinion on ELL Blog</title>
    <link>https://blog.elijahlopez.ca/tags/opinion/</link>
    <description>ELL Blog (opinion)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 12 May 2022 17:21:36 -0400</lastBuildDate>
    
    <atom:link href="https://blog.elijahlopez.ca/tags/opinion/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>MacOS Sucks</title>
      <link>https://blog.elijahlopez.ca/posts/macos-sucks/</link>
      <pubDate>Thu, 12 May 2022 17:21:36 -0400</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/macos-sucks/</guid>
      <description>&lt;p&gt;Here are some reasons MacOS sucks. Of course, Linux and Windows suck too. The order for desktop OS&amp;rsquo;s
are MacOS &amp;lt; Linux Desktop &amp;lt; Windows. This article is not about why Windows &amp;gt; Linux, so please refrain
from commenting about Linux. If you are a Mac user and are offended, Windows also sucks a) the Settings
app does not include everything found in the control panel, and the control panel uses the same UI interface
since Windows 7 and b) requires installing third party apps like TaskbarX, EarTrumpet, QuickLook, and ditto to improve the UX and
c) there&amp;rsquo;s no effort to bring Linux functionality to Windows (e.g. bash, posix kernel, preinstalled GNU coreutils, PATH limit and editable as a file).&lt;/p&gt;
&lt;h3 id=&#34;hidden-files&#34; &gt;Hidden Files
&lt;span&gt;
    &lt;a href=&#34;#hidden-files&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;So you want to see hidden files?
You go to finder settings but can&amp;rsquo;t find it. So you then Google it. Turns out you were supposed to memorize the very intuitive keyboard shortcut (command + shift + period or simply command + &amp;gt;).&lt;/p&gt;
&lt;h3 id=&#34;removing-many-files-via-command-line&#34; &gt;Removing Many Files via Command Line
&lt;span&gt;
    &lt;a href=&#34;#removing-many-files-via-command-line&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;rm -R folder requires sudo even if I own the files.&lt;/p&gt;
&lt;h3 id=&#34;homebrew-does-not-modify-path&#34; &gt;Homebrew does not modify PATH
&lt;span&gt;
    &lt;a href=&#34;#homebrew-does-not-modify-path&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;Homebrew does not permanently ass packages to path. You have to create a shell config yourself with the export path shenanigans. Stackoverflow doesn&amp;rsquo;t even bother giving you the one liner to do this. They make you create a file yourself and add it rather than a simple &lt;code&gt;echo &amp;quot;export PATH=PATH:...&amp;quot; &amp;gt;&amp;gt; ~/.zshrc&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;updating-macos--breaks-git&#34; &gt;Updating macOS  Breaks git
&lt;span&gt;
    &lt;a href=&#34;#updating-macos--breaks-git&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;Another reason is that every time you update MacOS, you will get the following error when trying to use git.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://apple.stackexchange.com/questions/254380/why-am-i-getting-an-invalid-active-developer-path-when-attempting-to-use-git-a#254381&#34;&gt;https://apple.stackexchange.com/questions/254380/why-am-i-getting-an-invalid-active-developer-path-when-attempting-to-use-git-a#254381&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The error is &amp;ldquo;invalid developer path.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Every time you update, you have to agree to Apple&amp;rsquo;s XCodes terms of service in order to use git, which isn&amp;rsquo;t made by Apple but simply
preinstalled by them. Don&amp;rsquo;t want to instsall XCode? Too bad, the Command line tools themselves is 130MB.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bye Medium, Hello Hugo &#43; GitHub Pages</title>
      <link>https://blog.elijahlopez.ca/posts/bye-medium-hello-hugo/</link>
      <pubDate>Sat, 01 Jan 2022 12:20:08 -0500</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/bye-medium-hello-hugo/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve officially moved from blogging on Medium to my own &lt;a href=&#34;https://blog.elijahlopez.ca&#34;&gt;GitHub page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Some of the most frustrating things with Medium are: clunky comment UI, click-bait recommendations, no way to download my own articles, slower than YouTube interface, and to top it off, no dark theme.&lt;/p&gt;
&lt;p&gt;The two things Medium does arguably well is being a blogging network and having a writing UI. The writing UI is a simpler version of Quill.js, but since I can write in Markdown,  the only good point is that the editor is in a Sans-Serif font and not a mono-space font ðŸ˜‚.&lt;/p&gt;
&lt;p&gt;A couple weeks ago, I realized that online content is not forever as everybody says. Only the online content that was archived lasts forever. Chances are, you and I are not going to have our content archived by a third party for free, easily, and knowingly available. The conclusion then is to have at least two backups.&lt;/p&gt;
&lt;p&gt;That lead me to downloading all the files from my Google Drive. Now my Google Drive is almost empty, and all my files are available on my laptop, my PC, and on a cloud storage of my choice.&lt;/p&gt;
&lt;p&gt;When it came to archiving my Medium content, that&amp;rsquo;s when I realized that there was no option to download. I had to copy paste each one of my articles! Awesome!&lt;/p&gt;
&lt;p&gt;I haven&amp;rsquo;t ported many of the articles over to GitHub pages, mainly because I don&amp;rsquo;t want to deal with the formatting, but I made this post for another reason. I made this post to inform other people that &amp;ldquo;self&amp;rdquo;-hosting is a viable option, and I&amp;rsquo;ve made it work well.&lt;/p&gt;
&lt;p&gt;You can read how I made this blogging site using Hugo and hosted on GitHub pages, &lt;a href=&#34;https://blog.elijahlopez.ca/posts/hugo-tutorial/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why 64-bit Programs are Better Than 32-bit</title>
      <link>https://blog.elijahlopez.ca/posts/64bit-is-better-than-32bit/</link>
      <pubDate>Sat, 25 Dec 2021 10:30:44 -0600</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/64bit-is-better-than-32bit/</guid>
      <description>&lt;p&gt;This article is from a developer point of view, not a user point of view.
The audience of this article are beginner to intermediate developers and is introductory, not argumenatiative.
Do not expect to be convinced if you are pro 32-bit software because Windows decided to support 32-bit software.
From a user point of view, 64-bit computers and software is better because then you can have 100 browser tabs open&lt;/p&gt;
&lt;h3 id=&#34;1-no-4gib-memory-limit&#34; &gt;1. No 4GiB Memory Limit
&lt;span&gt;
    &lt;a href=&#34;#1-no-4gib-memory-limit&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;If your application needs more than 4GiB memory, then you definitely need a 32-bit application.
And if you don&amp;rsquo;t need more than 4GiB of memory, you might not want to develop 32-bit development habits because if you do need 4GB in the future, its better for your habits to already work out, that it is to keep in the back of your mind that you need to switch to targetting 64-bit.&lt;/p&gt;
&lt;h3 id=&#34;2-64-bit-users-get-64-bit-applications&#34; &gt;2. 64-bit Users get 64-bit Applications
&lt;span&gt;
    &lt;a href=&#34;#2-64-bit-users-get-64-bit-applications&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;By shipping only 64-bit distrubtions, and only one legacy 32-bit application, most users won&amp;rsquo;t be recommended the wrong architecture.
For example, VLC recommended their 32-bit distribution on my 64-bit computer! Some of my video files are around 20GB so of course 64-bit would be best.&lt;/p&gt;
&lt;h3 id=&#34;3-linux-seamless-installation-for-users&#34; &gt;3. Linux: Seamless Installation for Users
&lt;span&gt;
    &lt;a href=&#34;#3-linux-seamless-installation-for-users&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;If you ship 32-bit Linux applications, chances are that your users will now need to install the necessary 32-bit libraries.
Most systems are 64-bit and 32-bit users can continue using legacy software with their package manager.&lt;/p&gt;
&lt;h3 id=&#34;4-64-bit-is-the-default&#34; &gt;4. 64-bit is the Default
&lt;span&gt;
    &lt;a href=&#34;#4-64-bit-is-the-default&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;In Visual Studio 2022, the default target architecture is 64-bit. It used to be 32-bit.
Most users run 64-bit systems, so the default compiler or intrepetor you install, like Python, will also be 64-bit in 2021.&lt;/p&gt;
&lt;h3 id=&#34;5-future-proof--32-bit-compilers&#34; &gt;5. Future Proof &amp;amp; 32-bit Compilers
&lt;span&gt;
    &lt;a href=&#34;#5-future-proof--32-bit-compilers&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;64-bit is objectively more future proof than 32-bit. Rust already has a 128-bit primitive, so 32-bit will definitely be left in the dust if things shift even further. We&amp;rsquo;ve already seen Windows 10 go from &amp;ldquo;last Windows&amp;rdquo; to out of support in 2024. When starting new projects, why sacrifice the stability of your applicaiton in the future, just to support the past?&lt;/p&gt;
&lt;p&gt;My personal grife is a Python project. Over two years ago, I made a music player for Windows, &lt;a href=&#34;https://github.com/elibroftw/music-caster/&#34;&gt;Music Caster&lt;/a&gt;. The relevant details are Python 3.7 64-bit, PyInstaller, and a fork of portaudio that only compiled for 64-bit.
After some time, a user asked me to support 32-bit. Me being naive at the time agreed because I fell prey to the 32-bit supports more users reasoning.&lt;/p&gt;
&lt;p&gt;To support 32-bit applications, I had to uninsatll my existing instllation and then install the 32-bit version of Python. I went with Python 3.8 since Python 3.9 hadn&amp;rsquo;t come out yet. I wish it was that simple, but there&amp;rsquo;s more. I had to figure out how to compile the 32-bit version of the portaudio library. Then another year later, I&amp;rsquo;ve decided to future proof my application, so the journey back from 32-bit Python was just as hard.&lt;/p&gt;
&lt;p&gt;Lesson of the day is to never use a 3.X.0 Python distribution or learn Rust while you are using Python.&lt;/p&gt;
&lt;h3 id=&#34;6-no-emulation&#34; &gt;6. No Emulation
&lt;span&gt;
    &lt;a href=&#34;#6-no-emulation&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;The most common pro 32-bit software argument is also the most ironic. The entire reason emulation exists, that is 32-bit software running on 64-bit Windows,
is Windows supporting legacy software. Creating 32-bit software when 64-bit is possible, is simply ignorant as to why 64-bit exits.&lt;/p&gt;
&lt;p&gt;At the cost of not supporting at most 2% of Windows users, your application won&amp;rsquo;t have to be emulated.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;WOW64 is the x86 emulator that allows 32-bit Windows-based applications to run seamlessly on 64-bit Windows. &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;64-bit operations are native in 64-bit systems and don&amp;rsquo;t require multiple 32-bit calls
In the end, performance is largely based on optimization, and not so much architecture target, so that&amp;rsquo;s why this is the last section.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;conclusion&#34; &gt;Conclusion
&lt;span&gt;
    &lt;a href=&#34;#conclusion&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;I know this article is not a 100% high quality article, but this article isn&amp;rsquo;t argumentative, it&amp;rsquo;s just a run through.&lt;/p&gt;
&lt;p&gt;In conclusion, it&amp;rsquo;s better to distribute 32-bit and 64-bit applications than just 32-bit applications.
But don&amp;rsquo;t be like VLC, and recommend 64-bit computers to install the 32-bit version!&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/windows/win32/winprog64/running-32-bit-applications&#34;&gt;https://docs.microsoft.com/en-us/windows/win32/winprog64/running-32-bit-applications&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
  </channel>
</rss>
