<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cryptocurrency on ELL Blog</title>
    <link>https://blog.elijahlopez.ca/tags/cryptocurrency/</link>
    <description>ELL Blog (cryptocurrency)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 10 Jun 2022 20:13:16 -0400</lastBuildDate>
    
    <atom:link href="https://blog.elijahlopez.ca/tags/cryptocurrency/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to Create a Monero Payment Processor</title>
      <link>https://blog.elijahlopez.ca/posts/monero-payment-processing/</link>
      <pubDate>Fri, 10 Jun 2022 20:13:16 -0400</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/monero-payment-processing/</guid>
      <description>&lt;h2 id=&#34;preface&#34; &gt;Preface
&lt;span&gt;
    &lt;a href=&#34;#preface&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;In January 2022, I created my very own
ecommerce store with the following features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;From scratch&lt;/li&gt;
&lt;li&gt;JavaScript-free&lt;/li&gt;
&lt;li&gt;Monero acceptance via my custom processor&lt;/li&gt;
&lt;li&gt;Credit-Card acceptance via Stripe Sessions&lt;/li&gt;
&lt;li&gt;Drop-shipping integrated&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is more of a design document than a copy-paste solution.&lt;/p&gt;
&lt;p&gt;At the end I mention an alternative, more long-term solution than the short-term kinda complicated cost-effective solution I made.&lt;/p&gt;
&lt;div&gt;
    &lt;h2&gt;Table of Contents&lt;/h2&gt;
    &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#preface&#34;&gt;Preface&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#supporting-monero-payment-method&#34;&gt;Supporting Monero Payment Method&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#my-processing-code&#34;&gt;My Processing Code&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#logistics&#34;&gt;Logistics&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#prerequisites&#34;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#monero-wallet-rpc&#34;&gt;Monero-Wallet-RPC&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#limitations&#34;&gt;Limitations&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#micro-service-approach&#34;&gt;Micro-Service Approach&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#pros&#34;&gt;Pros&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#cons&#34;&gt;Cons&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/div&gt;

&lt;h2 id=&#34;introduction&#34; &gt;Introduction
&lt;span&gt;
    &lt;a href=&#34;#introduction&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;For an MVP, you need to set environment variables for each backend server, such that each server has a corresponding ACCOUNT number for your Monero wallet. Each of these servers will have the same view-wallet opened through monero-wallet-rpc. &lt;a href=&#34;#logistics&#34;&gt;Logistics for backend&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;supporting-monero-payment-method&#34; &gt;Supporting Monero Payment Method
&lt;span&gt;
    &lt;a href=&#34;#supporting-monero-payment-method&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;In your backend, when a user creates an order and selects Monero as the payment method, you should send an API request the monero-wallet-rpc that is running. Here is a snippet of my code. The relevant portion is the request as well as the error checking.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;############&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# Defined in modules/monero.py&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# two undefined func/var are os.environ related&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;XMR_RPC_PORT = &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;38088&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; is_dev() &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;and&lt;/span&gt; STAGENET_IN_DEV &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;18088&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# TODO: v1.5 use ipv6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;XMR_RPC_ENDPOINT = &lt;span style=&#34;color:#ed9d13&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;http://127.0.0.1:&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;{&lt;/span&gt;XMR_RPC_PORT&lt;span style=&#34;color:#ed9d13&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;/json_rpc&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#447fcf&#34;&gt;xmr_rpc_api&lt;/span&gt;(method_name, **params):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    rpc_defaults = {&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;jsonrpc&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;2.0&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;_in&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;in&lt;/span&gt; params:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        params[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;in&amp;#39;&lt;/span&gt;] = params.pop(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;_in&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;return&lt;/span&gt; requests.post(XMR_RPC_ENDPOINT, json={**rpc_defaults, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;method&amp;#39;&lt;/span&gt;: method_name, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;params&amp;#39;&lt;/span&gt;: params}, auth=XMR_RPC_AUTH)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;########&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# called in the payment_method == monero order creation method&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#447fcf&#34;&gt;finish_order_monero&lt;/span&gt;(order):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&amp;#34;&amp;#34; Updates base order for paying with Monero &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;assert&lt;/span&gt; order[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;payment_method&amp;#39;&lt;/span&gt;] == &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;monero&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# Monero orders expire after one hour&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    server_num = &lt;span style=&#34;color:#24909d&#34;&gt;int&lt;/span&gt;(os.environ[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;SERVER_NUM&amp;#39;&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# https://monerodocs.org/interacting/monero-wallet-rpc-reference/#create_address&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# create a new address for account idx server_num&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# PITFALL: it is imperative that the wallet file is not replaced, to avoid create_address returning an already used address&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# if the wallet is ever replaced, before starting the server, either change the account number or create addresses until it matches the address used by the last monero order&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        r = xmr_rpc_api(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;create_address&amp;#39;&lt;/span&gt;, account_index=server_num, label=&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;lenerva-store-payment&amp;#39;&lt;/span&gt;).json()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;while&lt;/span&gt; r.get(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;error&amp;#39;&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; r[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;error&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;code&amp;#39;&lt;/span&gt;] == -&lt;span style=&#34;color:#3677a9&#34;&gt;14&lt;/span&gt;:  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# account index is out of bound (not created yet)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                account_created = &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;False&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;not&lt;/span&gt; account_created:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    r = xmr_rpc_api(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;create_account&amp;#39;&lt;/span&gt;, label=&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;lenerva-store&amp;#39;&lt;/span&gt;).json()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    account_created = r[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;result&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;account_index&amp;#39;&lt;/span&gt;] == server_num
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                r = xmr_rpc_api(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;create_address&amp;#39;&lt;/span&gt;, account_index=server_num, label=&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;lenerva-store-payment&amp;#39;&lt;/span&gt;).json()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        address, address_idx = r[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;result&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;address&amp;#39;&lt;/span&gt;], r[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;result&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;address_index&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        total_xmr = usd_to_xmr(order[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;total_usd&amp;#39;&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        order.update({&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_address&amp;#39;&lt;/span&gt;: address, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_address_idx&amp;#39;&lt;/span&gt;: address_idx,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;total_xmr&amp;#39;&lt;/span&gt;: total_xmr, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;total_xmr_atomic&amp;#39;&lt;/span&gt;: total_xmr * &lt;span style=&#34;color:#3677a9&#34;&gt;1e12&lt;/span&gt;})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;Exception&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;as&lt;/span&gt; e:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;raise&lt;/span&gt; MoneroError(&lt;span style=&#34;color:#24909d&#34;&gt;repr&lt;/span&gt;(e)) &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#447fcf;text-decoration:underline&#34;&gt;e&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# showing order page to user&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xmr_qr_data = &lt;span style=&#34;color:#ed9d13&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;monero:&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;{&lt;/span&gt;order[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_address&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#ed9d13&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;?tx_amount=&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;{&lt;/span&gt;order[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;total_xmr&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#ed9d13&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt; \
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#ed9d13&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&amp;amp;tx_description=Goods%20and%20Services&amp;amp;recipient_name=LENERVA&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Great, so users can now create an order with monero as the payment method. But how do they pay? When the order is created, in contrast to Stripe&amp;rsquo;s Session, you can redirect the user to the order page and show them a QR code of &lt;code&gt;xmr_qr_data&lt;/code&gt;. You will need to create the qr code yourself. If you use Python, install pyqrcode and pypng.&lt;/p&gt;
&lt;h2 id=&#34;my-processing-code&#34; &gt;My Processing Code
&lt;span&gt;
    &lt;a href=&#34;#my-processing-code&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Moving on to processing. This processing function is on a different thread/process. I used multiprocessing in Python to ensure that whenever the backend starts up, this function gets called. Modify to fit your needs. Important things in this function are: double spend protection, &amp;gt; 1 confirmations required, 1 cent tolerance, sums all payments to an address instead of just one. When the order is marked as paid, your order processing task/service can take care of it.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#447fcf&#34;&gt;monitor_xmr_payments&lt;/span&gt;(run_file: &lt;span style=&#34;color:#24909d&#34;&gt;str&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;    Monitor Monero Payments Here
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;    Started from on_starting: multiprocessing
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;    One Monero Node per Server (Droplet)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;    Unique Account per Server (Droplet)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;    `run_file` implies that the main process is still running
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# one hour order expiration&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    XMR_ORDER_TIMEOUT = &lt;span style=&#34;color:#24909d&#34;&gt;int&lt;/span&gt;(os.environ.get(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;XMR_ORDER_TIMEOUT&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;3600&amp;#39;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    XMR_EXTRA_TIME = &lt;span style=&#34;color:#24909d&#34;&gt;int&lt;/span&gt;(os.environ.get(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;XMR_EXTRA_TIME&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;3600&amp;#39;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ACCOUNT_IDX = &lt;span style=&#34;color:#24909d&#34;&gt;int&lt;/span&gt;(os.environ[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;SERVER_NUM&amp;#39;&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#24909d&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;XMR Monitoring service started&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    update_check_time = &lt;span style=&#34;color:#3677a9&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;while&lt;/span&gt; os.path.exists(run_file):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        time_start = time.monotonic()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        orders_to_check = Db.orders.find({&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;payment_method&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;monero&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;payment_confirmed&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;False&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                          &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;expired&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;False&lt;/span&gt;, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;server_num&amp;#39;&lt;/span&gt;: ACCOUNT_IDX})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        subaddr_indices = []
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        expired_orders = []  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# ids&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        address_idx_orders = {}  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# payment_addr_idx: order_doc&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;for&lt;/span&gt; order &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;in&lt;/span&gt; orders_to_check:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            addr_idx = order[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_address_idx&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            address_idx_orders[addr_idx] = order
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            subaddr_indices.append(addr_idx)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; order[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;timestamp&amp;#39;&lt;/span&gt;] + XMR_ORDER_TIMEOUT &amp;lt; time.time() &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;and&lt;/span&gt; order[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_received&amp;#39;&lt;/span&gt;] == &lt;span style=&#34;color:#3677a9&#34;&gt;0&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# don&amp;#39;t want to expire orders where payments have already started&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                expired_orders.append(order[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;_id&amp;#39;&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;elif&lt;/span&gt; order[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;timestamp&amp;#39;&lt;/span&gt;] + XMR_ORDER_TIMEOUT + XMR_EXTRA_TIME &amp;lt; time.time():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# expire orders that took too long to complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                expired_orders.append(order[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;_id&amp;#39;&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; expired_orders:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            Db.orders.update_one({&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;_id&amp;#39;&lt;/span&gt;: {&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;$in&amp;#39;&lt;/span&gt;: expired_orders}}, {&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;$set&amp;#39;&lt;/span&gt;: {&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;expired&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;True&lt;/span&gt;}})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        balances = {}  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# xmr_address_idx: {total_xmr_received ($set), total_confirmed_xmr ($set)}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# check for payments (transfers)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# https://monerodocs.org/interacting/monero-wallet-rpc-reference/#get_transfers&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;not&lt;/span&gt; subaddr_indices:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;raise&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;StopIteration&lt;/span&gt;(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;No addresses to monitor&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            r = xmr_rpc_api(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;get_transfers&amp;#39;&lt;/span&gt;, _in=&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;True&lt;/span&gt;, out=&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;False&lt;/span&gt;, pending=&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;True&lt;/span&gt;, pool=&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;True&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            account_index=ACCOUNT_IDX, subaddr_indices=subaddr_indices).json()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;for&lt;/span&gt; transfer &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;in&lt;/span&gt; chain(r[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;result&amp;#39;&lt;/span&gt;].get(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;in&amp;#39;&lt;/span&gt;, []), r[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;result&amp;#39;&lt;/span&gt;].get(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;pending&amp;#39;&lt;/span&gt;, [])):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                addr_idx = transfer[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;subaddr_index&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;minor&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; addr_idx &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;in&lt;/span&gt; address_idx_orders:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;continue&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                order = address_idx_orders[addr_idx]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; addr_idx &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;in&lt;/span&gt; balances:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    balances[addr_idx] = {&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_received&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#3677a9&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_confirmed&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#3677a9&#34;&gt;0&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                balance = balances[addr_idx]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# check timestamp just in case, double_spend_seen just in case,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; (transfer[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;timestamp&amp;#39;&lt;/span&gt;] &amp;gt; order[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;timestamp&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;not&lt;/span&gt; transfer[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;double_spend_seen&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;and&lt;/span&gt; addr_idx &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;in&lt;/span&gt; address_idx_orders):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    balance[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_received&amp;#39;&lt;/span&gt;] += transfer[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;amount&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; transfer[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;confirmations&amp;#39;&lt;/span&gt;] &amp;gt;= transfer[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;suggested_confirmations_threshold&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;and&lt;/span&gt; transfer[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;confirmations&amp;#39;&lt;/span&gt;] &amp;gt; transfer.get(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;unlock_time&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#3677a9&#34;&gt;0&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        balance[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_confirmed&amp;#39;&lt;/span&gt;] += transfer[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;amount&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# check if confirmation resulted in order payment being fulfilled&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# tolerate 2 cent buffer due to transaction fee&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        xmr_buffer = usd_to_xmr(&lt;span style=&#34;color:#3677a9&#34;&gt;0.02&lt;/span&gt;, as_atomic=&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;True&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; balance[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_confirmed&amp;#39;&lt;/span&gt;] &amp;gt;= order[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;total_xmr_atomic&amp;#39;&lt;/span&gt;] - xmr_buffer:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# payment confirmed, therefore, we can update the database&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            Db.orders.find_one_and_update({&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;_id&amp;#39;&lt;/span&gt;: order[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;_id&amp;#39;&lt;/span&gt;]}, {&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;$set&amp;#39;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_received&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#24909d&#34;&gt;round&lt;/span&gt;(balance[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_received&amp;#39;&lt;/span&gt;] / &lt;span style=&#34;color:#3677a9&#34;&gt;1e12&lt;/span&gt;, &lt;span style=&#34;color:#3677a9&#34;&gt;12&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_confirmed&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#24909d&#34;&gt;round&lt;/span&gt;(balance[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_confirmed&amp;#39;&lt;/span&gt;] / &lt;span style=&#34;color:#3677a9&#34;&gt;1e12&lt;/span&gt;, &lt;span style=&#34;color:#3677a9&#34;&gt;12&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;payment_confirmed&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            }})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# del addr_idx from balances since we don&amp;#39;t need to update this order again&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;del&lt;/span&gt; address_idx_orders[addr_idx]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;del&lt;/span&gt; balances[addr_idx]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# quick exit for fast restarts&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;not&lt;/span&gt; os.path.exists(run_file):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;return&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;for&lt;/span&gt; addr_idx &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;in&lt;/span&gt; balances:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# convert from atomic&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                xmr_received = &lt;span style=&#34;color:#24909d&#34;&gt;round&lt;/span&gt;(balances[addr_idx][&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_received&amp;#39;&lt;/span&gt;] / &lt;span style=&#34;color:#3677a9&#34;&gt;1e12&lt;/span&gt;, &lt;span style=&#34;color:#3677a9&#34;&gt;12&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                xmr_confirmed = &lt;span style=&#34;color:#24909d&#34;&gt;round&lt;/span&gt;(balances[addr_idx][&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_confirmed&amp;#39;&lt;/span&gt;] / &lt;span style=&#34;color:#3677a9&#34;&gt;1e12&lt;/span&gt;, &lt;span style=&#34;color:#3677a9&#34;&gt;12&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                order = address_idx_orders[addr_idx]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; xmr_received &amp;gt; order[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_received&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;or&lt;/span&gt; xmr_confirmed &amp;gt; order[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_confirmed&amp;#39;&lt;/span&gt;]:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# update xmr_* values for order&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    xmr_buffer = usd_to_xmr(&lt;span style=&#34;color:#3677a9&#34;&gt;0.02&lt;/span&gt;, as_atomic=&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;True&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    enough_xmr_sent = xmr_received &amp;gt;= order[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;total_xmr_atomic&amp;#39;&lt;/span&gt;] - xmr_buffer
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    Db.orders.update_one({&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;_id&amp;#39;&lt;/span&gt;: order[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;_id&amp;#39;&lt;/span&gt;]}, {&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;$set&amp;#39;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_received&amp;#39;&lt;/span&gt;: xmr_received,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_confirmed&amp;#39;&lt;/span&gt;: xmr_confirmed,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;enough_xmr_sent&amp;#39;&lt;/span&gt;: enough_xmr_sent,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    }})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;StopIteration&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;except&lt;/span&gt; requests.RequestException:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#24909d&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;XMR RPC Connection Error - wallet is probably still syncing&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# check for updates, and start update procedure&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;not&lt;/span&gt; is_dev() &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;and&lt;/span&gt; update_check_time &amp;lt; time.time():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# check for an update every 10 minutes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            update_monero_rpc()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            update_check_time = time.time() + &lt;span style=&#34;color:#3677a9&#34;&gt;600&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# sleep to conserve resources&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; (time_taken := time.monotonic() - time_start) &amp;lt; INTERVAL:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            time.sleep(INTERVAL - time_taken)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;logistics&#34; &gt;Logistics
&lt;span&gt;
    &lt;a href=&#34;#logistics&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;h3 id=&#34;prerequisites&#34; &gt;Prerequisites
&lt;span&gt;
    &lt;a href=&#34;#prerequisites&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Monero view-wallet (derived from full wallet)&lt;/li&gt;
&lt;li&gt;Monero-wallet-rpc running on server with wallet open&lt;/li&gt;
&lt;li&gt;A monero node (daemon) url. You can either use your own
or a public one. I use my own to ensure uptime&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;monero-wallet-rpc&#34; &gt;Monero-Wallet-RPC
&lt;span&gt;
    &lt;a href=&#34;#monero-wallet-rpc&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;To install monero on a Linux server, you can use my bash script.
&lt;code&gt;install_monero()&lt;/code&gt; can also be called if you need to update monero on a
server, like a remote node.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;add_to_path() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# if .env_path DNE or the parser has not been added to ~/.bashrc,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; [ ! -f ~/.env_path ] &amp;amp;&amp;amp; ! grep -Fq &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;.env_path&amp;#34;&lt;/span&gt; ~/.bashrc; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# shellcheck disable=SC2129&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;if [ -f ~/.env_path ]; then&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# shellcheck disable=SC2140&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;    export PATH=\$PATH:\$(python3 -c &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;import os; from pathlib import Path; print(&amp;#39;:&amp;#39;.join((line.strip() for line in open(f&amp;#39;{Path.home()}/.env_path&amp;#39;).readlines() if line.strip())))&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;)&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;fi&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# add directories to path&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;for&lt;/span&gt; path in &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#40ffff&#34;&gt;$@&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; [ ! -f ~/.env_path ]  || ! grep -Fq &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#40ffff&#34;&gt;$path&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt; ~/.env_path; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# .env_path DNE or string not in .env_path&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#40ffff&#34;&gt;$path&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; ~/.env_path
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;Added &lt;/span&gt;&lt;span style=&#34;color:#40ffff&#34;&gt;$path&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt; to PATH&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#24909d&#34;&gt;source&lt;/span&gt; ~/.bashrc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# shellcheck disable=SC2120,SC2164&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;install_monero() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# Install Monero (download and extract to ~/bin/monero)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; [ ! -f ~/bin/monero/monerod ] || [ ! &lt;span style=&#34;color:#40ffff&#34;&gt;$1&lt;/span&gt; = &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;--force&amp;#34;&lt;/span&gt; ]; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    mkdir -p ~/Downloads &amp;amp;&amp;amp; &lt;span style=&#34;color:#24909d&#34;&gt;cd&lt;/span&gt; ~/Downloads
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;Downloading and extracting Monero binaries&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    curl -L https://downloads.getmonero.org/cli/linux64 | tar xj
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    rm -r -f ~/bin/monero &amp;amp;&amp;amp; mkdir -p ~/bin
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    mv monero-*-linux-* monero
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    mv monero ~/bin
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;Downloaded Monero binaries to&amp;#34;&lt;/span&gt; ~/bin
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;INFO: Monero binaries already installed&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  add_to_path ~/bin/monero
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#24909d&#34;&gt;source&lt;/span&gt; ~/.bashrc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To ensure the RPC-wallet is running, you can add a &amp;ldquo;start if not already running&amp;rdquo; function to your backend. I&amp;rsquo;ll share the code I use myself in the future, but these are the arguments for running your RPC. For development, ask the user to enter the wallet password since that wallet would most likely be spendable.&lt;/p&gt;
&lt;p&gt;Create a file &lt;code&gt;configs/monero-rpc.common.conf&lt;/code&gt; to contain the base configuaration of the RPC. Other parameters are based upon whether we are running the website in devevelopment or production.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-conf&#34; data-lang=&#34;conf&#34;&gt;non-interactive=1
log-file=&amp;#34;monero-wallet-rpc.log&amp;#34;
max-log-file-size=5000000
max-log-files=2
log-level=0
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;monero_rpc_cmd = [&lt;span style=&#34;color:#24909d&#34;&gt;str&lt;/span&gt;(monero_rpc), &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;--config-file&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;other_files/monero-rpc.common.conf&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;--rpc-login&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;monero:&amp;#39;&lt;/span&gt; + os.environ[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;XMR_RPC_PW&amp;#39;&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;--trusted-daemon&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; TRUSTED_DAEMON &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;--untrusted-daemon&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;--rpc-bind-port&amp;#39;&lt;/span&gt;, XMR_RPC_PORT, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;--wallet-file&amp;#39;&lt;/span&gt;, wallet_file, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;--password&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# production only: (requires XMR_WALLET_PW set in .env or system environemnt variable)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;monero_rpc_cmd.extend((os.environ[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;XMR_WALLET_PW&amp;#39;&lt;/span&gt;], &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;--daemon-address&amp;#39;&lt;/span&gt;, MAINNET_DAEMON))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;limitations&#34; &gt;Limitations
&lt;span&gt;
    &lt;a href=&#34;#limitations&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Each account index actually corresponds to the view wallet history on each server. If those wallets ever get replaced, the servers need to be assigned new account numbers. You can avoid this pitfall by adding a database check to see if the address was in use, but I didn&amp;rsquo;t do that for performance reasons. It&amp;rsquo;s better to have a table in your database for
determining which account index was last assigned t a server, and then use a script that increase this number whenever a view-wallet needs to be transferred onto a server. This way, you avoid having to remember the pitfall.&lt;/p&gt;
&lt;p&gt;monero-wallet-rpc would need to be manually updated, but
since it the scanning largely depends on the actualy daemon, which I have an update script for, this issue is not that bad.&lt;/p&gt;
&lt;p&gt;When I get back to prioritizing the ecommerce store, I will a) add more items to sell b) automation.&lt;/p&gt;
&lt;h2 id=&#34;micro-service-approach&#34; &gt;Micro-Service Approach
&lt;span&gt;
    &lt;a href=&#34;#micro-service-approach&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Obviously, my method is complicated, but it does save me $5/month. If I was a manager at Google, I&amp;rsquo;d do it the following way.&lt;/p&gt;
&lt;p&gt;Create a payment processor API that can horizontally scale. Instead of assigning an account number to each app server, only assign it to API servers. There should be at least one API server per data centre region in use (DigitalOcean reference).&lt;/p&gt;
&lt;p&gt;This API would encapsulate the following&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;create_invoice(amount, expiry=3600, currency=&amp;lsquo;XMR&amp;rsquo;, qrCode=false)
&lt;ul&gt;
&lt;li&gt;returns an address, the payment URI, and optionally the png data for the QR code, possibly even an invoice id (positive number).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;check_invoice(address=None, invoice_id=None)
&lt;ul&gt;
&lt;li&gt;returns amount_in_mempool, amount_received (1 to X confirmations), amount_confirmed (X confirmations), and paid which is a boolean.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;when a user registers for the API, they can either provide a view-wallet, or a wallet is created for them&lt;/li&gt;
&lt;li&gt;if no view-wallet is provided, there should be functionality to transfer upon payments, through a UI, or through a more restrictive API&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A non-custodian processing service does not exist as far as I know, so I might create one and charge a monthly $5 fee.&lt;/p&gt;
&lt;h3 id=&#34;pros&#34; &gt;Pros
&lt;span&gt;
    &lt;a href=&#34;#pros&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;allows using the same architecture accross a multitude of apps&lt;/li&gt;
&lt;li&gt;good for entreprise&lt;/li&gt;
&lt;li&gt;decouples processing from application code&lt;/li&gt;
&lt;li&gt;long-term perfection&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;cons&#34; &gt;Cons
&lt;span&gt;
    &lt;a href=&#34;#cons&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;requires additional servers and calls to said server&lt;/li&gt;
&lt;li&gt;bad for short-term&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>XMR-BTC Atomic Swap ASB Guide</title>
      <link>https://blog.elijahlopez.ca/posts/xmr-btc-atomic-swap-asb/</link>
      <pubDate>Tue, 10 May 2022 17:07:56 -0400</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/xmr-btc-atomic-swap-asb/</guid>
      <description>&lt;p&gt;A tutorial made for myself, not really others because
the &lt;a href=&#34;https://github.com/comit-network/xmr-btc-swap/blob/master/docs/asb/README.md&#34;&gt;docs&lt;/a&gt;
aren&amp;rsquo;t straight forward!&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download &lt;a href=&#34;https://github.com/comit-network/xmr-btc-swap/releases/latest&#34;&gt;ASB and Swap zips&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Extract to &lt;code&gt;C:\Users\%USERNAME%\Documents\Monero&lt;/code&gt; or &lt;code&gt;~/Documents/Monero&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run the monero-rpc-wallet (pre-req: add monero install location to PATH)
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://monero.fail/?nettype=stagenet&#34;&gt;Find stagenet node&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Use port 28088 if mainnet/production&lt;/li&gt;
&lt;li&gt;Security risk: rpc-login is disabled&lt;/li&gt;
&lt;li&gt;wallet-dir: directory of an existing wallet (match to stagenet or mainnet)&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;C:\Users\maste\Documents\Monero&amp;gt;monero-wallet-rpc --stagenet --daemon-host http://stagenet.melo.tools:38081 --rpc-bind-port 38083 --disable-rpc-login --wallet-dir wallets/stagenet_one
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Make sure this guide is readable with your terminal open&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;asb --testnet start&lt;/code&gt; in a new terminal window and press enter for everything. Do not use Ctrl or Alt.&lt;/li&gt;
&lt;li&gt;A wallet will be created in 10 seconds&lt;/li&gt;
&lt;li&gt;If you close the ASB and want to start it again, restart the RPC to avoid a &amp;ldquo;wallet already exists error&amp;rdquo; from the ASB&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Why Monero Is the Best Crypto-Currency</title>
      <link>https://blog.elijahlopez.ca/posts/why-monero-is-the-best-crypto-currency/</link>
      <pubDate>Sat, 26 Feb 2022 11:37:57 -0500</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/why-monero-is-the-best-crypto-currency/</guid>
      <description>&lt;h2 id=&#34;arguments&#34; &gt;Arguments
&lt;span&gt;
    &lt;a href=&#34;#arguments&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Fungibility&lt;/li&gt;
&lt;li&gt;Privacy Reliability (Layer 1)&lt;/li&gt;
&lt;li&gt;ASIC Resistance&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;introduction&#34; &gt;Introduction
&lt;span&gt;
    &lt;a href=&#34;#introduction&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;This article is meant to be the definitive guide on why Monero is the king of all cryptos when it comes to fulfilling the role of money or real currency.
It is long in order to be thorough including foreseeing common responses/tactics. I am open to debate, but I will say that when it comes to crypto, privacy is a must.&lt;/p&gt;
&lt;p&gt;The intended target audience is an open-minded reader interested in cryptocurrency as well as fellow Monero users who continuously answer questions such as &amp;ldquo;why does Monero (not) do X?.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;I like Monero for two reasons: its technology and the community&amp;rsquo;s self-improvement philosophy.
I am not loyal to Monero, it is simply the best crypto that can replace fiat currency.
I own Monero not for number goes up economics but for myself and others who want to increase its adoption as an accepted currency.&lt;/p&gt;
&lt;p&gt;We will be comparing Monero to a couple of cryptos. Bitcoin (BTC), Ethereum (ETH), Solana (SOL), Stellar (XLM), and ZCash (ZEC).
There&amp;rsquo;s also Secret Network, but so far, they want to integrate with Monero, not replace it.
I will also talk about layer 2 solutions: BTC&amp;rsquo;s Lightning, BCH&amp;rsquo;s CashFusion, ETH&amp;rsquo;s Tornado Cash.&lt;/p&gt;
&lt;p&gt;For all other cryptos/solutions, one can use the transitive property: If Monero &amp;gt; X and X &amp;gt; Y, then Monero &amp;gt; Y.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s begin with what Monero is. If Monero is new to you, watch this video.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/6DQb0cMvU7I&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Otherwise, optionally read the bullet points in the next section as these are the core features that give Monero a technological advantage from the other cryptos when it comes to Fungibility, Privacy, and Consensus. Transaction Fees*, Supply*, and International Standards*.
*non-important factors but are good to know&lt;/p&gt;
&lt;p&gt;I will admit foremost that Monero aims to fulfill the primary role of a currency and does not have Smart Contract capabilities. Could it be done on layer 2? Maybe. I do urge any readers to make a case for smart contracts as I have not thought of or seen any that will improve my life. One case I can come up with however is recurring payments, but even fiat does not need smart contracts to facilitate them. Services can be created to offer recurring payments on top of any currency for that matter. A question to think about is: do recurring payments offer more advantages than disadvantages?&lt;/p&gt;
&lt;h2 id=&#34;moneros-distinct-and-important-features&#34; &gt;Monero&amp;rsquo;s Distinct and Important Features
&lt;span&gt;
    &lt;a href=&#34;#moneros-distinct-and-important-features&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;There is no balance checker. No one knows how much any address holds or exactly whom the address has transacted with. The rich list is an inside joke filled with ???? XMR. The direct consequence of this is that you can&amp;rsquo;t add up the value of everyone&amp;rsquo;s XMR.
The supply can only be calculated by the sum of the coinbases of each block. Bulletproofs (range proofs) ensure that the senders have enough XMR, without revealing the XMR that they have.
I want to make it clear that the inability to sum the value of addresses in Monero is a feature, not a flaw. Money cares about usability, not countability.&lt;/li&gt;
&lt;li&gt;Transaction values and messages are known only to the sender and receiver. Audited bulletproofs (range proofs) technology is used to ensure that the sender has the amount of Monero they are trying to send. Zcash requires the setup to be trusted but not Monero.&lt;/li&gt;
&lt;li&gt;Monero uses stealth addresses to obscure the number of times an address has received Monero. These are similar to the modulus concept where (x mod 5 = 3) has an infinite number of solutions. They are created by the sender to protect the information of the receiver. That way, an observer is uncertain how many times a targeted address has actually received Monero. All wallets implement this, so only a bad actor would not create a stealth address, but Monero doesn&amp;rsquo;t rely on just stealth addresses.&lt;/li&gt;
&lt;li&gt;Monero uses ring signatures to protect the identity of the sender. At the moment, each transaction has 10 other possible signatories, called decoys, as seen here. These signatories are biased towards being from recent blocks that have 10 confirmations rather than older blocks. I won&amp;rsquo;t talk about technicalities here, but if you are interested, feel free to visit the Monero Research Lab.&lt;/li&gt;
&lt;li&gt;One seed is the key to an infinite amount of accounts each with an infinite amount of addresses. Think of this like having multiple chequing accounts and each has multiple direct deposit numbers. These accounts are mathematically created, so the nth account will always be the same on different wallet clients.&lt;/li&gt;
&lt;li&gt;Transaction fees reduce as the number of transactions increase&lt;/li&gt;
&lt;li&gt;Block sizes are dynamic in the long term but capped by miner penalties in the short term ensuring block size stability. There is technical information to this, but know that if transaction activity doubles, the next block&amp;rsquo;s size won&amp;rsquo;t be double the previous.&lt;/li&gt;
&lt;li&gt;The above are all technical features that directly benefit the end-user. The below are for readers who want a holistic view.&lt;/li&gt;
&lt;li&gt;Monero is a proof-of-work network using the RandomX algorithm for its ASIC resistance. We will talk about proof-of-stake and why ASIC resistance later.&lt;/li&gt;
&lt;li&gt;Interesting fact: Monero is built from scratch, not a Bitcoin fork. It is actually a Bytecoin fork but has improved several times over.&lt;/li&gt;
&lt;li&gt;Monero embraces the philosophy of always-improving technology. The goal is to be the best and hard forks are encouraged in achieving this goal.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;fungibility&#34; &gt;Fungibility
&lt;span&gt;
    &lt;a href=&#34;#fungibility&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Culpable cryptos: Most except Monero, its forks, and possibly some mimblewimble coins&lt;/p&gt;
&lt;p&gt;For a crypto to be money, it has to be fungible. If crypto is not fungible, users are at risk of being denied service for not being &amp;ldquo;right.&amp;rdquo; The definition of right would be dependent on the receiver and could even be legislated by governments. Transaction histories allow this to happen and there&amp;rsquo;s no guarantee you aren&amp;rsquo;t being watched for maybe transacting with someone who had the &amp;ldquo;wrong&amp;rdquo; coins. This is an issue with all cryptocurrencies except for Monero. With ZEC, since transactions are public by default, and most transactions on the blockchain are public, having the option for public transactions means that receivers can simply refute any transaction that isn&amp;rsquo;t public. This is true for exchanges. Exchange use t-addresses for ZEC, not the shielded ones.&lt;/p&gt;
&lt;p&gt;Now you may say not having fungibility prevents money laundering and duly hurts criminals (does it really though?), but what about the undue harm to individuals? The definition of a criminal is different in every country. According to &lt;a href=&#34;https://www.humandignitytrust.org/lgbt-the-law/map-of-criminalisation/&#34;&gt;Humanity Dignity Trust&lt;/a&gt;, engaging in homosexual activities is a crime in 71 countries. We actively hurt marginalized groups when we promote non-fungible cryptos. If you and your same-sex partner shared crypto together, an authoritative government can easily suspect you of sleeping together, since sharing bank/money accounts is more common among partners than friends. If you like to argue in bad faith by saying maybe they are just father-son, you&amp;rsquo;d be lying to yourself if you think governments making homosexuality a crime is going to think half of the people sharing an account with the same-sex is just a rich parent.&lt;/p&gt;
&lt;h2 id=&#34;on-zcash&#34; &gt;On ZCash
&lt;span&gt;
    &lt;a href=&#34;#on-zcash&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Now is a good time to dismantle ZCash. Z-cash offers privacy optionally and not even by default. That is the only reason it is on more exchanges than Monero. To my knowledge, no exchange that supports ZCash and not Monero allows shielded deposits (50% sure) and withdrawals. Additionally, transparent transactions are the default, most transactions on the blockchain were transparent ones, and users have to trust that ZCash was set up without any bad actors. Transactions being transparent by default make shielded transactions stick out. This leads to discrimination and suspicion of users that use shielded transactions. In addition to these issues, ZCash gives 10% of the total supply to their own founders. This goes against equitable decentralization and democracy.&lt;/p&gt;
&lt;p&gt;Furthermore, ZCash does not protect transaction values for even transparent -&amp;gt; shielded addresses. Having two types of addresses means that senders can discriminate against shielded address users. This two type system means that common behaviours such as transacting in short periods of time can be susceptible to blockchain analysis and has been traced before by even an &lt;a href=&#34;https://twitter.com/The8Connor/status/1284900368116330497&#34;&gt;individual&lt;/a&gt;. &amp;ldquo;having unshielded TX inherently make shielded ones less private&amp;rdquo; - &lt;a href=&#34;https://www.reddit.com/r/CryptoCurrency/comments/hubbvg/comment/fym8yn9/?utm_source=share&amp;amp;utm_medium=web2x&amp;amp;context=3&#34;&gt;u/lol_VEVO&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Adding more insult to privacy advocates, the founder - Zooka - once (drunkenly) tweeted that they would add privacy by default and that they would take it away from criminals. Needing to trust the setup does make it possible… The fact that the founder holds this opinion shows us that ZCash isn&amp;rsquo;t interested in privacy as a human right, only privacy for those who hold the right opinion. By the way, the definition of criminal varies from country to country as I said in the last section. I&amp;rsquo;m attacking the vision of ZCash&amp;rsquo;s leader which is fair game.&lt;/p&gt;
&lt;p&gt;In the Monero community, one of Monero&amp;rsquo;s paid workers was also working for another crypto project. There is more to this story, but the conflict of interest was brought up in the community and the worker resigned.&lt;/p&gt;
&lt;p&gt;The general fund was also questioned and a general fund report was created.&lt;/p&gt;
&lt;h2 id=&#34;privacy&#34; &gt;Privacy
&lt;span&gt;
    &lt;a href=&#34;#privacy&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Privacy is defined as protecting sensitive information such as networth, transaction value, and if a person transacted.
Culpable cryptos: All except Monero, its forks, ZCash&amp;rsquo;s shielded transactions, and possibly mimblewimble coins.
There are layer 2 solutions, but like I said before, these aren&amp;rsquo;t easy to use, and are prone to ignorance. Users would be required to know about them, they cost more,
the transactions stand out, and the user looks automatically suspicious for transacting differently than other people on the network.&lt;/p&gt;
&lt;p&gt;With Monero, the defaults are private and deviation from the defaults erodes users&amp;rsquo; own privacy, and so it is not encouraged unless you
know what you are doing! Churning, timelocks (DO NOT TOUCH THIS), and sending to multiple addresses comes to mind.&lt;/p&gt;
&lt;p&gt;Privacy is a fundamental human right. Any cryptocurrency that doesn&amp;rsquo;t protect the balance of a wallet by protecting the history of transactions, puts the owner at risk from bad actors. One should not have to take many precautions such as using multiple wallets just for some privacy. One would also have to somehow keep each wallet&amp;rsquo;s coins separated from each other. Then there are mixers. Mixers/Tumblers are 2014 technology. They cost more transaction fees, take time, and spam the network. Objectively speaking, a cryptocurrency that can protect your privacy with one transaction is much better than a cryptocurrency that requires you to use 3rd party tools for some possible privacy. How can you be certain that proprietary blockchain analysis tools haven&amp;rsquo;t already figured out a way to map out tumbled coins?&lt;/p&gt;
&lt;p&gt;Here is a real example of the privacy provided by the fiat banking system: In Canada, we have Interac eTransfers. When I send an eTransfer to my friend, or vice-versa, we don&amp;rsquo;t know how much each other has. But if we had used BTC, ETH, SOL, XLM, and by ZEC (default configuration for the sender), we could&amp;rsquo;ve seen each others&amp;rsquo; balances. We simply cannot expect any crypto to replace fiat if the privacy will end up being worse than using fiat. This is of course assuming a world where crypto prices have reduced volatility. Before you say &amp;ldquo;people do not care about privacy,&amp;rdquo; please tell me would you leave the door open at a public washroom? People do care about privacy, they just prefer convenience more. Monero aims to be the convenient solution that is private.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s dismantle some arguments that think network effect + layer n solutions &amp;gt; layer 1 privacy. I will not be using # of users as an argument when there are more Monero users than there are users using the Layer n solution.&lt;/p&gt;
&lt;h3 id=&#34;tumblers&#34; &gt;Tumblers
&lt;span&gt;
    &lt;a href=&#34;#tumblers&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Requires users to trust centralized service or do it yourself which is tricky for new users.&lt;/li&gt;
&lt;li&gt;Tumblers can be traced by blockchain analytic companies&lt;/li&gt;
&lt;li&gt;Transaction fees ++&lt;/li&gt;
&lt;li&gt;Network spam ++&lt;/li&gt;
&lt;li&gt;Does not protect balances and thus would require managing at least two addresses just to reach the basic level of Monero&amp;rsquo;s privacy. UX is much simpler and thus better for Monero. Monero has its own UX faults, but they are all UI and not technical. UI can always be improved at no cost to the user.&lt;/li&gt;
&lt;li&gt;Requires user knowledge&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;btc--lightning&#34; &gt;BTC &amp;amp; Lightning
&lt;span&gt;
    &lt;a href=&#34;#btc--lightning&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Inbound liquidity. You need 5 BTC to receive ≤ 5 BTC. This is a rich get the richer scheme, and it&amp;rsquo;s not mentioned often enough.
Many people around the world live paycheck to paycheck, people simply cannot be paid in BTC-Lightning because of this incredible flaw. Remember we are dicussing cryptocurrency as money.&lt;/li&gt;
&lt;li&gt;Onboarding issues (L1 Transaction)
&lt;ul&gt;
&lt;li&gt;Fees: opening a channel requires you to tie up BTC into a channel and costs you a transaction fee.&lt;/li&gt;
&lt;li&gt;Limited Transactions/day: There isn&amp;rsquo;t enough time in the world to onboard billions of people who require money to transact&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Balance attack. An attacker can send fake transactions to your invoice to determine your channel balance. You may argue you can have multiple channels or you can store most BTC on layer 1, but how is that more convenient than Monero? You end up having to keep track of and think about more than if you had just used Monero.&lt;/li&gt;
&lt;li&gt;Requires invoicing (being online). For you to send money to me, I have to create an invoice for you to send money to. You have to ask me for permission to send me money! This is absurd, donations would require more work than what layer 1 provides, and is worse than the fiat system.
Hosting a website or using a centralized service is not a solution to this problem. Privacy is hindered with these alternatives. Why make life difficult when a solution already exist?&lt;/li&gt;
&lt;li&gt;Node network. To send BTC through lightning to someone you don&amp;rsquo;t have a channel open with, you have to HOPE that they are connected indirectly to you via a chain of mutual nodes through another channel you have open. Usability would require the centralization of payment channels and thus is not really secure.&lt;/li&gt;
&lt;li&gt;There are probably more issues that I do not know about&lt;/li&gt;
&lt;li&gt;There are more Monero users than there are channels on Lightning. Atomic swap to Monero is easier than using Lightning channels.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;mixing&#34; &gt;Mixing
&lt;span&gt;
    &lt;a href=&#34;#mixing&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Every piece of BTC has history to it.&lt;/li&gt;
&lt;li&gt;Ever heard of adverse selection? Users of BTC that has been tainted are more likely to wash it by methods including mixing.&lt;/li&gt;
&lt;li&gt;You are risking your own BTC, by using mixing services.&lt;/li&gt;
&lt;li&gt;Not to mention, these mixing services can get hacked or shut down for money laundering&lt;/li&gt;
&lt;li&gt;More expensive than base transaction&lt;/li&gt;
&lt;li&gt;Requires user knowledge&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;btc-xmr-atomic-swap&#34; &gt;BTC-XMR Atomic Swap
&lt;span&gt;
    &lt;a href=&#34;#btc-xmr-atomic-swap&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Some BTC users think the BTC-XMR swap makes BTC better because BTC users now have another way to wash their money&lt;/li&gt;
&lt;li&gt;They promote swapping to XMR and then swapping back to BTC!&lt;/li&gt;
&lt;li&gt;These are the users who use BTC because it is first, not because they think the tech is the best&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;bch--cashfusion-&#34; &gt;BCH + CashFusion 💵
&lt;span&gt;
    &lt;a href=&#34;#bch--cashfusion-&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;CashFusion obfuscates the sender of the coins but does not protect the owner&amp;rsquo;s balances. If you give me your BCH address, I still know how much you own. You&amp;rsquo;d have to maintain two addresses, one for receiving and one for sending just to get to the basic privacy protections Monero offers without any addon or user knowledge requirement.&lt;/p&gt;
&lt;p&gt;CashFusion relies on a single server which means that it&amp;rsquo;s centralized and prone to &lt;a href=&#34;https://www.reddit.com/r/btc/comments/pwupmn/comment/hem7yuc/?utm_source=share&amp;amp;utm_medium=web2x&amp;amp;context=3&#34;&gt;attacks&lt;/a&gt;. If one manages to take out CashFusion, all cash-fusions are unable to be completed. This is worse than Visa and MasterCard who have their own node network. These centralized companies are more decentralized than CashFusion itself! Reminder: Facebook, an almost $1T company went down for hours on Monday, October 4th, 2021 due to a DNS issue. Centralized internet services are all prone to being unusable by a user. The good thing is that there is no risk of losing funds (according to CashFusion).&lt;/p&gt;
&lt;p&gt;Instead of using a basic BCH wallet, you now have to use CashFusion&amp;rsquo;s network. This is no different from simply downloading a Monero wallet and swapping BCH for XMR.&lt;/p&gt;
&lt;p&gt;Bitcoin Cash users have the right mindset; privacy is a human right.
They like the idea of privacy but have this loyalty towards BCH similar to smokers opting for cigarettes over ecigs.
One is objectively better than the other. Crypto is still in its infancy, so it&amp;rsquo;ll take 10 years for people to stop acting like hard drug users who should be using psychedelics instead.&lt;/p&gt;
&lt;h2 id=&#34;eth--tornado-cash&#34; &gt;ETH + Tornado 🌪 Cash
&lt;span&gt;
    &lt;a href=&#34;#eth--tornado-cash&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;The good thing about Tornado cash compared to CashFusion is that you don&amp;rsquo;t have to rely on a centralized service. The web app is a UI for the Tornado: Mixer smart contract. This is a very good use of smart contracts but still, this service does not bring Ethereum up to Monero&amp;rsquo;s default protections.&lt;/p&gt;
&lt;p&gt;For one, you are restricted to sending and withdrawing 4 different quantities of ETH. How I would use Tornado is if I needed to &amp;ldquo;cleanse&amp;rdquo; ETH, I&amp;rsquo;d have to continuously send ETH to and then withdraw to different addresses each time. That&amp;rsquo;s 9 addresses if I had to move 0.9 ETH, not including transaction fees, the .0X amount of ETH left, and even the time/headache just to accomplish this. Up to $270 would be forfeited in order to get transaction privacy, not balance privacy.&lt;/p&gt;
&lt;p&gt;A single Monero seed can have an infinite number of accounts and each account can have an infinite number of subaddresses. Instead of subaddresses showing up on the blockchain, a stealth address is created by the sender on the receiver&amp;rsquo;s behalf and shows up on the transaction. Each transaction also has 7 other possible signatures (sender&amp;rsquo;s being a stealth address again) and so the sender is protected as well. The transaction amount is also unknown to observers&lt;/p&gt;
&lt;p&gt;A single Monero seed can have an infinite number of accounts and each account can have an infinite number of subaddresses. Instead of subaddresses showing up on the blockchain, a stealth address is created by the sender on the receiver&amp;rsquo;s behalf and shows up on the transaction. Each transaction also has 7 other possible signatures (sender&amp;rsquo;s being a stealth address again) and so the sender is protected as well. The transaction amount is also unknown to observers.&lt;/p&gt;
&lt;p&gt;Tornado Cash is just a mixer and like all mixer&amp;rsquo;s unless all transactions go through Tornado, ETH with a history dating to a Tornado can be seen as more suspicious than non-Tornado ETH.&lt;/p&gt;
&lt;p&gt;Ethereum has one thing over Monero which is smart contracts but just because they are called smart, does not mean they are used in a very smart way. DAO exploit resulted in a hard fork because it affects the founders, then there&amp;rsquo;s the Polygon exploit, and the Indexed Finance exploit. Even after being audited, smart contracts can be exploited. DeFi is simply less secure at the moment compared to proprietary banking systems that are at least insured up to $100,000 per person. It&amp;rsquo;s open-source minus the community inspection. I do hope DeFi improves in the coming years but a question for the reader is why Ethereum and not Solana, Cardano, Stellar? Should Ethereum really move away from proof-of-work? Let&amp;rsquo;s find out in the next subsection.&lt;/p&gt;
&lt;p&gt;Ethereum has one thing over Monero which is smart contracts but just because they are called smart, does not mean they are used in a very smart way. DAO exploit resulted in a hard fork because it affects the founders, then there&amp;rsquo;s the Polygon exploit, and the Indexed Finance exploit. Even after being audited, smart contracts can be exploited. DeFi is simply less secure at the moment compared to proprietary banking systems that are at least insured up to $100,000 per person. It&amp;rsquo;s open-source minus the community inspection. I do hope DeFi improves in the coming years but a question for the reader is why Ethereum and not Solana, Cardano, Stellar? Should Ethereum really move away from proof-of-work? Let&amp;rsquo;s find out in the next subsection.&lt;/p&gt;
&lt;h2 id=&#34;consensus-algorithm&#34; &gt;Consensus Algorithm
&lt;span&gt;
    &lt;a href=&#34;#consensus-algorithm&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;h3 id=&#34;proof-of-stake-pos-vs-delegated-proof-of-stake-dpos&#34; &gt;Proof-of-Stake (PoS) vs Delegated Proof-of-Stake (DPoS)
&lt;span&gt;
    &lt;a href=&#34;#proof-of-stake-pos-vs-delegated-proof-of-stake-dpos&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;Before we compare staking to working, let us first decide what&amp;rsquo;s objectively a better staking mechanism. DPoS suffers from even more issues compared to normal staking. Delegation is not more democratic, it&amp;rsquo;s more centralized.
The rich have more votes, increase their delegate&amp;rsquo;s likelihood of winning, and giving the rich voters a bigger share of the rewards.
There is a sacrifice of centralization in the name of scalability and even according to Vitalik (ETH founder), there are incentives for the delegates to collude.
In conclusion DPoS is worse than PoS so I will compare PoW to PoS.&lt;/p&gt;
&lt;h3 id=&#34;proof-of-work-pow-vs-proof-of-stake-pos&#34; &gt;Proof-of-Work (PoW) vs. Proof-of-Stake (PoS)
&lt;span&gt;
    &lt;a href=&#34;#proof-of-work-pow-vs-proof-of-stake-pos&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;So now we have come to the discussion of PoW vs PoS. Unlike previous PoS critics, I&amp;rsquo;ll be arguing that PoW is better than PoS from the equity point of view and that PoS benefits the wealthy more than PoW.
PoS critics usually try to argue that PoS is less secure than PoW, but I have never seen them respond back to the solutions proposed that punish bad actors. That is why I don&amp;rsquo;t consider them as solid arguments and will merely mention them.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In PoW, there are costs to validating transactions in a block. The mining rewards are an incentive but a cost must be taken for a chance to get the rewards. There is real risk involved.&lt;/li&gt;
&lt;li&gt;With PoS, the rich arguably get richer. A better argument is that the rich do not distribute or invest their coins in order to get richer. With PoW, the rich will have to actively spend their crypto (assuming a crypto world), distributing their coins to hardware companies and then the working class, in order to simply get the chance of more money. There is a measurable physical cost associated with it. Rewards are distributed to those who put in the most work, and not people who had the most. PoS is like a Central Bank giving newly printed money more often to the people who have saved the most. What&amp;rsquo;s to stop the UN to start a resolution that requires countries to buy up all PoS coins and then stake them together? Then the supply of ETH is fully controlled by the government at no cost to them.&lt;/li&gt;
&lt;li&gt;This point is more economical and theoretical than about PoS: Inflation is when prices increase year over year. If done correctly, there is a higher cost to money hoarders than those who have an appropriate amount saved. The cost to live should be non-increasing but the cost of luxury goods should be non-decreasing and a marginal property tax can help tackle wealth inequality without direct discrimination. The wealthy should be able to live where they want and own as many properties as they desire but they should be dissuaded in raising the cost to live for others. I say all this because crypto should not benefit the fortunate more than the unfortunate. It should benefit innovation, and risk. I have purposely excluded investment because a scam also requires an investment and that is not something crypto should reward. Pre-mined coins disproportionately rewards those in power and not necessarily those that take on risk. The first buyers take on more risk than those who are facilitating the presale. There is more trust required than a PoW coin that simply utilizes users&amp;rsquo; CPU. The price of the token is determine by those that mine it and are not set by the founders/upper class.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@abhisharm/understanding-proof-of-stake-through-its-flaws-part-3-long-range-attacks-672a3d413501&#34;&gt;Weak Subjectivity&lt;/a&gt;
When a node comes online for the first time, how will the node know the hash of the valid chain? In PoW, the correct chain is objectively the longest chain which is determined by computation power. In PoS, the new node will have to trust other nodes to be broadcasting the right information. Let&amp;rsquo;s look at Vitalik&amp;rsquo;s argument: &amp;ldquo;consider the kind of situation where weak subjectivity by itself would compromise a blockchain&amp;rsquo;s security. In such a world, powerful corporate or nation state actors would have the ability to somehow convince an entire community that block hash B was the block hash of block XXXYYY when most of them saw at the time and have stored in their own computers that the block hash of block XXXYYY was A, but for some reason such powerful actors would not have the ability to trick users into accepting a different location from where they download their client software.&amp;rdquo;
According to Vitlak, a bad actor cannot set up more than half the network&amp;rsquo;s nodes and broadcast the wrong hash such that when the nodes restart due to a network update, they won&amp;rsquo;t rely on false information? It&amp;rsquo;s pretty obvious that the cost to set up 51% of broadcasting nodes is considerably less than the cost to achieve 51% of the network&amp;rsquo;s hash rate.
I&amp;rsquo;ll admit this argument is very fuzzy, but I am open to removing it completely if one is willing to provide an unbiased risk analysis of weak subjectivity.&lt;/li&gt;
&lt;li&gt;Another argument is PoS is permissioned vs PoW&amp;rsquo;s permissionless. To get Monero, one can mine it on any CPU. For PoS, one needs to buy the crypto from another entity to participate in the system.&lt;/li&gt;
&lt;li&gt;A premine was probably required if there was never PoW and so PoS coins reward the rich at no cost to them. A system that favours merit over the oligarchs is always fairer.&lt;/li&gt;
&lt;li&gt;Other arguments that other people use (not part of my actual argument, just something to think about): Accumulated work (reversing the PoS chain is faster than than the PoW chain), finality requires 2/3 instead of 51%.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I strongly believe that ETH 2.0 will show everyone if PoS is here to stay or is significantly less secure than PoW, but what it won&amp;rsquo;t show that it is more equitable than PoW.&lt;/p&gt;
&lt;p&gt;As for Monero. Monero would only adopt PoS if the community voted for it and for the time being, that seems unlikely. Any Monero fork that uses PoS will be used less than Monero itself, and by the network effect, Monero will be used, not PoSonero.&lt;/p&gt;
&lt;h2 id=&#34;asic-resistant-proof-of-work&#34; &gt;ASIC Resistant Proof-of-Work
&lt;span&gt;
    &lt;a href=&#34;#asic-resistant-proof-of-work&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Now that we have determined that PoW is more secure than PoS, let&amp;rsquo;s figure out why PoW is better on Monero than the other PoW cryptos like BTC.&lt;/p&gt;
&lt;p&gt;For a proof-of-work network to be secure, it needs to prevent centralization and advantages. Cryptos like ETH1, BTC, BCH are all compatible with ASICs and thus prone to centralization by big corporations with ASIC farms. Monero however, uses the (4x audited) RandomX algorithm is optimized to run better on CPUs than GPUs and ASICs. Before &lt;a href=&#34;https://github.com/tevador/RandomX/blob/master/doc/design.md&#34;&gt;RandomX&lt;/a&gt;, Monero needed hard forks to render any specialized ASICs useless, but with RandomX, the virtualisation techniques increased the complexity of implementing ASICs.&lt;/p&gt;
&lt;p&gt;The logic behind ASIC resistance is as &lt;a href=&#34;https://www.reddit.com/r/Monero/comments/ggdp8e/comment/fq0332a/?utm_source=share&amp;amp;utm_medium=web2x&amp;amp;context=3&#34;&gt;follows&lt;/a&gt;: PoW algorithms are meant to be inefficient for ALL parties. ASICs allow for hardware advantages and thus greater efficiency for some parties than the individual. The ASIC manufacturer maintains a hardware advantage over other miners and can thus produce more hashes per Watt than other miners. This is objectively more centralized. Example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-md&#34; data-lang=&#34;md&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Let CPU hashes per core = x hashes / watt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;# SHA-256
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;&lt;/span&gt;ASIC hashes per core = nx Hashes / Watt, n &amp;gt; 1 [Advantage to specialist]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;# RandomX
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;&lt;/span&gt;ASIC hashes per core &amp;lt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;Hashes&lt;/span&gt; &lt;span style=&#34;color:#a61717;background-color:#e3d2d2&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;Watt&lt;/span&gt; &lt;span style=&#34;color:#a61717;background-color:#e3d2d2&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;due&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;Randomness&lt;/span&gt; &lt;span style=&#34;color:#a61717;background-color:#e3d2d2&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;Virtualisation&lt;/span&gt;&lt;span style=&#34;color:#a61717;background-color:#e3d2d2&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;ASICs&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;cannot&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;be&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;made&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;outperform&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;CPUs&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;since&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;entire&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;algorithm&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;creates&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;random&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;program&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;that&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;leverages&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;many&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;CPU&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;features&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;possible&lt;/span&gt;&lt;span style=&#34;color:#a61717;background-color:#e3d2d2&#34;&gt;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Not only would it be costly and difficult to create an ASIC to run RandomX more efficiently, but there is also a massive risk that Monero can simply hard fork again and use a modified algorithm. There are more lucrative opportunities for profit-driven firms than to try and create a complex ASIC for an algorithm purposely created to make the process difficult.&lt;/p&gt;
&lt;h2 id=&#34;transaction-fees-and-liquidating-monero&#34; &gt;Transaction Fees, and Liquidating Monero
&lt;span&gt;
    &lt;a href=&#34;#transaction-fees-and-liquidating-monero&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;I&amp;rsquo;m only including this for everyone to get the idea that transaction fees are only horrible for ETH at the moment.&lt;/p&gt;
&lt;p&gt;To properly compare fees, we will normalize each cryptocurrency market cap to that of Bitcoins, to get the normalized price and thus normalized USD fee. For most cryptos, transactions correlate with fees but not with Monero; the opposite is true, one factor being dynamic block sizes that end up lowering the fees per transaction as transactions/block increases. The argument for fees is to penalize spam, which is the attack on NANO that went on for months. The only incentive to run a NANO node is to accept NANO…The entire worth is derived from the network effect and not actual technology or cost like PoW cryptos.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.elijahlopez.ca/images/crypto/transaction-fees.png&#34; alt=&#34;Transaction fees table&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.google.com/spreadsheets/d/1WfRmKKbGrSF_t95fattTJYfZXL2qk6-byNjCXh-oYA4/edit#gid=0&#34;&gt;Source of calculations&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;notes&#34; &gt;Notes
&lt;span&gt;
    &lt;a href=&#34;#notes&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;For Ethereum, the normalized Fee is poised to change when ETH 2 rolls out which will allegedly make it competitive with Solana.&lt;/li&gt;
&lt;li&gt;With Monero, transaction fees actually decrease as transactions increase due to dynamic block sizes. You can read more about dynamic block sizes in my Intro to Monero at the beginning of this article. If the minimum transaction fees are deemed too high, Monero can always reduce it in a hard fork, but at the moment there is no need.&lt;/li&gt;
&lt;li&gt;With Stellar, the fee was back-calculated from $0.00025 / transaction currently. I&amp;rsquo;m not sure if it&amp;rsquo;s tied to fiat or just transaction traffic.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There really isn&amp;rsquo;t much to say about transaction fees. Anything less than $2 / transaction is good since credit card transactions cost %1.5–3 and thus sellers can accept crypto transactions that are short up 2%.&lt;/p&gt;
&lt;p&gt;Supply caps and block reward reductions may play a role in the future, but I&amp;rsquo;d rather wait and see make baseless speculations.
This is an unknown type of risk with Bitcoin in its current state.&lt;/p&gt;
&lt;h2 id=&#34;international-standards&#34; &gt;International Standards
&lt;span&gt;
    &lt;a href=&#34;#international-standards&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Lastly, Monero and Stellar both use the ISO 4217 currency standard for international currencies just like XAU is for one troy ounce of gold. This reason is a semantic one, so that&amp;rsquo;s why it&amp;rsquo;s last.&lt;/p&gt;
&lt;h2 id=&#34;liquidating-and-purchasing-monero&#34; &gt;Liquidating and Purchasing Monero
&lt;span&gt;
    &lt;a href=&#34;#liquidating-and-purchasing-monero&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;This is not important to the argument, however it is important for Monero users.&lt;/p&gt;
&lt;p&gt;By now if you hate Monero, you will be tempted to start throwing a temper tantrum about Monero being de-listed and the &amp;ldquo;fear of regulations&amp;rdquo;. Guess what you can use instead? You can use &lt;a href=&#34;https://fixedfloat.com/&#34;&gt;fixedfloat&lt;/a&gt; to exchange XMR to XLM for a 0.5% fee and then deposit XLM on the exchange you use to sell immediately to fiat. Make sure the exchange you use can be trusted or that any crypto you deposit can be recovered through at least legal means. The reason I chose XLM and not any other crypto is because I did the math, and the math says that Stellar is the cheapest today to use as a medium.&lt;/p&gt;
&lt;p&gt;To buy Monero, just do the same as above, but the other way around.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.elijahlopez.ca/images/crypto/monero-swap-fees.png&#34; alt=&#34;Monero Swapping Fees&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;recap&#34; &gt;Recap
&lt;span&gt;
    &lt;a href=&#34;#recap&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Monero offers fungibility, all aspects of financial privacy without requiring users to know of specific techniques, and an ASIC-resistant proof-of-work system. These three important topics might make Monero the best cryptocurrency as of today, but its open-minded and always-improving technology is why it will continue to be the best. Monero is digital cash, not a Security.&lt;/p&gt;
&lt;p&gt;If you enjoyed this article and want to support my future works, feel free to donate anonymously: monero:84PR6SkYd5zaFLKDjAFrQfbaAg2c7SV3q3XDZ15QCpEZUggrN4YzY7n8m9XC3deXjo41yWHTm1LrsUpPTYGnRQbD9Cwp8En
Thanks to Monero, I only have one wallet that has multiple addresses and I don&amp;rsquo;t need to worry about someone curious spying on the amount of Monero I lost in a boating accident.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to Buy Monero in Canada</title>
      <link>https://blog.elijahlopez.ca/posts/how-to-buy-monero-in-canada/</link>
      <pubDate>Fri, 25 Feb 2022 22:56:02 -0500</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/how-to-buy-monero-in-canada/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ll be testing all of these methods except LocalMonero since the actual fee there is at least 20% as of 2022/4/21.
Testing is done by using converting the received XMR to CAD using the currency pair rates at the start of each new pair transaction.&lt;/p&gt;
&lt;h2 id=&#34;fixed-float&#34; &gt;Fixed Float
&lt;span&gt;
    &lt;a href=&#34;#fixed-float&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Assuming you can purchase XLM via &lt;a href=&#34;https://web.newton.co/r/YREHXA&#34;&gt;Newton&lt;/a&gt;, use &lt;a href=&#34;https://fixedfloat.com/XLM/XMR?ref=dybjhjrb&#34;&gt;Fixed Float&lt;/a&gt; for 0.5% - 1% fee per trade.&lt;/p&gt;
&lt;h2 id=&#34;kraken&#34; &gt;Kraken
&lt;span&gt;
    &lt;a href=&#34;#kraken&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;h3 id=&#34;cad---usd---xmr&#34; &gt;CAD -&amp;gt; USD -&amp;gt; XMR
&lt;span&gt;
    &lt;a href=&#34;#cad---usd---xmr&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;A deposit fee of 0.1% for etransfer (3k limit), a USD conversion fee of 0.2%, and a 0.16% post limit order fee to buy XMR, and a flat network fee to withdraw.
In total, that&amp;rsquo;s 0.46% as a maker and a 0.56% fee as a taker. You can use Etana to forgo the deposit fee, but I&amp;rsquo;m unsure if Etana has its
own fees and it does require KYC. A wire transfer requires being in-persona which might have its own fees; it does for my business account!&lt;/p&gt;
&lt;p&gt;My own results for the etransfer deposit method are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CAD/USD = 1.25625&lt;/li&gt;
&lt;li&gt;XMR/USD = 285.48&lt;/li&gt;
&lt;li&gt;a etransfer of 3,000 CAD becomes 2,970 CAD converted to 2,359.45 USD bought 8.2648521800 XMR withdrew and received 8.25152 XMR&lt;/li&gt;
&lt;li&gt;Fee = 3,000 - 8.25152 * 285.48 * 1.25625 = 40.72&amp;hellip; = 1.3574%&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Make sure to set the limit order one cent less than market with &lt;strong&gt;post&lt;/strong&gt; selected unless you are treating it as a security.&lt;/p&gt;
&lt;p&gt;The etransfer deposit fee took the largest chunk! I&amp;rsquo;ll have to test the other methods to compare.&lt;/p&gt;
&lt;h3 id=&#34;xlm---usd---xmr&#34; &gt;XLM -&amp;gt; USD -&amp;gt; XMR
&lt;span&gt;
    &lt;a href=&#34;#xlm---usd---xmr&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;Depositing XLM only incurs network fees. Selling to USD has a 0.16% fee for a post limit order, and a post limit order on XMR is another 0.16%.
That&amp;rsquo;s 0.34% as a 2x maker and 0.52% as a 2x taker.&lt;/p&gt;
&lt;h3 id=&#34;usd---xmr&#34; &gt;USD -&amp;gt; XMR
&lt;span&gt;
    &lt;a href=&#34;#usd---xmr&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;You&amp;rsquo;ll need a USD bank account for this and you&amp;rsquo;ll need Etana which is another KYC hurdle. Theoretically this method results in
a 0.16% fee as a maker and a 0.26% fee as a taker. I say theoretically though since I don&amp;rsquo;t know if there&amp;rsquo;s any fee from Etana&amp;rsquo;s side and
it&amp;rsquo;s not practical as like I said before, you need to have USD beforehand without a conversion fee.&lt;/p&gt;
&lt;h2 id=&#34;local-monero&#34; &gt;Local Monero
&lt;span&gt;
    &lt;a href=&#34;#local-monero&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://localmonero.co/?rc=nde2&#34;&gt;Local Monero&lt;/a&gt; is less private than FixedFloat and more than exchanges but costs way more (20%+ via CAD, 4.4%+ via XLM),
requires greater level of trust, and takes a longer time than exchanges ignoring the inital KYC time.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://nehdddktmhvqklsnkjqcbpmb63htee2iznpcbs5tgzctipxykpj6yrid.onion/?rc=nde2&#34;&gt;Local Monero TOR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://lm.i2p/?rc=nde2&#34;&gt;Local Monero I2P&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;conclusion&#34; &gt;Conclusion
&lt;span&gt;
    &lt;a href=&#34;#conclusion&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;In conclusion, it&amp;rsquo;s better to buy XLM on Newton, sell it for USD on Kraken, and then buy XMR with the USD.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to Create a Monero Stagenet Wallet</title>
      <link>https://blog.elijahlopez.ca/posts/how-to-create-a-monero-stagenet-wallet/</link>
      <pubDate>Mon, 21 Feb 2022 17:04:11 -0500</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/how-to-create-a-monero-stagenet-wallet/</guid>
      <description>
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/MlYorZQTmV4&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;I&amp;rsquo;m making this tutorial because there&amp;rsquo;s currently a bug in the GUI that won&amp;rsquo;t let
you make a stagenet wallet if you have already used a mainnet wallet.&lt;/p&gt;
&lt;h2 id=&#34;add-to-path-environment-variable&#34; &gt;Add to PATH Environment Variable
&lt;span&gt;
    &lt;a href=&#34;#add-to-path-environment-variable&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;This is optional but will help you in accessing the CLI in a terminal with any working directory&lt;/p&gt;
&lt;h2 id=&#34;creating-the-wallet-directory&#34; &gt;Creating the Wallet Directory
&lt;span&gt;
    &lt;a href=&#34;#creating-the-wallet-directory&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;h3 id=&#34;windows&#34; &gt;Windows
&lt;span&gt;
    &lt;a href=&#34;#windows&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;&lt;code&gt;cd %HOMEPATH%/Documents/Monero/wallets &amp;amp;&amp;amp; mkdir stagenet_one &amp;amp;&amp;amp; cd stagenet_one&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;unix&#34; &gt;Unix
&lt;span&gt;
    &lt;a href=&#34;#unix&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;p&gt;&lt;code&gt;cd ~/Documents/Monero/wallets &amp;amp;&amp;amp; mkdir stagenet_one &amp;amp;&amp;amp; cd stagenet_one&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;creating-the-wallet&#34; &gt;Creating the Wallet
&lt;span&gt;
    &lt;a href=&#34;#creating-the-wallet&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;monero-wallet-cli --stagenet --daemon-address=http://stagenet.xmr-tw.org:38081 --untrusted-daemon
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Enter wallet name: stagenet_one
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;For the next input: y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;open-wallet-from-gui&#34; &gt;Open Wallet from GUI
&lt;span&gt;
    &lt;a href=&#34;#open-wallet-from-gui&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Now you can open the stagenet wallet from your GUI&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
