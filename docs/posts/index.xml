<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on ELL Blog</title>
    <link>https://elibroftw.github.io/posts/</link>
    <description>ELL Blog (Posts)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 19 Dec 2021 19:51:55 -0500</lastBuildDate>
    
    <atom:link href="https://elibroftw.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Installing Libraries for C&#43;&#43; with Vcpkg and CMake</title>
      <link>https://elibroftw.github.io/posts/vcpkg_cmake_tutorial/</link>
      <pubDate>Sun, 19 Dec 2021 19:51:55 -0500</pubDate>
      
      <guid>https://elibroftw.github.io/posts/vcpkg_cmake_tutorial/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://youtu.be/FeBzSYiWkEU&#34;&gt;A video tutorial.&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;prerequisties&#34;&gt;Prerequisties&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;An IDE
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/download&#34;&gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://visualstudio.microsoft.com/downloads/&#34;&gt;Visual Studio 2022&lt;/a&gt; if on Windows for the compiler&lt;/li&gt;
&lt;li&gt;Any IDE that has pretty good CMake integration&lt;/li&gt;
&lt;li&gt;Otherwise, you will need to use &lt;code&gt;cmake&lt;/code&gt; yourself&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;A Compiler
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://visualstudio.microsoft.com/downloads/&#34;&gt;Visual Studio 2022&lt;/a&gt; if on Windows&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gcc&lt;/code&gt; (Linux)&lt;/li&gt;
&lt;li&gt;MSYS2/Mingw &lt;code&gt;gcc&lt;/code&gt; (Windows)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clang&lt;/code&gt; (MacOS?)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;installing-cmake&#34;&gt;Installing CMake&lt;/h2&gt;
&lt;p&gt;You will need &lt;a href=&#34;https://cmake.org/download/&#34;&gt;CMake 3.22+&lt;/a&gt; in order to use the Visual Studio 2022 compiler through VSCode.
The installer does most of the work, so you won&amp;rsquo;t have to manually add &lt;code&gt;cmake&lt;/code&gt; to PATH.&lt;/p&gt;
&lt;p&gt;In VSCode, you will need to install the &amp;ldquo;C/C++ Extension&amp;rdquo; and the &amp;ldquo;CMake Tools&amp;rdquo; extensions.&lt;/p&gt;
&lt;h3 id=&#34;installing-vcpkg&#34;&gt;Installing Vcpkg&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Clone &lt;a href=&#34;https://github.com/microsoft/vcpkg&#34;&gt;&lt;code&gt;vcpkg&lt;/code&gt;&lt;/a&gt; into a directory that won&amp;rsquo;t bother you in your day to day life
&lt;ul&gt;
&lt;li&gt;For me, that would be &lt;code&gt;C:\Users\maste\Documents\GitHub\vcpkg&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;git clone https://github.com/microsoft/vcpkg.git&lt;/code&gt; or GitHub desktop&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Run the Vcpkg bootstrap script
&lt;ul&gt;
&lt;li&gt;Windows: &lt;code&gt;./bootstrap-vcpkg -disableMetrics&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Unix: &lt;code&gt;./bootstrap-vcpkg.sh -disableMetrics&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Modify environment variables
&lt;ul&gt;
&lt;li&gt;Add the vcpkg cloned directory to PATH
&lt;ul&gt;
&lt;li&gt;On Windows, use Windows search for &amp;ldquo;envir&amp;rdquo;&lt;/li&gt;
&lt;li&gt;On Linux, open your &lt;code&gt;.bashrc&lt;/code&gt; file and add &lt;code&gt;export PATH=$PATH:~/vcpkg&lt;/code&gt; to your &lt;code&gt;.bashrc&lt;/code&gt; file&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Set &lt;code&gt;VCPKG_DEFAULT_TRIPLET&lt;/code&gt; to &lt;code&gt;x64-windows&lt;/code&gt; on Windows, or your computers triplet
&lt;ul&gt;
&lt;li&gt;Valid architectures are: x86, x64, arm, arm64 and wasm32.&lt;/li&gt;
&lt;li&gt;Valid OS names are &lt;code&gt;&#39;windows&#39;, &#39;linux&#39;, &#39;macos&#39;&lt;/code&gt; (I&amp;rsquo;m unsure about the macos part)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Enable vcpkg packages to be used in VS/MSBuild:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;vcpkg integrate install&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;copy the path to vcpkg.cmake for use later&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You can now install packages using &lt;code&gt;vcpkg install &amp;lt;lib&amp;gt;&lt;/code&gt; and search for them using &lt;code&gt;vcpkg search &amp;lt;lib&amp;gt;&lt;/code&gt;.
In the next section, we&amp;rsquo;ll be integrating &lt;code&gt;vcpkg&lt;/code&gt; within a CMake project.&lt;/p&gt;
&lt;h2 id=&#34;integrating-vcpkg-into-a-new-cmake-project&#34;&gt;Integrating Vcpkg into a new CMake Project&lt;/h2&gt;
&lt;p&gt;In this section we&amp;rsquo;ll be creating a CMake C++ project that will make an HTTP request using the &lt;code&gt;cpr&lt;/code&gt; library.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create a CMake project in Visual Studio or VSCode&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;VS: open visual studio and click &amp;ldquo;Create a new project&amp;rdquo; and search for &amp;ldquo;CMake Project&amp;rdquo;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;VSCode: open an empty folder in VSCode and use &amp;ldquo;CMake: Quick Start&amp;rdquo; from the command palette (Ctrl + Shift + P)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In &lt;code&gt;CMakeLists.txt&lt;/code&gt;, add the following helper target &amp;ldquo;run&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cmake&#34; data-lang=&#34;cmake&#34;&gt;  add_custom_target(&lt;span style=&#34;color:#e6db74&#34;&gt;run&lt;/span&gt;
      &lt;span style=&#34;color:#e6db74&#34;&gt;COMMAND&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;${&lt;/span&gt;PROJECT_NAME&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
      &lt;span style=&#34;color:#e6db74&#34;&gt;DEPENDS&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;${&lt;/span&gt;PROJECT_NAME&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
      &lt;span style=&#34;color:#e6db74&#34;&gt;WORKING_DIRECTORY&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;${&lt;/span&gt;CMAKE_PROJECT_DIR&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
  )&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set the CMake toolchain file to the path to &lt;code&gt;vcpkg.cmake&lt;/code&gt; (from step 4)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Visual Studio: Press manage configurations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Visual Studio Code: Add the following to your &lt;code&gt;settings.json&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cmake.configureSettings&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;CMAKE_TOOLCHAIN_FILE&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;...vcpkg.cmake&amp;#34;&lt;/span&gt;,
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If using &lt;code&gt;cmake&lt;/code&gt; from the command line, add &lt;code&gt;-DCMAKE_TOOLCHAIN_FILE=C:/Users/maste/Documents/GitHub/vcpkg/scripts/buildsystems/vcpkg.cmake&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a &lt;code&gt;vcpkg&lt;/code&gt; response file to maintain portability&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create &lt;code&gt;vcpkg_rf.txt&lt;/code&gt; in the root directory with the contents:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;install
cpr
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install dependencies using &lt;code&gt;vcpkg &amp;quot;@vcpkg_rf.txt&amp;quot; [optional arguments]&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For each library installed, you&amp;rsquo;ll see instructions for what to add or modify in your &lt;code&gt;CMakeLists.txt&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For &lt;code&gt;cpr&lt;/code&gt;, that would be&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cmake&#34; data-lang=&#34;cmake&#34;&gt; find_package(&lt;span style=&#34;color:#e6db74&#34;&gt;cpr&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;CONFIG&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;REQUIRED&lt;/span&gt;)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt; target_link_libraries(&lt;span style=&#34;color:#e6db74&#34;&gt;PROJECT_NAME&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;PRIVATE&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;cpr::cpr&lt;/span&gt;)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;For more than one library, you only need one &lt;code&gt;target_link_libraries&lt;/code&gt; rather than one for each additional library&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now let&amp;rsquo;s code. In the main C++ file, type the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;cpr/cpr.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;()
{
    cpr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Response r &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cpr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Get(cpr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Url{ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://api.github.com/repos/whoshuu/cpr/contributors&amp;#34;&lt;/span&gt; },
        cpr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Authentication{ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pass&amp;#34;&lt;/span&gt; },
        cpr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Parameters{ {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;anon&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;}, {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;key&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;} });
    r.status_code;                  &lt;span style=&#34;color:#75715e&#34;&gt;// 200
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    r.header[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;content-type&amp;#34;&lt;/span&gt;];       &lt;span style=&#34;color:#75715e&#34;&gt;// application/json; charset=utf-8
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    r.text;                         &lt;span style=&#34;color:#75715e&#34;&gt;// JSON text string
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; r.text &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;endl;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Let&amp;rsquo;s test our build&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If something doesn&amp;rsquo;t work, you may need to configure/delete CMake cache using your IDE or doing it manually&lt;/li&gt;
&lt;li&gt;In Visual Studio, just click the green play button&lt;/li&gt;
&lt;li&gt;In Visual Studio Code, you can use the &amp;ldquo;Build: Target&amp;rdquo; and select &amp;ldquo;run&amp;rdquo; from the command palette&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If the steps didn&amp;rsquo;t work for you, you can follow &lt;a href=&#34;https://youtu.be/FeBzSYiWkEU&#34;&gt;this tutorial video&lt;/a&gt;.
The video has an example of opening a project in VSCode that was made in Visual Studio.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sum of Geometric Sequences</title>
      <link>https://elibroftw.github.io/posts/sum_of_geometric_seq/</link>
      <pubDate>Sat, 18 Dec 2021 23:28:15 -0500</pubDate>
      
      <guid>https://elibroftw.github.io/posts/sum_of_geometric_seq/</guid>
      <description>&lt;!-- markdownlint-disable-file MD033 --&gt;
&lt;p&gt;Here are two useful formulas that are presented in a pretty way.
Thank you GitHub for the math LaTeX rendering.&lt;/p&gt;
&lt;h2 id=&#34;sum-of-a-finite-geometric-series&#34;&gt;Sum of a Finite Geometric Series&lt;/h2&gt;
&lt;img class=equation src=&#34;https://render.githubusercontent.com/render/math?math=S_n=\sum_{i=1}^{n}a_ir^{i-1}=a_1\frac{r^n-1}{r-1}&#34;&gt;
&lt;img class=equation src=&#34;https://render.githubusercontent.com/render/math?math=S_n=a_1\frac{r^n-1}{r-1}=a_1\frac{1-r^n}{1-r}&#34;&gt;
&lt;h2 id=&#34;sum-of-an-infinite-geometric-series&#34;&gt;Sum of an Infinite Geometric Series&lt;/h2&gt;
&lt;img class=equation src=&#34;https://render.githubusercontent.com/render/math?math=S=\sum_{i=0}^{\infty}a_ir^i=\frac{a_1}{1-r}&#34;&gt;
</description>
    </item>
    
    <item>
      <title>Creating a Blog With GitHub Pages and Hugo</title>
      <link>https://elibroftw.github.io/posts/hugo_tutorial/</link>
      <pubDate>Fri, 17 Dec 2021 22:18:47 -0500</pubDate>
      
      <guid>https://elibroftw.github.io/posts/hugo_tutorial/</guid>
      <description>&lt;p&gt;This tutorial will teach you how to create your own blog hosted on GitHub pages using Hugo.
It&amp;rsquo;s also how I created this blog. I&amp;rsquo;m creating this tutorial because it was not easy for me and I&amp;rsquo;d like to make the process easier for everyone else.&lt;/p&gt;
&lt;h2 id=&#34;prerequisties&#34;&gt;Prerequisties&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/getting-started/installing#binary-cross-platform&#34;&gt;Hugo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Make sure &lt;code&gt;hugo&lt;/code&gt; is available in the PATH environment variable&lt;/li&gt;
&lt;li&gt;Have &lt;code&gt;git&lt;/code&gt; installed and available globally (in PATH)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;forking-my-site&#34;&gt;Forking My Site&lt;/h2&gt;
&lt;p&gt;This is for people like me.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Fork &lt;a href=&#34;https://github.com/elibroftw/elibroftw.github.io&#34;&gt;my repository&lt;/a&gt; into &lt;code&gt;/USERNAME.github.io&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Edit &lt;code&gt;config.yaml&lt;/code&gt; and replace my information with yours&lt;/li&gt;
&lt;li&gt;Delete the &lt;code&gt;content&lt;/code&gt; folder and use the command &lt;code&gt;hugo new posts/POST.md&lt;/code&gt; to create your posts&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;pre-commit&lt;/code&gt; hook (if it is even included in the git repo) will auto-update the themes and build the site using &lt;code&gt;hugo -d docs&lt;/code&gt; before commiting&lt;/li&gt;
&lt;li&gt;You may need to set the serve folder to &lt;code&gt;docs&lt;/code&gt; instead of &lt;code&gt;/&lt;/code&gt; under &lt;code&gt;https://github.com/USERNAME/USERNAME.github.io/settings/pages&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;from-scratch&#34;&gt;From Scratch&lt;/h2&gt;
&lt;p&gt;This is if you don&amp;rsquo;t share my stylistic views.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a &lt;code&gt;USERNAME.github.io&lt;/code&gt; repository in GitHub&lt;/li&gt;
&lt;li&gt;Clone the repository&lt;/li&gt;
&lt;li&gt;Get the GitHub link for a theme from &lt;a href=&#34;https://themes.gohugo.io/&#34;&gt;https://themes.gohugo.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add the theme using &lt;code&gt;git submodule add GitHubURL.git themes/themeName&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Read the theme instructions for basic configuration (i.e. &lt;code&gt;config.yaml&lt;/code&gt; or &lt;code&gt;config.toml&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Edit &lt;code&gt;config.yaml&lt;/code&gt; or &lt;code&gt;config.toml&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;hugo new content/posts/POST.md&lt;/code&gt; to create a new post&lt;/li&gt;
&lt;li&gt;Set &lt;code&gt;draft: false&lt;/code&gt; after you are done drafting a post&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;hugo serve -D&lt;/code&gt; when drafting the post&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;hugo -d docs&lt;/code&gt; when you are ready to push your website&lt;/li&gt;
&lt;li&gt;You can use precommit hooks to automate the step above&lt;/li&gt;
&lt;li&gt;Commit and push to origin (GitHub)&lt;/li&gt;
&lt;li&gt;To update a theme, use &lt;code&gt;cd themes/THEME &amp;amp;&amp;amp; git pull&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;other-resources&#34;&gt;Other Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/getting-started/quick-start/&#34;&gt;https://gohugo.io/getting-started/quick-start/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://retrolog.io/blog/creating-a-hugo-theme-from-scratch/&#34;&gt;https://retrolog.io/blog/creating-a-hugo-theme-from-scratch/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://levelup.gitconnected.com/build-a-personal-website-with-github-pages-and-hugo-6c68592204c7&#34;&gt;https://levelup.gitconnected.com/build-a-personal-website-with-github-pages-and-hugo-6c68592204c7&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>UW WLU Double Degree</title>
      <link>https://elibroftw.github.io/posts/uw_wlu_double_degree/</link>
      <pubDate>Fri, 17 Dec 2021 21:36:13 -0500</pubDate>
      
      <guid>https://elibroftw.github.io/posts/uw_wlu_double_degree/</guid>
      <description>&lt;p&gt;I started my double degree BCS and BBA journey in Fall 2019.
Here are some things you should know about the program plus the environment.&lt;/p&gt;
&lt;h2 id=&#34;homeschool-differences&#34;&gt;Homeschool Differences&lt;/h2&gt;
&lt;h3 id=&#34;scholarships&#34;&gt;Scholarships&lt;/h3&gt;
&lt;p&gt;WLU has higher scholarship values than UW. The amount changes each year. For example in my year, WLU provided C$5,000 for first year but in 2021, that value was less than or equal to C$4,000. I&amp;rsquo;m not entirely sure because I forgot what my friend said they received.&lt;/p&gt;
&lt;h3 id=&#34;tuition&#34;&gt;Tuition&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Quest and Loris are both accessible but,&lt;/li&gt;
&lt;li&gt;UW-based students will need to use Quest to pay &amp;amp; view their tuition bill&lt;/li&gt;
&lt;li&gt;WLU-based students will need to use Loris to pay &amp;amp; view their tuition bill&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;first-year-residences&#34;&gt;First Year Residences&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;You go through your home school to get a residence&lt;/li&gt;
&lt;li&gt;Both typically have dorm style or apartment style&lt;/li&gt;
&lt;li&gt;Dorm = food plan ($$$) and apartment = food stamps (flex dollars)
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://students.wlu.ca/registration-and-finances/onecard/where-to-use-it.html&#34;&gt;Flex dollars&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;GRT (public transportation) pass: UW students use watcard, WLU students uses onecard
&lt;ul&gt;
&lt;li&gt;Press the respective card on the reader to &amp;ldquo;pay&amp;rdquo; for the bus&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Orientation
&lt;ul&gt;
&lt;li&gt;Laurier
&lt;ul&gt;
&lt;li&gt;Has some over-rated 4 teams event during O-week. I didn&amp;rsquo;t find it interesting. It&amp;rsquo;s easier to befriend people who live near you.&lt;/li&gt;
&lt;li&gt;There was a residence floor meeting that helps you break the ice with people on your floor. At least for apartment style&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Waterloo
&lt;ul&gt;
&lt;li&gt;Math students got pink ties 😂&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Co-Op
&lt;ul&gt;
&lt;li&gt;UW students use WaterlooWorks, WLU students use Navigator&lt;/li&gt;
&lt;li&gt;UW students have a co-op term for the first summer term, WLU students get a summer break (interpret that however you wish to)&lt;/li&gt;
&lt;li&gt;WLU students don&amp;rsquo;t have to take the infamous Professional Development (PD) that UW students have to take. Both involve at least one work term report.&lt;/li&gt;
&lt;li&gt;Navigator vs. WaterlooWorks
&lt;ul&gt;
&lt;li&gt;Navigator has more business related jobs and the software jobs also are also from these typical businesses. e.g., RBC, TD, Scotiabank, EY, Deloitte, etc.&lt;/li&gt;
&lt;li&gt;WaterlooWorks has more tech-related jobs&lt;/li&gt;
&lt;li&gt;I&amp;rsquo;m unsure if WaterlooWorks has the same accounting, legal, analyst jobs that Navigator has&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;preparing-for-university&#34;&gt;Preparing for University?&lt;/h3&gt;
&lt;p&gt;I did not prepare at all. I spent my time lifeguarding as well as working on my &lt;a href=&#34;https://github.com/elibroftw/music-caster&#34;&gt;music player, Music Caster&lt;/a&gt;.
I will share some advice.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The first two weeks do not represent the semester at all&lt;/li&gt;
&lt;li&gt;Brush up on first principles of calculus. Limits are integral (see what I did there) in Calculus 1 (MATH 137)&lt;/li&gt;
&lt;li&gt;Be ready to learn a lot of new concepts in &amp;ldquo;Algebra&amp;rdquo; (MATH 135)
&lt;ul&gt;
&lt;li&gt;WLU-based students should pay more attention to this course, as I noticed more of them struggle with the math courses than their UW counterparts
&lt;ul&gt;
&lt;li&gt;This does not mean imply UW students are smarter than WLU students&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Be ready to wake up before 8 AM for the 9:30 AM classes
&lt;ul&gt;
&lt;li&gt;Take into account transporation time&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;For BU 111, install the &lt;a href=&#34;https://python.org/download&#34;&gt;Python Programming Language&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;It&amp;rsquo;s superior to the native calculator application [operators: +, -, /, // (integer divide), * (multiply)]&lt;/li&gt;
&lt;li&gt;Take a look at &lt;a href=&#34;https://github.com/elibroftw/number-crunching-automation&#34;&gt;Number Crunching Automation&lt;/a&gt; for some useful functions&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Enjoy your summer, seriously&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;moving-to-campus&#34;&gt;Moving to Campus&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;If WLU based, you&amp;rsquo;ll first be at Lazaridus Hall.
&lt;ul&gt;
&lt;li&gt;Pick up residence keys/pass&lt;/li&gt;
&lt;li&gt;Pick up orientation kit&lt;/li&gt;
&lt;li&gt;If you took a picture of yourself for the Onecard, pick that up here too
&lt;ul&gt;
&lt;li&gt;If you forget, you can go to that Starbucks area with the seats and you&amp;rsquo;ll see a photobooth that&amp;rsquo;ll have your card&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;uw-advanced-courses&#34;&gt;UW Advanced Courses&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The default first year math courses (MATH 137, MATH 135, MATH 136, MATH 138) are already harder than most Canadian Universities&#39; first year math courses&lt;/li&gt;
&lt;li&gt;Computer Science students can take 12X math courses to have an easier time, but it only hurts them in the long run (easy = less stimulating)&lt;/li&gt;
&lt;li&gt;Advanced courses are for the highest academic achievers who are ready to put in the time and effort
&lt;ul&gt;
&lt;li&gt;This is for people who got 90+ on the Euclid&lt;/li&gt;
&lt;li&gt;Even being the smartest student at your high school is not enough to handle it&lt;/li&gt;
&lt;li&gt;Getting a 100% in high school math is just the prerequisite&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Two of my friends from high school that were in CS enrolled in both advanced math classes with one even signing up for the advanced CS class. Then, once they found it really tough (~2nd week), they switched to normal stream and had to catch up with me 😂.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>First Post</title>
      <link>https://elibroftw.github.io/posts/first/</link>
      <pubDate>Wed, 15 Dec 2021 00:16:00 -0500</pubDate>
      
      <guid>https://elibroftw.github.io/posts/first/</guid>
      <description>&lt;p&gt;This post tests if Hugo with the anubis theme works.
I&amp;rsquo;m thinking of self publishing articles rather than posting on Medium.
Medium&amp;rsquo;s UI is slower than YouTube&amp;rsquo;s even though Medium is completely text-based.&lt;/p&gt;
&lt;h3 id=&#34;edit&#34;&gt;Edit&lt;/h3&gt;
&lt;p&gt;It&amp;rsquo;s currently December 19th 2021, and I&amp;rsquo;ve even added a comment section. There&amp;rsquo;s absolutely no reason to use Medium anymore especially after making my own &lt;a href=&#34;https://elibroftw.github.io/posts/hugo_tutorial&#34;&gt;Hugo GitHub Pages Tutorial&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
