<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on ELL Blog</title>
    <link>https://blog.elijahlopez.ca/posts/</link>
    <description>ELL Blog (Posts)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 25 Jun 2022 18:04:08 -0400</lastBuildDate>
    
    <atom:link href="https://blog.elijahlopez.ca/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to Create a Monero Payment Processor</title>
      <link>https://blog.elijahlopez.ca/posts/monero-payment-processing/</link>
      <pubDate>Fri, 10 Jun 2022 20:13:16 -0400</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/monero-payment-processing/</guid>
      <description>&lt;h2 id=&#34;preface&#34; &gt;Preface
&lt;span&gt;
    &lt;a href=&#34;#preface&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;In January 2022, I created my very own
&lt;a href=&#34;https://lenerva.com/store/&#34;&gt;ecommerce store&lt;/a&gt; with the following features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;From scratch&lt;/li&gt;
&lt;li&gt;JavaScript-free&lt;/li&gt;
&lt;li&gt;Monero acceptance via my custom processor&lt;/li&gt;
&lt;li&gt;Credit-Card acceptance via Stripe Sessions&lt;/li&gt;
&lt;li&gt;Drop-shipping integrated&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is more of a design document than a copy-paste solution.&lt;/p&gt;
&lt;p&gt;At the end I mention an alternative, more long-term solution than the short-term kinda complicated cost-effective solution I made.&lt;/p&gt;
&lt;div&gt;
    &lt;h2&gt;Table of Contents&lt;/h2&gt;
    &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#preface&#34;&gt;Preface&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#supporting-monero-payment-method&#34;&gt;Supporting Monero Payment Method&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#my-processing-code&#34;&gt;My Processing Code&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#logistics&#34;&gt;Logistics&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#prerequisites&#34;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#monero-wallet-rpc&#34;&gt;Monero-Wallet-RPC&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#limitations&#34;&gt;Limitations&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#micro-service-approach&#34;&gt;Micro-Service Approach&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#pros&#34;&gt;Pros&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#cons&#34;&gt;Cons&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/div&gt;

&lt;h2 id=&#34;introduction&#34; &gt;Introduction
&lt;span&gt;
    &lt;a href=&#34;#introduction&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;For an MVP, you need to set environment variables for each backend server, such that each server has a corresponding ACCOUNT number for your Monero wallet. Each of these servers will have the same view-wallet opened through monero-wallet-rpc. &lt;a href=&#34;#logistics&#34;&gt;Logistics for backend&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;supporting-monero-payment-method&#34; &gt;Supporting Monero Payment Method
&lt;span&gt;
    &lt;a href=&#34;#supporting-monero-payment-method&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;In your backend, when a user creates an order and selects Monero as the payment method, you should send an API request the monero-wallet-rpc that is running. Here is a snippet of my code. The relevant portion is the request as well as the error checking.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;############&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# Defined in modules/monero.py&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# two undefined func/var are os.environ related&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;XMR_RPC_PORT = &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;38088&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; is_dev() &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;and&lt;/span&gt; STAGENET_IN_DEV &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;18088&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# TODO: v1.5 use ipv6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;XMR_RPC_ENDPOINT = &lt;span style=&#34;color:#ed9d13&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;http://127.0.0.1:&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;{&lt;/span&gt;XMR_RPC_PORT&lt;span style=&#34;color:#ed9d13&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;/json_rpc&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#447fcf&#34;&gt;xmr_rpc_api&lt;/span&gt;(method_name, **params):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    rpc_defaults = {&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;jsonrpc&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;2.0&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;_in&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;in&lt;/span&gt; params:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        params[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;in&amp;#39;&lt;/span&gt;] = params.pop(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;_in&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;return&lt;/span&gt; requests.post(XMR_RPC_ENDPOINT, json={**rpc_defaults, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;method&amp;#39;&lt;/span&gt;: method_name, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;params&amp;#39;&lt;/span&gt;: params}, auth=XMR_RPC_AUTH)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;########&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# called in the payment_method == monero order creation method&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#447fcf&#34;&gt;finish_order_monero&lt;/span&gt;(order):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&amp;#34;&amp;#34; Updates base order for paying with Monero &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;assert&lt;/span&gt; order[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;payment_method&amp;#39;&lt;/span&gt;] == &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;monero&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# Monero orders expire after one hour&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    server_num = &lt;span style=&#34;color:#24909d&#34;&gt;int&lt;/span&gt;(os.environ[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;SERVER_NUM&amp;#39;&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# https://monerodocs.org/interacting/monero-wallet-rpc-reference/#create_address&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# create a new address for account idx server_num&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# PITFALL: it is imperative that the wallet file is not replaced, to avoid create_address returning an already used address&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# if the wallet is ever replaced, before starting the server, either change the account number or create addresses until it matches the address used by the last monero order&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        r = xmr_rpc_api(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;create_address&amp;#39;&lt;/span&gt;, account_index=server_num, label=&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;lenerva-store-payment&amp;#39;&lt;/span&gt;).json()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;while&lt;/span&gt; r.get(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;error&amp;#39;&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; r[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;error&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;code&amp;#39;&lt;/span&gt;] == -&lt;span style=&#34;color:#3677a9&#34;&gt;14&lt;/span&gt;:  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# account index is out of bound (not created yet)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                account_created = &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;False&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;not&lt;/span&gt; account_created:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    r = xmr_rpc_api(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;create_account&amp;#39;&lt;/span&gt;, label=&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;lenerva-store&amp;#39;&lt;/span&gt;).json()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    account_created = r[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;result&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;account_index&amp;#39;&lt;/span&gt;] == server_num
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                r = xmr_rpc_api(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;create_address&amp;#39;&lt;/span&gt;, account_index=server_num, label=&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;lenerva-store-payment&amp;#39;&lt;/span&gt;).json()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        address, address_idx = r[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;result&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;address&amp;#39;&lt;/span&gt;], r[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;result&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;address_index&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        total_xmr = usd_to_xmr(order[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;total_usd&amp;#39;&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        order.update({&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_address&amp;#39;&lt;/span&gt;: address, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_address_idx&amp;#39;&lt;/span&gt;: address_idx,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;total_xmr&amp;#39;&lt;/span&gt;: total_xmr, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;total_xmr_atomic&amp;#39;&lt;/span&gt;: total_xmr * &lt;span style=&#34;color:#3677a9&#34;&gt;1e12&lt;/span&gt;})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;Exception&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;as&lt;/span&gt; e:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;raise&lt;/span&gt; MoneroError(&lt;span style=&#34;color:#24909d&#34;&gt;repr&lt;/span&gt;(e)) &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#447fcf;text-decoration:underline&#34;&gt;e&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# showing order page to user&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xmr_qr_data = &lt;span style=&#34;color:#ed9d13&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;monero:&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;{&lt;/span&gt;order[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_address&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#ed9d13&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;?tx_amount=&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;{&lt;/span&gt;order[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;total_xmr&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#ed9d13&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt; \
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#ed9d13&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&amp;amp;tx_description=Goods%20and%20Services&amp;amp;recipient_name=LENERVA&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Great, so users can now create an order with monero as the payment method. But how do they pay? When the order is created, in contrast to Stripe&amp;rsquo;s Session, you can redirect the user to the order page and show them a QR code of &lt;code&gt;xmr_qr_data&lt;/code&gt;. You will need to create the qr code yourself. If you use Python, install pyqrcode and pypng.&lt;/p&gt;
&lt;h2 id=&#34;my-processing-code&#34; &gt;My Processing Code
&lt;span&gt;
    &lt;a href=&#34;#my-processing-code&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Moving on to processing. This processing function is on a different thread/process. I used multiprocessing in Python to ensure that whenever the backend starts up, this function gets called. Modify to fit your needs. Important things in this function are: double spend protection, &amp;gt; 1 confirmations required, 1 cent tolerance, sums all payments to an address instead of just one. When the order is marked as paid, your order processing task/service can take care of it.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#447fcf&#34;&gt;monitor_xmr_payments&lt;/span&gt;(run_file: &lt;span style=&#34;color:#24909d&#34;&gt;str&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;    Monitor Monero Payments Here
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;    Started from on_starting: multiprocessing
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;    One Monero Node per Server (Droplet)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;    Unique Account per Server (Droplet)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;    `run_file` implies that the main process is still running
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# one hour order expiration&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    XMR_ORDER_TIMEOUT = &lt;span style=&#34;color:#24909d&#34;&gt;int&lt;/span&gt;(os.environ.get(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;XMR_ORDER_TIMEOUT&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;3600&amp;#39;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    XMR_EXTRA_TIME = &lt;span style=&#34;color:#24909d&#34;&gt;int&lt;/span&gt;(os.environ.get(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;XMR_EXTRA_TIME&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;3600&amp;#39;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ACCOUNT_IDX = &lt;span style=&#34;color:#24909d&#34;&gt;int&lt;/span&gt;(os.environ[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;SERVER_NUM&amp;#39;&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#24909d&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;XMR Monitoring service started&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    update_check_time = &lt;span style=&#34;color:#3677a9&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;while&lt;/span&gt; os.path.exists(run_file):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        time_start = time.monotonic()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        orders_to_check = Db.orders.find({&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;payment_method&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;monero&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;payment_confirmed&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;False&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                          &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;expired&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;False&lt;/span&gt;, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;server_num&amp;#39;&lt;/span&gt;: ACCOUNT_IDX})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        subaddr_indices = []
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        expired_orders = []  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# ids&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        address_idx_orders = {}  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# payment_addr_idx: order_doc&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;for&lt;/span&gt; order &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;in&lt;/span&gt; orders_to_check:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            addr_idx = order[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_address_idx&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            address_idx_orders[addr_idx] = order
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            subaddr_indices.append(addr_idx)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; order[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;timestamp&amp;#39;&lt;/span&gt;] + XMR_ORDER_TIMEOUT &amp;lt; time.time() &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;and&lt;/span&gt; order[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_received&amp;#39;&lt;/span&gt;] == &lt;span style=&#34;color:#3677a9&#34;&gt;0&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# don&amp;#39;t want to expire orders where payments have already started&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                expired_orders.append(order[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;_id&amp;#39;&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;elif&lt;/span&gt; order[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;timestamp&amp;#39;&lt;/span&gt;] + XMR_ORDER_TIMEOUT + XMR_EXTRA_TIME &amp;lt; time.time():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# expire orders that took too long to complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                expired_orders.append(order[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;_id&amp;#39;&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; expired_orders:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            Db.orders.update_one({&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;_id&amp;#39;&lt;/span&gt;: {&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;$in&amp;#39;&lt;/span&gt;: expired_orders}}, {&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;$set&amp;#39;&lt;/span&gt;: {&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;expired&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;True&lt;/span&gt;}})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        balances = {}  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# xmr_address_idx: {total_xmr_received ($set), total_confirmed_xmr ($set)}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# check for payments (transfers)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# https://monerodocs.org/interacting/monero-wallet-rpc-reference/#get_transfers&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;not&lt;/span&gt; subaddr_indices:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;raise&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;StopIteration&lt;/span&gt;(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;No addresses to monitor&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            r = xmr_rpc_api(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;get_transfers&amp;#39;&lt;/span&gt;, _in=&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;True&lt;/span&gt;, out=&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;False&lt;/span&gt;, pending=&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;True&lt;/span&gt;, pool=&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;True&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            account_index=ACCOUNT_IDX, subaddr_indices=subaddr_indices).json()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;for&lt;/span&gt; transfer &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;in&lt;/span&gt; chain(r[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;result&amp;#39;&lt;/span&gt;].get(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;in&amp;#39;&lt;/span&gt;, []), r[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;result&amp;#39;&lt;/span&gt;].get(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;pending&amp;#39;&lt;/span&gt;, [])):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                addr_idx = transfer[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;subaddr_index&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;minor&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; addr_idx &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;in&lt;/span&gt; address_idx_orders:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;continue&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                order = address_idx_orders[addr_idx]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; addr_idx &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;in&lt;/span&gt; balances:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    balances[addr_idx] = {&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_received&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#3677a9&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_confirmed&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#3677a9&#34;&gt;0&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                balance = balances[addr_idx]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# check timestamp just in case, double_spend_seen just in case,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; (transfer[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;timestamp&amp;#39;&lt;/span&gt;] &amp;gt; order[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;timestamp&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;not&lt;/span&gt; transfer[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;double_spend_seen&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;and&lt;/span&gt; addr_idx &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;in&lt;/span&gt; address_idx_orders):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    balance[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_received&amp;#39;&lt;/span&gt;] += transfer[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;amount&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; transfer[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;confirmations&amp;#39;&lt;/span&gt;] &amp;gt;= transfer[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;suggested_confirmations_threshold&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;and&lt;/span&gt; transfer[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;confirmations&amp;#39;&lt;/span&gt;] &amp;gt; transfer.get(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;unlock_time&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#3677a9&#34;&gt;0&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        balance[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_confirmed&amp;#39;&lt;/span&gt;] += transfer[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;amount&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# check if confirmation resulted in order payment being fulfilled&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# tolerate 2 cent buffer due to transaction fee&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        xmr_buffer = usd_to_xmr(&lt;span style=&#34;color:#3677a9&#34;&gt;0.02&lt;/span&gt;, as_atomic=&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;True&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; balance[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_confirmed&amp;#39;&lt;/span&gt;] &amp;gt;= order[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;total_xmr_atomic&amp;#39;&lt;/span&gt;] - xmr_buffer:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# payment confirmed, therefore, we can update the database&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            Db.orders.find_one_and_update({&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;_id&amp;#39;&lt;/span&gt;: order[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;_id&amp;#39;&lt;/span&gt;]}, {&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;$set&amp;#39;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_received&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#24909d&#34;&gt;round&lt;/span&gt;(balance[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_received&amp;#39;&lt;/span&gt;] / &lt;span style=&#34;color:#3677a9&#34;&gt;1e12&lt;/span&gt;, &lt;span style=&#34;color:#3677a9&#34;&gt;12&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_confirmed&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#24909d&#34;&gt;round&lt;/span&gt;(balance[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_confirmed&amp;#39;&lt;/span&gt;] / &lt;span style=&#34;color:#3677a9&#34;&gt;1e12&lt;/span&gt;, &lt;span style=&#34;color:#3677a9&#34;&gt;12&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;payment_confirmed&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            }})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# del addr_idx from balances since we don&amp;#39;t need to update this order again&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;del&lt;/span&gt; address_idx_orders[addr_idx]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;del&lt;/span&gt; balances[addr_idx]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# quick exit for fast restarts&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;not&lt;/span&gt; os.path.exists(run_file):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;return&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;for&lt;/span&gt; addr_idx &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;in&lt;/span&gt; balances:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# convert from atomic&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                xmr_received = &lt;span style=&#34;color:#24909d&#34;&gt;round&lt;/span&gt;(balances[addr_idx][&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_received&amp;#39;&lt;/span&gt;] / &lt;span style=&#34;color:#3677a9&#34;&gt;1e12&lt;/span&gt;, &lt;span style=&#34;color:#3677a9&#34;&gt;12&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                xmr_confirmed = &lt;span style=&#34;color:#24909d&#34;&gt;round&lt;/span&gt;(balances[addr_idx][&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_confirmed&amp;#39;&lt;/span&gt;] / &lt;span style=&#34;color:#3677a9&#34;&gt;1e12&lt;/span&gt;, &lt;span style=&#34;color:#3677a9&#34;&gt;12&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                order = address_idx_orders[addr_idx]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; xmr_received &amp;gt; order[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_received&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;or&lt;/span&gt; xmr_confirmed &amp;gt; order[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_confirmed&amp;#39;&lt;/span&gt;]:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# update xmr_* values for order&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    xmr_buffer = usd_to_xmr(&lt;span style=&#34;color:#3677a9&#34;&gt;0.02&lt;/span&gt;, as_atomic=&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;True&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    enough_xmr_sent = xmr_received &amp;gt;= order[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;total_xmr_atomic&amp;#39;&lt;/span&gt;] - xmr_buffer
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    Db.orders.update_one({&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;_id&amp;#39;&lt;/span&gt;: order[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;_id&amp;#39;&lt;/span&gt;]}, {&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;$set&amp;#39;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_received&amp;#39;&lt;/span&gt;: xmr_received,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;xmr_confirmed&amp;#39;&lt;/span&gt;: xmr_confirmed,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;enough_xmr_sent&amp;#39;&lt;/span&gt;: enough_xmr_sent,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    }})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;StopIteration&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;except&lt;/span&gt; requests.RequestException:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#24909d&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;XMR RPC Connection Error - wallet is probably still syncing&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# check for updates, and start update procedure&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;not&lt;/span&gt; is_dev() &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;and&lt;/span&gt; update_check_time &amp;lt; time.time():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# check for an update every 10 minutes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            update_monero_rpc()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            update_check_time = time.time() + &lt;span style=&#34;color:#3677a9&#34;&gt;600&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# sleep to conserve resources&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; (time_taken := time.monotonic() - time_start) &amp;lt; INTERVAL:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            time.sleep(INTERVAL - time_taken)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;logistics&#34; &gt;Logistics
&lt;span&gt;
    &lt;a href=&#34;#logistics&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;h3 id=&#34;prerequisites&#34; &gt;Prerequisites
&lt;span&gt;
    &lt;a href=&#34;#prerequisites&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Monero view-wallet (derived from full wallet)&lt;/li&gt;
&lt;li&gt;Monero-wallet-rpc running on server with wallet open&lt;/li&gt;
&lt;li&gt;A monero node (daemon) url. You can either use your own
or a public one. I use my own to ensure uptime&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;monero-wallet-rpc&#34; &gt;Monero-Wallet-RPC
&lt;span&gt;
    &lt;a href=&#34;#monero-wallet-rpc&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;To install monero on a Linux server, you can use my bash script.
&lt;code&gt;install_monero()&lt;/code&gt; can also be called if you need to update monero on a
server, like a remote node.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;add_to_path() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# if .env_path DNE or the parser has not been added to ~/.bashrc,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; [ ! -f ~/.env_path ] &amp;amp;&amp;amp; ! grep -Fq &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;.env_path&amp;#34;&lt;/span&gt; ~/.bashrc; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# shellcheck disable=SC2129&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;if [ -f ~/.env_path ]; then&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# shellcheck disable=SC2140&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;    export PATH=\$PATH:\$(python3 -c &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;import os; from pathlib import Path; print(&amp;#39;:&amp;#39;.join((line.strip() for line in open(f&amp;#39;{Path.home()}/.env_path&amp;#39;).readlines() if line.strip())))&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;)&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;fi&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# add directories to path&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;for&lt;/span&gt; path in &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#40ffff&#34;&gt;$@&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; [ ! -f ~/.env_path ]  || ! grep -Fq &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#40ffff&#34;&gt;$path&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt; ~/.env_path; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# .env_path DNE or string not in .env_path&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#40ffff&#34;&gt;$path&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; ~/.env_path
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;Added &lt;/span&gt;&lt;span style=&#34;color:#40ffff&#34;&gt;$path&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt; to PATH&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#24909d&#34;&gt;source&lt;/span&gt; ~/.bashrc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# shellcheck disable=SC2120,SC2164&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;install_monero() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# Install Monero (download and extract to ~/bin/monero)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; [ ! -f ~/bin/monero/monerod ] || [ ! &lt;span style=&#34;color:#40ffff&#34;&gt;$1&lt;/span&gt; = &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;--force&amp;#34;&lt;/span&gt; ]; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    mkdir -p ~/Downloads &amp;amp;&amp;amp; &lt;span style=&#34;color:#24909d&#34;&gt;cd&lt;/span&gt; ~/Downloads
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;Downloading and extracting Monero binaries&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    curl -L https://downloads.getmonero.org/cli/linux64 | tar xj
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    rm -r -f ~/bin/monero &amp;amp;&amp;amp; mkdir -p ~/bin
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    mv monero-*-linux-* monero
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    mv monero ~/bin
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;Downloaded Monero binaries to&amp;#34;&lt;/span&gt; ~/bin
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;INFO: Monero binaries already installed&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  add_to_path ~/bin/monero
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#24909d&#34;&gt;source&lt;/span&gt; ~/.bashrc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To ensure the RPC-wallet is running, you can add a &amp;ldquo;start if not already running&amp;rdquo; function to your backend. I&amp;rsquo;ll share the code I use myself in the future, but these are the arguments for running your RPC. For development, ask the user to enter the wallet password since that wallet would most likely be spendable.&lt;/p&gt;
&lt;p&gt;Create a file &lt;code&gt;configs/monero-rpc.common.conf&lt;/code&gt; to contain the base configuaration of the RPC. Other parameters are based upon whether we are running the website in devevelopment or production.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-conf&#34; data-lang=&#34;conf&#34;&gt;non-interactive=1
log-file=&amp;#34;monero-wallet-rpc.log&amp;#34;
max-log-file-size=5000000
max-log-files=2
log-level=0
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;monero_rpc_cmd = [&lt;span style=&#34;color:#24909d&#34;&gt;str&lt;/span&gt;(monero_rpc), &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;--config-file&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;other_files/monero-rpc.common.conf&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;--rpc-login&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;monero:&amp;#39;&lt;/span&gt; + os.environ[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;XMR_RPC_PW&amp;#39;&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;--trusted-daemon&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; TRUSTED_DAEMON &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;--untrusted-daemon&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;--rpc-bind-port&amp;#39;&lt;/span&gt;, XMR_RPC_PORT, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;--wallet-file&amp;#39;&lt;/span&gt;, wallet_file, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;--password&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# production only: (requires XMR_WALLET_PW set in .env or system environemnt variable)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;monero_rpc_cmd.extend((os.environ[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;XMR_WALLET_PW&amp;#39;&lt;/span&gt;], &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;--daemon-address&amp;#39;&lt;/span&gt;, MAINNET_DAEMON))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;limitations&#34; &gt;Limitations
&lt;span&gt;
    &lt;a href=&#34;#limitations&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Each account index actually corresponds to the view wallet history on each server. If those wallets ever get replaced, the servers need to be assigned new account numbers. You can avoid this pitfall by adding a database check to see if the address was in use, but I didn&amp;rsquo;t do that for performance reasons. It&amp;rsquo;s better to have a table in your database for
determining which account index was last assigned t a server, and then use a script that increase this number whenever a view-wallet needs to be transferred onto a server. This way, you avoid having to remember the pitfall.&lt;/p&gt;
&lt;p&gt;monero-wallet-rpc would need to be manually updated, but
since it the scanning largely depends on the actualy daemon, which I have an update script for, this issue is not that bad.&lt;/p&gt;
&lt;p&gt;When I get back to prioritizing the ecommerce store, I will a) add more items to sell b) automation.&lt;/p&gt;
&lt;h2 id=&#34;micro-service-approach&#34; &gt;Micro-Service Approach
&lt;span&gt;
    &lt;a href=&#34;#micro-service-approach&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Obviously, my method is complicated, but it does save me $5/month. If I was a manager at Google, I&amp;rsquo;d do it the following way.&lt;/p&gt;
&lt;p&gt;Create a payment processor API that can horizontally scale. Instead of assigning an account number to each app server, only assign it to API servers. There should be at least one API server per data centre region in use (DigitalOcean reference).&lt;/p&gt;
&lt;p&gt;This API would encapsulate the following&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;create_invoice(amount, expiry=3600, currency=&amp;lsquo;XMR&amp;rsquo;, qrCode=false)
&lt;ul&gt;
&lt;li&gt;returns an address, the payment URI, and optionally the png data for the QR code, possibly even an invoice id (positive number).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;check_invoice(address=None, invoice_id=None)
&lt;ul&gt;
&lt;li&gt;returns amount_in_mempool, amount_received (1 to X confirmations), amount_confirmed (X confirmations), and paid which is a boolean.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;when a user registers for the API, they can either provide a view-wallet, or a wallet is created for them&lt;/li&gt;
&lt;li&gt;if no view-wallet is provided, there should be functionality to transfer upon payments, through a UI, or through a more restrictive API&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A non-custodian processing service does not exist as far as I know, so I might create one and charge a monthly $5 fee.&lt;/p&gt;
&lt;h3 id=&#34;pros&#34; &gt;Pros
&lt;span&gt;
    &lt;a href=&#34;#pros&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;allows using the same architecture accross a multitude of apps&lt;/li&gt;
&lt;li&gt;good for entreprise&lt;/li&gt;
&lt;li&gt;decouples processing from application code&lt;/li&gt;
&lt;li&gt;long-term perfection&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;cons&#34; &gt;Cons
&lt;span&gt;
    &lt;a href=&#34;#cons&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;requires additional servers and calls to said server&lt;/li&gt;
&lt;li&gt;bad for short-term&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>BU 375 Operations</title>
      <link>https://blog.elijahlopez.ca/posts/bu-375-operations/</link>
      <pubDate>Sat, 04 Jun 2022 10:23:48 -0400</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/bu-375-operations/</guid>
      <description>&lt;p&gt;This document are my notes and midterm review for the BU 375 Operations course taught at Wilfrid Laurier University. While studying for the midterm, I discovered my own formulae shortcuts, undoubtly due to &amp;ldquo;blind teaching syndrome&amp;rdquo; (I made that term up).
So let&amp;rsquo;s begin. I&amp;rsquo;ll add a divider to let you know what is part of the midterm.&lt;/p&gt;
&lt;div&gt;
    &lt;h2&gt;Table of Contents&lt;/h2&gt;
    &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#appendix&#34;&gt;Appendix&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#control-factors&#34;&gt;Control Factors&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#operations-management-introduction&#34;&gt;Operations Management Introduction&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#transformation-process&#34;&gt;Transformation Process&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#major-components-of-a-firm&#34;&gt;Major Components of a Firm&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#importance&#34;&gt;Importance&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#decisions&#34;&gt;Decisions&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#strategic-planning&#34;&gt;Strategic Planning&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#globalization&#34;&gt;Globalization&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#missing-statement&#34;&gt;Missing Statement&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#consumer-exepectations&#34;&gt;Consumer Exepectations&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#order-qualifiers--winners&#34;&gt;Order Qualifiers &amp;amp; Winners&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#strategy&#34;&gt;Strategy&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#positioning--competitivness&#34;&gt;Positioning / Competitivness&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#key-performance-indicators-evaluation&#34;&gt;Key performance Indicators (Evaluation)&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#quality&#34;&gt;Quality&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#products&#34;&gt;Products&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#serivces&#34;&gt;Serivces&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#total-quality-management-tqm&#34;&gt;Total Quality Management (TQM)&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#we-demmings&#34;&gt;W.E. Demmings&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#six-sigma&#34;&gt;Six Sigma&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#tools&#34;&gt;Tools&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#cost-of-quality&#34;&gt;Cost of Quality&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#productivity&#34;&gt;Productivity&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#single-factor-productivity&#34;&gt;Single-Factor Productivity&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#total-factor-productivity&#34;&gt;Total Factor Productivity&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#yield&#34;&gt;Yield&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#product-cost&#34;&gt;Product Cost&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#quality-productivity-ratio-qpr&#34;&gt;Quality Productivity Ratio (QPR)&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#statistical-analysis&#34;&gt;Statistical Analysis&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#p-chart&#34;&gt;p-chart&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#c-chart&#34;&gt;c-chart&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#x-chart&#34;&gt;x-chart&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#r-chart&#34;&gt;R-chart&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#reliability&#34;&gt;Reliability&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#process-capability-index&#34;&gt;Process Capability Index&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#server-model&#34;&gt;Server Model&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#simple-processes&#34;&gt;Simple Processes&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#learning-curves&#34;&gt;Learning Curves&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#capacity-planning&#34;&gt;Capacity Planning&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#supply-chain-management-strategy--design&#34;&gt;Supply Chain Management Strategy &amp;amp; Design&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#supply-chain-process&#34;&gt;Supply Chain Process&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#supply-chain-for-service-providers&#34;&gt;Supply Chain for Service Providers&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#supply-chain-management-scm&#34;&gt;Supply Chain Management (SCM)&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#supply-chain-uncertainty&#34;&gt;Supply Chain Uncertainty&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#supply-chain-coordination-and-integration&#34;&gt;Supply Chain Coordination and Integration&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#information-technology&#34;&gt;Information Technology&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#supply-chain-performance&#34;&gt;Supply Chain Performance&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#scor-model&#34;&gt;Scor Model&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#project-management&#34;&gt;Project Management&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#gantt-chart&#34;&gt;Gantt Chart&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#project-elements&#34;&gt;Project Elements&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#project-manager&#34;&gt;Project Manager&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#project-planning&#34;&gt;Project Planning&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#project-scheduling&#34;&gt;Project Scheduling&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#project-contrl&#34;&gt;Project Contrl&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#work-breakdown-structure&#34;&gt;Work Breakdown Structure&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#cpm--pert&#34;&gt;CPM / PERT&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#probabilityic-precedence-example&#34;&gt;Probabilityic Precedence Example&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#demand-forecasting&#34;&gt;Demand Forecasting&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#decision-based-on-forecasts&#34;&gt;Decision Based on Forecasts&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#making-forecasts-useful&#34;&gt;Making Forecasts Useful&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#time-series-methods&#34;&gt;Time-Series Methods&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#inventory-management&#34;&gt;Inventory Management&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#inventory-control-systems&#34;&gt;Inventory Control Systems&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#economic-order-quantities&#34;&gt;Economic Order Quantities&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#inventory-control-cost&#34;&gt;Inventory Control Cost&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#exam-review&#34;&gt;Exam Review&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/div&gt;

&lt;h2 id=&#34;appendix&#34; &gt;Appendix
&lt;span&gt;
    &lt;a href=&#34;#appendix&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;It&amp;rsquo;s better to have the appendix at the top rather than the bottom, as people know where to find the nitty gritties.&lt;/p&gt;
&lt;h3 id=&#34;control-factors&#34; &gt;Control Factors
&lt;span&gt;
    &lt;a href=&#34;#control-factors&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;Out with the ugly table, and in with the new!
It&amp;rsquo;s absurd that at $500+ per course and hundreds of students, universities do not collaborate with eachother to make course curriculum/content, do not strive for perfect function (notes) and rarely place importance on aesthetics.&lt;/p&gt;
&lt;!-- &lt;sub&gt;2&lt;/sub&gt; produces x2
x&lt;sup&gt;2&lt;/sup&gt; p --&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Sample Size (n)&lt;/th&gt;
&lt;th&gt;A&lt;sub&gt;2&lt;/sub&gt; (x-chart)&lt;/th&gt;
&lt;th&gt;D&lt;sub&gt;3&lt;/sub&gt; (R LCL)&lt;/th&gt;
&lt;th&gt;D&lt;sub&gt;4&lt;/sub&gt; (R UCL)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1.88&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;3.267&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;1.023&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;2.575&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;0.729&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;2.282&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;0.577&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;2.114&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;0.483&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;2.004&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;0.419&lt;/td&gt;
&lt;td&gt;0.076&lt;/td&gt;
&lt;td&gt;1.924&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;0.373&lt;/td&gt;
&lt;td&gt;0.136&lt;/td&gt;
&lt;td&gt;1.864&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;0.337&lt;/td&gt;
&lt;td&gt;0.184&lt;/td&gt;
&lt;td&gt;1.816&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;0.308&lt;/td&gt;
&lt;td&gt;0.223&lt;/td&gt;
&lt;td&gt;1.777&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;0.285&lt;/td&gt;
&lt;td&gt;0.256&lt;/td&gt;
&lt;td&gt;1.744&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;0.266&lt;/td&gt;
&lt;td&gt;0.283&lt;/td&gt;
&lt;td&gt;1.717&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;0.249&lt;/td&gt;
&lt;td&gt;0.307&lt;/td&gt;
&lt;td&gt;1.693&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;0.235&lt;/td&gt;
&lt;td&gt;0.328&lt;/td&gt;
&lt;td&gt;1.672&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;0.223&lt;/td&gt;
&lt;td&gt;0.347&lt;/td&gt;
&lt;td&gt;1.653&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;0.212&lt;/td&gt;
&lt;td&gt;0.363&lt;/td&gt;
&lt;td&gt;1.637&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;0.203&lt;/td&gt;
&lt;td&gt;0.378&lt;/td&gt;
&lt;td&gt;1.622&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;0.194&lt;/td&gt;
&lt;td&gt;0.391&lt;/td&gt;
&lt;td&gt;1.609&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;td&gt;0.187&lt;/td&gt;
&lt;td&gt;0.404&lt;/td&gt;
&lt;td&gt;1.596&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;0.180&lt;/td&gt;
&lt;td&gt;0.415&lt;/td&gt;
&lt;td&gt;1.585&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;td&gt;0.173&lt;/td&gt;
&lt;td&gt;0.425&lt;/td&gt;
&lt;td&gt;1.575&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt;0.167&lt;/td&gt;
&lt;td&gt;0.435&lt;/td&gt;
&lt;td&gt;1.565&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;0.162&lt;/td&gt;
&lt;td&gt;0.443&lt;/td&gt;
&lt;td&gt;1.557&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;td&gt;0.157&lt;/td&gt;
&lt;td&gt;0.452&lt;/td&gt;
&lt;td&gt;1.548&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;td&gt;0.153&lt;/td&gt;
&lt;td&gt;0.459&lt;/td&gt;
&lt;td&gt;1.541&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;operations-management-introduction&#34; &gt;Operations Management Introduction
&lt;span&gt;
    &lt;a href=&#34;#operations-management-introduction&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;h3 id=&#34;transformation-process&#34; &gt;Transformation Process
&lt;span&gt;
    &lt;a href=&#34;#transformation-process&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;General idea: inputs -&amp;gt; transformation process -&amp;gt; output&lt;/li&gt;
&lt;li&gt;Feedback between inputs &amp;lt;-&amp;gt; process &amp;lt;-&amp;gt; output&lt;/li&gt;
&lt;li&gt;Value is created&lt;/li&gt;
&lt;li&gt;Physical, locational, exchange, physiological, psychological, informational&lt;/li&gt;
&lt;li&gt;Value = Price consumers are willing to pay - Cost to produce&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;input&#34; &gt;Input
&lt;span&gt;
    &lt;a href=&#34;#input&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Materials, machines, labor, management, and capital&lt;/li&gt;
&lt;li&gt;These inputs are determined by the &lt;strong&gt;requirements&lt;/strong&gt; for the output&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;output&#34; &gt;Output
&lt;span&gt;
    &lt;a href=&#34;#output&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Goods and services&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;major-components-of-a-firm&#34; &gt;Major Components of a Firm
&lt;span&gt;
    &lt;a href=&#34;#major-components-of-a-firm&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;h4 id=&#34;primary-areas&#34; &gt;Primary Areas
&lt;span&gt;
    &lt;a href=&#34;#primary-areas&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Operatios&lt;/li&gt;
&lt;li&gt;Marketing
&lt;ul&gt;
&lt;li&gt;research, packaging&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Finance and Accounting&lt;/li&gt;
&lt;li&gt;Human Resources (HR)&lt;/li&gt;
&lt;li&gt;Outside Suppliers&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;importance&#34; &gt;Importance
&lt;span&gt;
    &lt;a href=&#34;#importance&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Middle of the firm&lt;/li&gt;
&lt;li&gt;Opportunity to innovate (internally)&lt;/li&gt;
&lt;li&gt;Results in failure&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;decisions&#34; &gt;Decisions
&lt;span&gt;
    &lt;a href=&#34;#decisions&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Design
&lt;ul&gt;
&lt;li&gt;long-term&lt;/li&gt;
&lt;li&gt;Equipment, capacity, layout, location&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Day-to-Day Operations
&lt;ul&gt;
&lt;li&gt;Scheduling, quality control, labor requirements, input procurement&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;strategic-planning&#34; &gt;Strategic Planning
&lt;span&gt;
    &lt;a href=&#34;#strategic-planning&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;h3 id=&#34;globalization&#34; &gt;Globalization
&lt;span&gt;
    &lt;a href=&#34;#globalization&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Thinking big&lt;/li&gt;
&lt;li&gt;Foreign markets, production, purchasing, partnerships&lt;/li&gt;
&lt;li&gt;Iterests: cost, international, reliability&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;missing-statement&#34; &gt;Missing Statement
&lt;span&gt;
    &lt;a href=&#34;#missing-statement&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;What does the firm do and sell?&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;vision&#34; &gt;Vision
&lt;span&gt;
    &lt;a href=&#34;#vision&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;p&gt;Direction of the firm in 10 years&lt;/p&gt;
&lt;h4 id=&#34;values&#34; &gt;Values
&lt;span&gt;
    &lt;a href=&#34;#values&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Common beliefs&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;consumer-exepectations&#34; &gt;Consumer Exepectations
&lt;span&gt;
    &lt;a href=&#34;#consumer-exepectations&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;h3 id=&#34;order-qualifiers--winners&#34; &gt;Order Qualifiers &amp;amp; Winners
&lt;span&gt;
    &lt;a href=&#34;#order-qualifiers--winners&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;Price, &lt;a href=&#34;#quality&#34;&gt;Quality&lt;/a&gt;, Variety (comparing to competitors), &lt;a href=&#34;#server-model&#34;&gt;Timeliness&lt;/a&gt;, Convenience, Customer Service&lt;/p&gt;
&lt;h4 id=&#34;order-qualifiers&#34; &gt;Order Qualifiers
&lt;span&gt;
    &lt;a href=&#34;#order-qualifiers&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;p&gt;Basic criteria for product candidacy (functional)&lt;/p&gt;
&lt;h4 id=&#34;order-winners&#34; &gt;Order Winners
&lt;span&gt;
    &lt;a href=&#34;#order-winners&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;p&gt;Differentiating criteria (aesthetic)&lt;/p&gt;
&lt;h3 id=&#34;strategy&#34; &gt;Strategy
&lt;span&gt;
    &lt;a href=&#34;#strategy&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;direction for acheiving a ission&lt;/li&gt;
&lt;li&gt;consistency&lt;/li&gt;
&lt;li&gt;dependent on organization size
&lt;ul&gt;
&lt;li&gt;formal (larger)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;mission statement&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;formulation&#34; &gt;Formulation
&lt;span&gt;
    &lt;a href=&#34;#formulation&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Primary task&lt;/li&gt;
&lt;li&gt;Core competenciese (competitive advantage)&lt;/li&gt;
&lt;li&gt;Order qualifiers &amp;amp; winneres&lt;/li&gt;
&lt;li&gt;Positioning (how to compete)&lt;/li&gt;
&lt;li&gt;Deployment&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;positioning--competitivness&#34; &gt;Positioning / Competitivness
&lt;span&gt;
    &lt;a href=&#34;#positioning--competitivness&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;common goals&lt;/li&gt;
&lt;li&gt;collabortation&lt;/li&gt;
&lt;li&gt;expertise&lt;/li&gt;
&lt;li&gt;learning from past experiences&lt;/li&gt;
&lt;li&gt;cost
&lt;ul&gt;
&lt;li&gt;waste elimination&lt;/li&gt;
&lt;li&gt;trades off with quality sometimes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;quality (reducing defects)&lt;/li&gt;
&lt;li&gt;flexibility
&lt;ul&gt;
&lt;li&gt;ability to change internal processes to accomodate needs&lt;/li&gt;
&lt;li&gt;trades off with speed&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;speed / delivery
&lt;ul&gt;
&lt;li&gt;based on context&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;key-performance-indicators-evaluation&#34; &gt;Key performance Indicators (Evaluation)
&lt;span&gt;
    &lt;a href=&#34;#key-performance-indicators-evaluation&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;Finances&lt;/li&gt;
&lt;li&gt;Customers&lt;/li&gt;
&lt;li&gt;Processes&lt;/li&gt;
&lt;li&gt;Learning&lt;/li&gt;
&lt;li&gt;Tools: balanced scorecard worksheet&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;quality&#34; &gt;Quality
&lt;span&gt;
    &lt;a href=&#34;#quality&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Fitness for use, design. (PDCA) plan, act check, do.&lt;/p&gt;
&lt;h3 id=&#34;products&#34; &gt;Products
&lt;span&gt;
    &lt;a href=&#34;#products&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;performance, features, relaibility, conformance (to the design), durability, serviceablility, aesthetics, safety,
perceptions&lt;/p&gt;
&lt;h3 id=&#34;serivces&#34; &gt;Serivces
&lt;span&gt;
    &lt;a href=&#34;#serivces&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;Time, completeness, courtesy, consistency, accessibility, accuracy, responsiveness, HARDER TO EVALUATE&lt;/p&gt;
&lt;h3 id=&#34;total-quality-management-tqm&#34; &gt;Total Quality Management (TQM)
&lt;span&gt;
    &lt;a href=&#34;#total-quality-management-tqm&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Continuous improvement&lt;/li&gt;
&lt;li&gt;Customer satisfaction&lt;/li&gt;
&lt;li&gt;Involves employees and management&lt;/li&gt;
&lt;li&gt;Performance tracking&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;we-demmings&#34; &gt;W.E. Demmings
&lt;span&gt;
    &lt;a href=&#34;#we-demmings&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Statistical quality-control techniques&lt;/li&gt;
&lt;li&gt;Continuous improvement&lt;/li&gt;
&lt;li&gt;Inspect at stages before final&lt;/li&gt;
&lt;li&gt;Responsibility lies with management and employees&lt;/li&gt;
&lt;li&gt;Few suppliers &amp;amp; pick &lt;strong&gt;quality &amp;gt; cost&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;six-sigma&#34; &gt;Six Sigma
&lt;span&gt;
    &lt;a href=&#34;#six-sigma&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Decreas process variation&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;tools&#34; &gt;Tools
&lt;span&gt;
    &lt;a href=&#34;#tools&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Process Flowchart (location of problem)&lt;/li&gt;
&lt;li&gt;Cause-and-Effect (fishbone) diagram (find root cause)&lt;/li&gt;
&lt;li&gt;Check Sheet (form)&lt;/li&gt;
&lt;li&gt;Pareto Analysis (data collection) and Chart&lt;/li&gt;
&lt;li&gt;Scatter Diagram&lt;/li&gt;
&lt;li&gt;Control Chart&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;cost-of-quality&#34; &gt;Cost of Quality
&lt;span&gt;
    &lt;a href=&#34;#cost-of-quality&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;Total = cost of achieving good quality + cost of poor quality&lt;/p&gt;
&lt;h4 id=&#34;good&#34; &gt;Good
&lt;span&gt;
    &lt;a href=&#34;#good&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Prevetion&lt;/li&gt;
&lt;li&gt;Appraisal/Measuring&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;poor&#34; &gt;Poor
&lt;span&gt;
    &lt;a href=&#34;#poor&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Internal failure&lt;/li&gt;
&lt;li&gt;External failure&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;quality-index-qi&#34; &gt;Quality Index (QI)
&lt;span&gt;
    &lt;a href=&#34;#quality-index-qi&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;p&gt;Measures quality cost against a base value (e.g. manufacturing, sales, labor hours, quantity)&lt;/p&gt;
&lt;img class=equation-tall src=&#34;https://latex.codecogs.com/svg.image?QI=\frac{Total\,\,Cost\,\,of\,\,Quality}{Base}\times 100&#34;&gt;
&lt;h2 id=&#34;productivity&#34; &gt;Productivity
&lt;span&gt;
    &lt;a href=&#34;#productivity&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;h3 id=&#34;single-factor-productivity&#34; &gt;Single-Factor Productivity
&lt;span&gt;
    &lt;a href=&#34;#single-factor-productivity&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;img class=equation-tall src=&#34;https://latex.codecogs.com/svg.image?\frac{Output}{Specific\,\,Input}&#34;&gt;
&lt;p&gt;where Specific Input could be Labor, Materials, Capital.&lt;/p&gt;
&lt;h3 id=&#34;total-factor-productivity&#34; &gt;Total Factor Productivity
&lt;span&gt;
    &lt;a href=&#34;#total-factor-productivity&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;img class=equation-tall src=&#34;https://latex.codecogs.com/svg.image?\frac{Output}{All\,\,Inputs}&#34;&gt;
&lt;p&gt;To calculate multifactor productivity, use a subset of inputs.&lt;/p&gt;
&lt;h3 id=&#34;yield&#34; &gt;Yield
&lt;span&gt;
    &lt;a href=&#34;#yield&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;img class=equation src=&#34;https://latex.codecogs.com/svg.image?Yield=(Initial\,\,Quantity)\times(%good)+(1-%good)(%reworked)&#34;&gt;
&lt;p&gt;OR&lt;/p&gt;
&lt;img class=equation src=&#34;https://latex.codecogs.com/svg.image?Yield=(Initial\,\,Quantity)(%{good}_1)...(%{good}_n)&#34;&gt;
&lt;h3 id=&#34;product-cost&#34; &gt;Product Cost
&lt;span&gt;
    &lt;a href=&#34;#product-cost&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;For this one, I have my own simplified formulas.&lt;/p&gt;
&lt;img class=equation-tall src=&#34;https://latex.codecogs.com/svg.image?Product\,\,Cost=\frac{(mfg\,\,cost)+(rework\,\,cost)(1-%good)(%reworked)}{%good\times(1-%good)(%reworked)}&#34;&gt;
&lt;p&gt;This avoids calculating how many units were reworked.&lt;/p&gt;
&lt;h3 id=&#34;quality-productivity-ratio-qpr&#34; &gt;Quality Productivity Ratio (QPR)
&lt;span&gt;
    &lt;a href=&#34;#quality-productivity-ratio-qpr&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;Even for this one, I have my own method, but I&amp;rsquo;ll include the original in case some information isn&amp;rsquo;t given.&lt;/p&gt;
&lt;img class=equation-tall src=&#34;https://latex.codecogs.com/svg.image?QPR=\frac{% good}{(input)(processing\,\,cost)+(1-%good)(%reworked)(rework\,\,cost)}&#34;&gt;
&lt;img class=equation-tall src=&#34;https://latex.codecogs.com/svg.image?QPR=\frac{good}{(input)(processing\,\,cost)+(reworked)(rework\,\,cost)}&#34;&gt;
&lt;h2 id=&#34;statistical-analysis&#34; &gt;Statistical Analysis
&lt;span&gt;
    &lt;a href=&#34;#statistical-analysis&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;A type I Alpha error is an error that wasn&amp;rsquo;t supposed to fall outside the control limits. False-positive.&lt;/li&gt;
&lt;li&gt;A type II Beta error is an error that should&amp;rsquo;ve falled outside the control limits.&lt;/li&gt;
&lt;li&gt;Variations are either random or assignable.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;n&lt;/code&gt; refers to sample size or number of observations, and &lt;code&gt;k&lt;/code&gt; refers to the number of samples.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;z&lt;/code&gt; refers to the sigma count; either 2 or 3&lt;/li&gt;
&lt;li&gt;UCL and LCL stand for upper control limit and lower control limit.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;p-chart&#34; &gt;p-chart
&lt;span&gt;
    &lt;a href=&#34;#p-chart&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;A p-chart is a control limit chart with relation to the proportion of defects. It is used when there are multiple observations per sample and defects are reported.&lt;/p&gt;
&lt;img class=equation-tall src=&#34;https://latex.codecogs.com/svg.image?\bar p=\frac{total\,\,defects}{nk}&#34;&gt;
&lt;img class=equation-tall src=&#34;https://latex.codecogs.com/svg.image?\sigma_p=\sqrt{\frac{\bar p(1-\bar p)}{n}}&#34;&gt;
&lt;img class=equation src=&#34;https://latex.codecogs.com/svg.image?UCL=\bar p+z\sigma_p, LCL=\bar p-z\sigma_p&#34;&gt;
&lt;h3 id=&#34;c-chart&#34; &gt;c-chart
&lt;span&gt;
    &lt;a href=&#34;#c-chart&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;Similar to p-chart, except there is only 1 observation per sample.&lt;/p&gt;
&lt;img class=equation-tall src=&#34;https://latex.codecogs.com/svg.image?\bar c=\frac{total\,\,defects}{k}&#34;&gt;
&lt;img class=equation src=&#34;https://latex.codecogs.com/svg.image?\sigma_c=\sqrt{\bar c}&#34;&gt;
&lt;img class=equation src=&#34;https://latex.codecogs.com/svg.image?UCL=\bar c+2\sigma_c, LCL=\bar c-2\sigma_c&#34;&gt;
&lt;h3 id=&#34;x-chart&#34; &gt;x-chart
&lt;span&gt;
    &lt;a href=&#34;#x-chart&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;A chart used for checking if process variability is in control.&lt;/p&gt;
&lt;img class=equation src=&#34;https://latex.codecogs.com/svg.image?\bar{\bar x}=grand\,\,mean = mean\,\,of\,\,means&#34;&gt;
&lt;img class=equation-tall src=&#34;https://latex.codecogs.com/svg.image?\sigma_x=\frac{\sigma}{\sqrt n}&#34;&gt;
&lt;img class=equation src=&#34;https://latex.codecogs.com/svg.image?UCL=\bar{\bar x}+z\sigma_x, LCL=\bar{\bar x}-z\sigma_x&#34;&gt;
&lt;!-- Ctrl + F sigma --&gt;
&lt;p&gt;In the case σ is unknown, use the control factors table along with thse formulas:&lt;/p&gt;
&lt;img class=equation src=&#34;https://latex.codecogs.com/svg.image?UCL=\bar{\bar x}+A_2\bar R, LCL=\bar{\bar x}-A_2\bar R&#34;&gt;
&lt;h3 id=&#34;r-chart&#34; &gt;R-chart
&lt;span&gt;
    &lt;a href=&#34;#r-chart&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;A range chart, to test if variability is in control. Use the control factors table to determine factor values or to help you figure out other factor values.&lt;/p&gt;
&lt;img class=equation src=&#34;https://latex.codecogs.com/svg.image?\bar R=average\,\,range&#34;&gt;
&lt;img class=equation src=&#34;https://latex.codecogs.com/svg.image?UCL=D_4{\bar R}, LCL=D_3\bar R&#34;&gt;
&lt;h3 id=&#34;reliability&#34; &gt;Reliability
&lt;span&gt;
    &lt;a href=&#34;#reliability&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;To improve reliability,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;reduce number of components in a series&lt;/li&gt;
&lt;li&gt;increase backup components&lt;/li&gt;
&lt;li&gt;increase individual component reliability&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To calculate the relaibility of a process, use these two functions.&lt;/p&gt;
&lt;h4 id=&#34;series&#34; &gt;Series
&lt;span&gt;
    &lt;a href=&#34;#series&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;p&gt;For components in a series (independents), multiply their reliability scores:&lt;/p&gt;
&lt;img class=equation src=&#34;https://latex.codecogs.com/svg.image?x_1x_2x_3&#34;&gt;
&lt;h4 id=&#34;parallel-backups&#34; &gt;Parallel (Backups)
&lt;span&gt;
    &lt;a href=&#34;#parallel-backups&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;p&gt;For components that are in parallel (i.e. backups exist), follow this schema,&lt;/p&gt;
&lt;img class=equation src=&#34;https://latex.codecogs.com/svg.image?x_1+(1-x_1)x_2+(1-x_1)(1-x_2)x_3&#34;&gt;
&lt;h4 id=&#34;system-availability&#34; &gt;System Availability
&lt;span&gt;
    &lt;a href=&#34;#system-availability&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;img class=equation-tall src=&#34;https://latex.codecogs.com/svg.image?SA=\frac{mean\,\,time\,\,between\,\,failures}{MTBF+mean\,\,repair\,\,time}&#34;&gt;
&lt;h3 id=&#34;process-capability-index&#34; &gt;Process Capability Index
&lt;span&gt;
    &lt;a href=&#34;#process-capability-index&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;When design mean and process mean are the same use c&lt;sub&gt;p&lt;/sub&gt;, otherwise c&lt;sub&gt;pk&lt;/sub&gt;.&lt;/p&gt;
&lt;p&gt;If c&lt;sub&gt;p&lt;/sub&gt; and c&lt;sub&gt;pk&lt;/sub&gt; are &amp;gt;= 1, then the process is capable (99.70%).
If c&lt;sub&gt;p&lt;/sub&gt; = c&lt;sub&gt;pk&lt;/sub&gt;, then design mean and process mean are the same.&lt;/p&gt;
&lt;img class=equation-tall src=&#34;https://latex.codecogs.com/svg.image?c_p=\frac{upper\,\,limit-lower\,\,limit}{6\sigma}&#34;&gt;
&lt;p&gt;I tweaked the formula for c&lt;sub&gt;pk&lt;/sub&gt;. Instead of dividing both numbers by 3σ, divide only the min.&lt;/p&gt;
&lt;img class=equation-tall src=&#34;https://latex.codecogs.com/svg.image?c_{pk}=\frac{\min\{{upper\,\,limit-process\,\,mean,process\,\,mean-lower\,\,limit}\}}{3\sigma}&#34;&gt;
&lt;p&gt;The number chosen also represents which limit the process (mean) deviated towards.&lt;/p&gt;
&lt;h2 id=&#34;server-model&#34; &gt;Server Model
&lt;span&gt;
    &lt;a href=&#34;#server-model&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Poisson distribution&lt;/li&gt;
&lt;li&gt;First in First Out (FIFO)&lt;/li&gt;
&lt;li&gt;Infinite population because people served can re-join the queue&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The lambda variable refers to mean arrival rate and the mu variable refers to mean service rate.&lt;/p&gt;
&lt;p&gt;TODO: add table with formulas and descriptions&lt;/p&gt;
&lt;h2 id=&#34;simple-processes&#34; &gt;Simple Processes
&lt;span&gt;
    &lt;a href=&#34;#simple-processes&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;h2 id=&#34;learning-curves&#34; &gt;Learning Curves
&lt;span&gt;
    &lt;a href=&#34;#learning-curves&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;h2 id=&#34;capacity-planning&#34; &gt;Capacity Planning
&lt;span&gt;
    &lt;a href=&#34;#capacity-planning&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;End of Midterm Review&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;supply-chain-management-strategy--design&#34; &gt;Supply Chain Management Strategy &amp;amp; Design
&lt;span&gt;
    &lt;a href=&#34;#supply-chain-management-strategy--design&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Chain of organizations and facilities, with varying activities&lt;/li&gt;
&lt;li&gt;Multi-tiered&lt;/li&gt;
&lt;li&gt;Activities
&lt;ul&gt;
&lt;li&gt;forecasting, purchasing, product/proces design, manufacturing, quality assurance, inventory management, distribution&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;supply-chain-process&#34; &gt;Supply Chain Process
&lt;span&gt;
    &lt;a href=&#34;#supply-chain-process&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;Procurement of raw materials and services&lt;/li&gt;
&lt;li&gt;Production of product and services&lt;/li&gt;
&lt;li&gt;Storage of products in inventory&lt;/li&gt;
&lt;li&gt;Taking orders and distribution of products to the customer&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;supply-chain-for-service-providers&#34; &gt;Supply Chain for Service Providers
&lt;span&gt;
    &lt;a href=&#34;#supply-chain-for-service-providers&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Focuses on human resources&lt;/li&gt;
&lt;li&gt;Fewer tiers&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;supply-chain-management-scm&#34; &gt;Supply Chain Management (SCM)
&lt;span&gt;
    &lt;a href=&#34;#supply-chain-management-scm&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Systemic approach to manage entire flow of information, materials, and services from raw-materials to customers&lt;/li&gt;
&lt;li&gt;Goal: perfecting coordination and collabortaion of components to effectively meet demand at the right price, time, and place&lt;/li&gt;
&lt;li&gt;Competition becomes between supply chains rather than companies&lt;/li&gt;
&lt;li&gt;Transparency is important&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;bullwhip-effect&#34; &gt;Bullwhip Effect
&lt;span&gt;
    &lt;a href=&#34;#bullwhip-effect&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Supply chain members farther down the line get information after the members
nearer to customers.&lt;/li&gt;
&lt;li&gt;Safety stock issues&lt;/li&gt;
&lt;li&gt;Lack of accurate demand information&lt;/li&gt;
&lt;li&gt;Order batching results in less orders but larger quantities&lt;/li&gt;
&lt;li&gt;Price fluctuations&lt;/li&gt;
&lt;li&gt;Shortage gaming (placing orders more than is required bc inventory is short supply)&lt;/li&gt;
&lt;li&gt;Solutions
&lt;ul&gt;
&lt;li&gt;Coordination by parties for pricing, transportation, and inventory management&lt;/li&gt;
&lt;li&gt;Joint demand information forecast&lt;/li&gt;
&lt;li&gt;Price stabilization&lt;/li&gt;
&lt;li&gt;Discouraging shortage gaming&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I believe a solution is for the supplier to force the orderer to
tell them when the next order will be. That way, a supplier won&amp;rsquo;t have to decide
whether to anticipate more orders if batch ordering occurs.&lt;/p&gt;
&lt;h3 id=&#34;supply-chain-uncertainty&#34; &gt;Supply Chain Uncertainty
&lt;span&gt;
    &lt;a href=&#34;#supply-chain-uncertainty&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Inaccurate demand forecasting&lt;/li&gt;
&lt;li&gt;Long and Varying times for orders&lt;/li&gt;
&lt;li&gt;Late/Incomplete shipments&lt;/li&gt;
&lt;li&gt;Product changes and price fluctuations/discounts&lt;/li&gt;
&lt;li&gt;Batch ordering and inflated orders&lt;/li&gt;
&lt;li&gt;Failures cause chain reactions, leading to lag, lack of supply, and lower sales&lt;/li&gt;
&lt;li&gt;Inventory is used as insurance against uncertainty, however optimality needs to be determined&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;supply-chain-coordination-and-integration&#34; &gt;Supply Chain Coordination and Integration
&lt;span&gt;
    &lt;a href=&#34;#supply-chain-coordination-and-integration&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Sharing information&lt;/li&gt;
&lt;li&gt;Coordinated workflow, production, and operations, procurement&lt;/li&gt;
&lt;li&gt;Adopt new business models and tech&lt;/li&gt;
&lt;li&gt;Collaborative Planning, Forecasting, Replenishment (CPFR)&lt;/li&gt;
&lt;li&gt;Entreprise Resource Planning (ERP)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;information-technology&#34; &gt;Information Technology
&lt;span&gt;
    &lt;a href=&#34;#information-technology&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;E-Business&lt;/li&gt;
&lt;li&gt;Electronic data interchange (EDI)&lt;/li&gt;
&lt;li&gt;Barcode and point-of-sale (POS) data&lt;/li&gt;
&lt;li&gt;Radio Frequency Identification (RFID)&lt;/li&gt;
&lt;li&gt;Internet&lt;/li&gt;
&lt;li&gt;Blockchain&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;supply-chain-performance&#34; &gt;Supply Chain Performance
&lt;span&gt;
    &lt;a href=&#34;#supply-chain-performance&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;inventory turnover&lt;/li&gt;
&lt;li&gt;weeks of supply&lt;/li&gt;
&lt;/ul&gt;
&lt;img class=equation-tall src=&#34;https://latex.codecogs.com/svg.image?Inventory\,\,Turnover=\frac{cost\,\,of\,\,goods\,\,sold}{average\,\,aggregate\,\,value\,\,of\,\,inventory}&#34;&gt;
&lt;p&gt;Average aggregate inventory value is the sum of average inventory times value for each item.&lt;/p&gt;
&lt;img class=equation-tall src=&#34;https://latex.codecogs.com/svg.image?Days\,\,of\,\,Supply=\frac{opDays=365}{Inventory\,\,Turnover}&#34;&gt;
&lt;p&gt;Fill Rate = fraction of orders filled within a specific time period.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;low inventory turnover indicatest hat a large amount of inventory is required to satisfy demand&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;scor-model&#34; &gt;Scor Model
&lt;span&gt;
    &lt;a href=&#34;#scor-model&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Plan&lt;/li&gt;
&lt;li&gt;Source&lt;/li&gt;
&lt;li&gt;Make&lt;/li&gt;
&lt;li&gt;Deliver&lt;/li&gt;
&lt;li&gt;Enable&lt;/li&gt;
&lt;li&gt;Return&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;project-management&#34; &gt;Project Management
&lt;span&gt;
    &lt;a href=&#34;#project-management&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;h3 id=&#34;gantt-chart&#34; &gt;Gantt Chart
&lt;span&gt;
    &lt;a href=&#34;#gantt-chart&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;h3 id=&#34;project-elements&#34; &gt;Project Elements
&lt;span&gt;
    &lt;a href=&#34;#project-elements&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;Objective&lt;/li&gt;
&lt;li&gt;Scope&lt;/li&gt;
&lt;li&gt;Contract requirements&lt;/li&gt;
&lt;li&gt;Schedules&lt;/li&gt;
&lt;li&gt;Resources&lt;/li&gt;
&lt;li&gt;Personnel&lt;/li&gt;
&lt;li&gt;Control&lt;/li&gt;
&lt;li&gt;Risk and problem analysis&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;project-manager&#34; &gt;Project Manager
&lt;span&gt;
    &lt;a href=&#34;#project-manager&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;h3 id=&#34;project-planning&#34; &gt;Project Planning
&lt;span&gt;
    &lt;a href=&#34;#project-planning&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;h3 id=&#34;project-scheduling&#34; &gt;Project Scheduling
&lt;span&gt;
    &lt;a href=&#34;#project-scheduling&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;h3 id=&#34;project-contrl&#34; &gt;Project Contrl
&lt;span&gt;
    &lt;a href=&#34;#project-contrl&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;h3 id=&#34;work-breakdown-structure&#34; &gt;Work Breakdown Structure
&lt;span&gt;
    &lt;a href=&#34;#work-breakdown-structure&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;h3 id=&#34;cpm--pert&#34; &gt;CPM / PERT
&lt;span&gt;
    &lt;a href=&#34;#cpm--pert&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Critcal Path Method (CPM) &amp;amp; Program Evaluation Review Technique&lt;/li&gt;
&lt;li&gt;Program Evaluation and Review Technique&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Crticial Path for a table.&lt;/p&gt;
&lt;h3 id=&#34;probabilityic-precedence-example&#34; &gt;Probabilityic Precedence Example
&lt;span&gt;
    &lt;a href=&#34;#probabilityic-precedence-example&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;Identify the critical path and compute the project completion time.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Create a matrix and fill in values that are relvant.&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;What is the probability that the entire project is completed in 15 weeks or less?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;std path = sqrt(variance of path) = sqrt( variance A + &amp;hellip; variance Z ). Then use z = (x - u) / std and a table to get probability.&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;How many weeks are required to complete the project with probability 0.95?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Use table to get z, then use x = (z * variance + u) to get x.&lt;/p&gt;
&lt;h2 id=&#34;demand-forecasting&#34; &gt;Demand Forecasting
&lt;span&gt;
    &lt;a href=&#34;#demand-forecasting&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Projections of demand for products/services underlies strategic planning when it comes to plant or service
design.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;often inaccurate&lt;/li&gt;
&lt;li&gt;forecasts of similar goods is more accurate than individual items&lt;/li&gt;
&lt;li&gt;forecast horizons increases uncertainty&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;decision-based-on-forecasts&#34; &gt;Decision Based on Forecasts
&lt;span&gt;
    &lt;a href=&#34;#decision-based-on-forecasts&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Production and Operations
&lt;ul&gt;
&lt;li&gt;aggregate planning&lt;/li&gt;
&lt;li&gt;inventory control&lt;/li&gt;
&lt;li&gt;scheduling&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Finance
&lt;ul&gt;
&lt;li&gt;plant/equipment investment&lt;/li&gt;
&lt;li&gt;budgetery planning&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Marketing
&lt;ul&gt;
&lt;li&gt;new product introduction&lt;/li&gt;
&lt;li&gt;sales-force allocation&lt;/li&gt;
&lt;li&gt;promotions&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Human Resources
&lt;ul&gt;
&lt;li&gt;workforce planning&lt;/li&gt;
&lt;li&gt;hiring, layoff&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;making-forecasts-useful&#34; &gt;Making Forecasts Useful
&lt;span&gt;
    &lt;a href=&#34;#making-forecasts-useful&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;long enough to make it relevant
&lt;ul&gt;
&lt;li&gt;typically for daily, weekly, or monthly sales demand for up to approximately two
years into the future, depending on the company and the type of industry.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;limitations on accuracy must be clearly stated&lt;/li&gt;
&lt;li&gt;forecasting method should be reliable&lt;/li&gt;
&lt;li&gt;operations forecasts should be expressed in units&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;time-series-methods&#34; &gt;Time-Series Methods
&lt;span&gt;
    &lt;a href=&#34;#time-series-methods&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;h4 id=&#34;naive-method&#34; &gt;naive method
&lt;span&gt;
    &lt;a href=&#34;#naive-method&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;h4 id=&#34;moving-average&#34; &gt;moving average
&lt;span&gt;
    &lt;a href=&#34;#moving-average&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;p&gt;For MA-2, do (Actual_(n-1) + Actual_n) / 2. As the window increases, the lag will increase.&lt;/p&gt;
&lt;h4 id=&#34;weighted-moving-average&#34; &gt;weighted moving average
&lt;span&gt;
    &lt;a href=&#34;#weighted-moving-average&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;h4 id=&#34;exponential-smoothing&#34; &gt;exponential smoothing
&lt;span&gt;
    &lt;a href=&#34;#exponential-smoothing&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;img class=equation src=&#34;https://latex.codecogs.com/svg.image?F_{t+1}=\alpha D_t + (1-\alpha)F_t&#34;&gt;
&lt;h4 id=&#34;adjusted-exponential-smoothing&#34; &gt;adjusted exponential smoothing
&lt;span&gt;
    &lt;a href=&#34;#adjusted-exponential-smoothing&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;p&gt;Example&lt;/p&gt;
&lt;p&gt;For the data given below, generate a forecast period 1 - 5 sing adjusted exponential smoothing.
Assume alpha = 0.5 and beta = 0.3.&lt;/p&gt;
&lt;p&gt;The formula for the adjusted exponential smoothing forecast requires an initial value for Tt to start
the computational process. For this case let&amp;rsquo;s assume initial T is 0.&lt;/p&gt;
&lt;p&gt;Ft = Ft-1 + alpha(A_t-1 - F_t-1)&lt;/p&gt;
&lt;p&gt;Tt = Beta(Ft - F_t-1) + (1 - Beta)T_t-1&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Period&lt;/th&gt;
&lt;th&gt;Month&lt;/th&gt;
&lt;th&gt;Demand&lt;/th&gt;
&lt;th&gt;Forecast Ft&lt;/th&gt;
&lt;th&gt;Trend Ti&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;JAN&lt;/td&gt;
&lt;td&gt;37&lt;/td&gt;
&lt;td&gt;37.00&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;FEB&lt;/td&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;td&gt;37.00&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;MAR&lt;/td&gt;
&lt;td&gt;41&lt;/td&gt;
&lt;td&gt;38.50&lt;/td&gt;
&lt;td&gt;0.45&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;APR&lt;/td&gt;
&lt;td&gt;37&lt;/td&gt;
&lt;td&gt;39.75&lt;/td&gt;
&lt;td&gt;0.69&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;MAY&lt;/td&gt;
&lt;td&gt;45&lt;/td&gt;
&lt;td&gt;38.37&lt;/td&gt;
&lt;td&gt;0.07&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;seasonal-adjustments&#34; &gt;Seasonal Adjustments
&lt;span&gt;
    &lt;a href=&#34;#seasonal-adjustments&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;h4 id=&#34;forecasting-error&#34; &gt;Forecasting Error
&lt;span&gt;
    &lt;a href=&#34;#forecasting-error&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;h2 id=&#34;inventory-management&#34; &gt;Inventory Management
&lt;span&gt;
    &lt;a href=&#34;#inventory-management&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;h3 id=&#34;inventory-control-systems&#34; &gt;Inventory Control Systems
&lt;span&gt;
    &lt;a href=&#34;#inventory-control-systems&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;h4 id=&#34;continuous-system&#34; &gt;Continuous System
&lt;span&gt;
    &lt;a href=&#34;#continuous-system&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;fixed order quantity&lt;/li&gt;
&lt;li&gt;inventory is continually monitored&lt;/li&gt;
&lt;li&gt;reorder oint, economic order quantity&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;periodic-system&#34; &gt;Periodic System
&lt;span&gt;
    &lt;a href=&#34;#periodic-system&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;fixed time period&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;economic-order-quantities&#34; &gt;Economic Order Quantities
&lt;span&gt;
    &lt;a href=&#34;#economic-order-quantities&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;EOQ = Q* = sqrt( 2DC/C_C )&lt;/p&gt;
&lt;p&gt;TC = C_c * (Q*)/2 + C_O * D/(Q*) = Holding Cost + Ordering cost&lt;/p&gt;
&lt;p&gt;D/Q = purchase orders per year&lt;/p&gt;
&lt;h3 id=&#34;inventory-control-cost&#34; &gt;Inventory Control Cost
&lt;span&gt;
    &lt;a href=&#34;#inventory-control-cost&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;TC = C_c times Q/2 + C_O * D/Q&lt;/p&gt;
&lt;h2 id=&#34;exam-review&#34; &gt;Exam Review
&lt;span&gt;
    &lt;a href=&#34;#exam-review&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;</description>
    </item>
    
    <item>
      <title>My Thoughts on Canada</title>
      <link>https://blog.elijahlopez.ca/posts/canada/</link>
      <pubDate>Sat, 21 May 2022 01:18:18 -0400</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/canada/</guid>
      <description>&lt;p&gt;This article will be the one stop shop for my thoughts on Canada.
Please refer to the table of contents to read sections that are interesting to you.&lt;/p&gt;
&lt;div&gt;
    &lt;h2&gt;Table of Contents&lt;/h2&gt;
    &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#housing-affordability&#34;&gt;Housing Affordability&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#reducing-demand---major-speculation-tax&#34;&gt;Reducing Demand - Major Speculation Tax&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#increasing-supply---vacant-homes&#34;&gt;Increasing Supply - Vacant Homes&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#increasing-supply---prioritized-development&#34;&gt;Increasing Supply - Prioritized Development&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#the-ideal-canadian-life&#34;&gt;The Ideal Canadian Life&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#living-situation&#34;&gt;Living Situation&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#activities&#34;&gt;Activities&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#income&#34;&gt;Income&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#125000-careers&#34;&gt;$125,000 Careers&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#the-government&#34;&gt;The Government&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#a-fair-electoral-system&#34;&gt;A Fair Electoral System&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#taxes&#34;&gt;Taxes&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#organ-donors&#34;&gt;Organ Donors&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#education&#34;&gt;Education&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#national-defence&#34;&gt;National Defence&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#my-platform&#34;&gt;My Platform&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#improving-electoral-system&#34;&gt;Improving Electoral System&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#improving-disability-benefits&#34;&gt;Improving Disability Benefits&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#improving-housing-affordability&#34;&gt;Improving Housing Affordability&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#improving-indigenous-relations&#34;&gt;Improving Indigenous Relations&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#improving-the-tax-system&#34;&gt;Improving the Tax System&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#income-entering-the-workforce-brain-drain&#34;&gt;Income, entering the workforce, brain drain&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#improving-education&#34;&gt;Improving Education&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#drunk-driving&#34;&gt;Drunk Driving&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/div&gt;

&lt;h2 id=&#34;housing-affordability&#34; &gt;Housing Affordability
&lt;span&gt;
    &lt;a href=&#34;#housing-affordability&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Let us start off with one of the biggest issues facing Canadians under the age of 40.
The best way to deal with housing affordability is to make homes affordable for those that don&amp;rsquo;t own a home. This means reducing the demand from non-primrary home buyers and increasing housing supply.&lt;/p&gt;
&lt;p&gt;Domestic speculation is a probelm in Canada. Temporarily banning foreign buyers or taxing vacancy is not going to bring affordability. It doesn&amp;rsquo;t go far enough. You have to ban foreign ownership itself.
Why do we even let foreign buyers purchase residential homes in the first place? That itself should be taxable. Call it a foreign ownership tax.&lt;/p&gt;
&lt;p&gt;As a Canadian citizen, I would expect to not be able to purchase a US home, unless I have a green card or was a dual citizen, even if I have work permit. That is not the case, but that&amp;rsquo;s because the US econmy is 10x Canada&amp;rsquo;s. Likewise, foreigners who &lt;strong&gt;cannot&lt;/strong&gt; reside in Canada, should not be able to buy properties in Canada.&lt;/p&gt;
&lt;p&gt;I do not think housing should be something where land lords can live off the rent they make. That is absurd, and thus companies should not be allowed to buy residential properties either. If companies own residential properties, it should be because of reasons like developing the property itself.&lt;/p&gt;
&lt;p&gt;As for undeveloped land, we could say that development of the land has to be started within a year of purchase, otherwise both the previous and the current owner get fined. However, I don&amp;rsquo;t think there is a problem yet with undeveloped land, so let&amp;rsquo;s keep this up our sleeve.&lt;/p&gt;
&lt;h3 id=&#34;reducing-demand---major-speculation-tax&#34; &gt;Reducing Demand - Major Speculation Tax
&lt;span&gt;
    &lt;a href=&#34;#reducing-demand---major-speculation-tax&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;To reduce demand, we will add a buyers (speculation) tax on non-primary home purchases for homes transactions that are more than $150,000. There&amp;rsquo;s no reason to own more homes than people in your immediate family. For clarification on the definition of an immediate family, a couple with one kid over 18 can buy 3 homes but a couple with a kid less than 18 can only buy 2.&lt;/p&gt;
&lt;p&gt;I propose this speculation tax to start at 50% and to modify it the next year. If it&amp;rsquo;s too low, we&amp;rsquo;ll make it 100%. If prices dramatically fall, we will get hated by property owners but at least the U40 population will vote for us again. If even a 100% tax is too low, we can further reduce the 150k threshold so that most couples would have to use their secndary home allowance itself as the other tax-free property. For example a secondary property could be a storage area, a cottage, or a simple office.&lt;/p&gt;
&lt;p&gt;Existing home owners with more homes than people in their immediate family have 6 months to pay the buyers tax on their (# homes - # family members) most expensive homes. So even if a couples primary residence is the most expensive, they have to pay the buyers tax on it and not their cheaper investment properties. The problem in Canada isn&amp;rsquo;t just foreign spending, it&amp;rsquo;s domestic speculation. We need to tackle our own greed.&lt;/p&gt;
&lt;p&gt;With this buyers tax, one could argue that a couple itself is treated as one in the eyes of the law, and therefore they should be given one less home to own, but I think that would mess with something other than housing prices.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m up for debate on whether to include properties that were inherited.&lt;/p&gt;
&lt;p&gt;This buyers tax should be implemented federally. People who are buying homes in multiple provinces are definitely upper middle class or rich. Therefore, a 50% or even 100% tax is not a problem if they are buying to live rather than to rent. Imagine a multi millionaire; that 500k property now costs 1M, so it&amp;rsquo;s not a problem.&lt;/p&gt;
&lt;h3 id=&#34;increasing-supply---vacant-homes&#34; &gt;Increasing Supply - Vacant Homes
&lt;span&gt;
    &lt;a href=&#34;#increasing-supply---vacant-homes&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;I was watching a video on a $20M abandoned mansion in Toronto. I searched more up. There are many vacant or abandend properties in Toronto.
This neeeds to stop. The governments on all levels need to enact a law that would force current property owners and banks to either find a tenant
within 6 months, or be forced to auction the property off through a government website with no reservation price. This would end up housing
60,000 groups of people in Toronto alone and probably. A vacanacy tax is only an incentive to sell, but does not actually
solve housing. Nationally, we can conservatively estimate there to be $100,000. The purchasing agreement would be
1 month to change the primary residences, find a tenant, or to create renovation plan with details.
With thed demand constrained, it&amp;rsquo;ll mostly be a primary residence thing rather than finding tenant.
To prevent renovation abuse, we should enact a fine on the renovation filer 2 years later.
This also prevents owners from abusing the renovation clause in order to flip the house.&lt;/p&gt;
&lt;h3 id=&#34;increasing-supply---prioritized-development&#34; &gt;Increasing Supply - Prioritized Development
&lt;span&gt;
    &lt;a href=&#34;#increasing-supply---prioritized-development&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;In the case reducing demand isn&amp;rsquo;t enough, the affordability problem is clearly supply sided. My proposal is that we use the tax revenue from the speculation tax to fund housing developments. The government should not spend this money. We should issue loans at an interest rate equal to the rate banks offer. We can either create a new department would handle this stuff or if there is a lot of money, loan the money to credit unions directly and let them issue the loans for us.&lt;/p&gt;
&lt;p&gt;The procedure for giving out loans is as follows. Start with neglected and cheaper provinces. The residents of these provinces have the least purchasing power and therefore are more vulnerable to housing affordability. New Brunswick for one. The territories have their own problem like Nunavut needing $100M for their water plant but I didn&amp;rsquo;t get a chance to look at their budget to figure out if they just want a handout or are being serious. We want to fund housing developments in three provinces concurrently. These provinces are picked by a median income ascending. Again, territories are something else, so we need a different strategy for them.&lt;/p&gt;
&lt;p&gt;In the long term, we should focus on more than fixing housing prices, but distributing them equally across Canada which includes distributing job opportunity and incomes a cross the board.&lt;/p&gt;
&lt;h2 id=&#34;the-ideal-canadian-life&#34; &gt;The Ideal Canadian Life
&lt;span&gt;
    &lt;a href=&#34;#the-ideal-canadian-life&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Now we can move on to idealism rather than current issues.&lt;/p&gt;
&lt;p&gt;What is the ideal Canadian life? I want to answer this question. It&amp;rsquo;s very easy to fall prey to the unlimited wants nature, so we&amp;rsquo;ll have to answer what would make a Canadian content without bias?&lt;/p&gt;
&lt;p&gt;The age at which this idealism should be achieved for Canadians is 30 years old.
I believe by 30 people would start a family. I also know that by 30,
we start to visually age. So at 30, we want to be living our ideal life.&lt;/p&gt;
&lt;h3 id=&#34;living-situation&#34; &gt;Living Situation
&lt;span&gt;
    &lt;a href=&#34;#living-situation&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;I haven&amp;rsquo;t made up my mind on whether to have children or not, but in the off chance that I
do, I&amp;rsquo;d probably have 2 children. Therefore, an ideal &lt;em&gt;house&lt;/em&gt; will have 3-4 bedrooms.
The extra one is for guests. I think there should also be 3 washrooms.&lt;/p&gt;
&lt;p&gt;One should plan out the general location where they want to build a family right after marriage&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; because then you won&amp;rsquo;t be locked into a location because of work, family, or friends. I&amp;rsquo;m pretty sure this is one of the biggest factors preventing people from moving to affordable locations. The other factors are activities which we&amp;rsquo;ll get to now. Personally, I would love to live in New Brunswick, but I&amp;rsquo;ll try to cater to all. If you want nightlife, you&amp;rsquo;ll have to lower your bedroom and washroom numbers.&lt;/p&gt;
&lt;h3 id=&#34;activities&#34; &gt;Activities
&lt;span&gt;
    &lt;a href=&#34;#activities&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;For this, I&amp;rsquo;ll have to think from other peoples&amp;rsquo; shoes. We have two ways to go for this. We can go suburban or urban.
For sake of the American Dream &lt;em&gt;fantasy&lt;/em&gt;, we&amp;rsquo;ll go the suburban route. So our activities consist of: waterpark within two hours, theme park within 2 hours, a picnic type park within 15 minutes, biking routes, tennis court, basketball court, soccer fields. Also a gym if you want to improve your physique. You can reduce or increase this list based on your wants.&lt;/p&gt;
&lt;h3 id=&#34;income&#34; &gt;Income
&lt;span&gt;
    &lt;a href=&#34;#income&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;Warning, this section is completely scuffed; as in I might&amp;rsquo;ve made more than one blunder.&lt;/p&gt;
&lt;p&gt;My thought process for this is simple. We need to calculate ideal income based on how much we need to invest in the stock market, how much we will pay for mortgage, and how much we would want to spend per month on other things.&lt;/p&gt;
&lt;p&gt;This ia big one, if not the biggest. Typically, we want $1M in cash by the time of retirement. Why? With $1M and 7% average annual S&amp;amp;P 500 return, we get $50,000-$70,000 per year if income tax is payable or not. I believe this is enough since we assume there is no mortgage and we aren&amp;rsquo;t going on spending sprees. With disposable income of $4,000 / month which would be worth $2,000 minimum accounting for inflation, we&amp;rsquo;re good.
In total, household networth at retirement (age 55) should be $1.5M to $3M. In business classes, we&amp;rsquo;d do some math to calculate the money needed at retirement in order to die with X amount of money. However, since we are dealing with an ideal lifestyle, we want to be able to live off passive income and leave our children with something.&lt;/p&gt;
&lt;p&gt;We need to employ some financial equations now to account for real stock market growth of 8.66%.&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; To get this number, I used 35 years of data from Jan 1st 1986 to Dec 31 2021, adjust for inflation, add dividends, and subtract 0.03% because VOO is the cheapest S&amp;amp;P 500 exchange traded fund (ETF).&lt;/p&gt;
&lt;p&gt;I don&amp;rsquo;t have time to update my old investing article, but I summarized the basics &lt;a href=&#34;https://blog.elijahlopez.ca/posts/investing&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We can use this Python function I made in 2019/2020 to first calculate how much we need to put into the stock market per week.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#447fcf&#34;&gt;get_savings_amt&lt;/span&gt;(future_savings, years_to_retirement, interest_rate,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    compounds_per_year=&lt;span style=&#34;color:#3677a9&#34;&gt;2&lt;/span&gt;, startwith=&lt;span style=&#34;color:#3677a9&#34;&gt;0&lt;/span&gt;, saving_period=&lt;span style=&#34;color:#3677a9&#34;&gt;12&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;    Calculates how much you need to save per month to retire given the parameters
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    r, m, n = interest_rate, compounds_per_year, years_to_retirement * saving_period
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    efr = (&lt;span style=&#34;color:#3677a9&#34;&gt;1&lt;/span&gt; + r/m) ** (m / saving_period) - &lt;span style=&#34;color:#3677a9&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    already_secured = startwith * (&lt;span style=&#34;color:#3677a9&#34;&gt;1&lt;/span&gt; + r / m) ** (m * years_to_retirement)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    future_savings -= already_secured
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;return&lt;/span&gt; future_savings * efr / ((&lt;span style=&#34;color:#3677a9&#34;&gt;1&lt;/span&gt; + efr) ** n - &lt;span style=&#34;color:#3677a9&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt;&amp;gt;&amp;gt; &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# assume we start working at 25, we start with $0, and we compound yearly&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt;&amp;gt;&amp;gt; &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# multiply by two to account for market volatility&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt;&amp;gt;&amp;gt; get_savings_amt(&lt;span style=&#34;color:#3677a9&#34;&gt;1000000&lt;/span&gt;, &lt;span style=&#34;color:#3677a9&#34;&gt;30&lt;/span&gt;, &lt;span style=&#34;color:#3677a9&#34;&gt;0.0866&lt;/span&gt;, &lt;span style=&#34;color:#3677a9&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#3677a9&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#3677a9&#34;&gt;52&lt;/span&gt;) * &lt;span style=&#34;color:#3677a9&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt;&amp;gt;&amp;gt; &lt;span style=&#34;color:#3677a9&#34;&gt;288.51322722512805&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the future I will try testing this out on actual data and seeing if the results are as intended. The market is volatile so we can&amp;rsquo;t use an answer based on a monotonic assumption without double checking. In order to account for volatility, I doubled my answer.&lt;/p&gt;
&lt;p&gt;$288/week translates to $1,248/month or $14,976/yr.&lt;/p&gt;
&lt;p&gt;A down payment on a $2M home is $400,000 and if we want to buy it when we are 30, we&amp;rsquo;ll need to save (household) $80,000
per year.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;What&lt;/th&gt;
&lt;th&gt;Yearly Amount (CAD)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Investing&lt;/td&gt;
&lt;td&gt;15,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Downpayment&lt;/td&gt;
&lt;td&gt;80,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Food&lt;/td&gt;
&lt;td&gt;15 * 30 = 10,950&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Two Cars&lt;/td&gt;
&lt;td&gt;15,000 to 30,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Mortgage/Rent&lt;/td&gt;
&lt;td&gt;4,600 to 9,305.68&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Monthlies&lt;/td&gt;
&lt;td&gt;250 * 12 = 3,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Misc.&lt;/td&gt;
&lt;td&gt;10,000 to 12,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Vacation???&lt;/td&gt;
&lt;td&gt;3,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Upper TOTAL&lt;/td&gt;
&lt;td&gt;163,255&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Upper Income&lt;/td&gt;
&lt;td&gt;280,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lower TOTAL&lt;/td&gt;
&lt;td&gt;146,255&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lower Income&lt;/td&gt;
&lt;td&gt;250,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Per Person&lt;/td&gt;
&lt;td&gt;125,000&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;I did a lot of rounding and over-estimations, but overall I&amp;rsquo;m happy with my results. The upper bound is assuming you are
a baller and want a $2M home. That&amp;rsquo;s not me, but some people out there want to be entitled to that. Personally, $1M home is enough for me, especially if it&amp;rsquo;s in New Brunswick.&lt;/p&gt;
&lt;p&gt;I guess this is the problem then huh? When half of Canadians earn less than 80,000, the ideal Canadian life is unattainable unless you&amp;rsquo;re in specific career paths. So we&amp;rsquo;ll look at careers that can earn 125,000 including alternative careers, as well as what Canada (government) can do to improve the situation (increasing purchasing power).&lt;/p&gt;
&lt;h3 id=&#34;125000-careers&#34; &gt;$125,000 Careers
&lt;span&gt;
    &lt;a href=&#34;#125000-careers&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;Software engineering of course. Product managers and project managers also make this, but those career paths are really talked about. Someone should make an article on those two career paths. What else? Lawyers, doctors, investment banking.&lt;/p&gt;
&lt;p&gt;I don&amp;rsquo;t really feel like writing this section, so I&amp;rsquo;ll stop for now. I think the issue is that there&amp;rsquo;s no way to make a 30 year old experienced enough to earn that much in some of these career paths that start off only at $80,000.&lt;/p&gt;
&lt;h2 id=&#34;the-government&#34; &gt;The Government
&lt;span&gt;
    &lt;a href=&#34;#the-government&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Engineers are grossly underpaid in Canada and the US. Not all engineering challenges are complete, yet these people get paid pebbles. I propose some industries that are lacking in Canada. We need Canadian companies for these engineering innovation industries.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CPU chips&lt;/li&gt;
&lt;li&gt;electronics&lt;/li&gt;
&lt;li&gt;automobile&lt;/li&gt;
&lt;li&gt;aerospace&lt;/li&gt;
&lt;li&gt;defense&lt;/li&gt;
&lt;li&gt;agriculture&lt;/li&gt;
&lt;li&gt;telecommunications outside of Ontario and Quebec&lt;/li&gt;
&lt;li&gt;lumber vertical integration (companies that use wood extensively)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We should also abolish the P. Eng fee. What a useless fee. People should not be sitting on their asses while others work hard.&lt;/p&gt;
&lt;h3 id=&#34;a-fair-electoral-system&#34; &gt;A Fair Electoral System
&lt;span&gt;
    &lt;a href=&#34;#a-fair-electoral-system&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;After the 2021 Federal election, I was dismayed at how horribly parliament seats reflected who voters voted. So I came up
with a proof-of-concept of a new electroal system that combines local representation with a proportional voting. I&amp;rsquo;m calling it the
&lt;a href=&#34;https://blog.elijahlopez.ca/posts/representative-proportional-voting&#34;&gt;Represenative Proportional Voting&lt;/a&gt;. It&amp;rsquo;s in its infancy at the moment,
but I hope to formalize the algorithm and system in the future.&lt;/p&gt;
&lt;h3 id=&#34;taxes&#34; &gt;Taxes
&lt;span&gt;
    &lt;a href=&#34;#taxes&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;TODO: split into different types of taxes (income, property, sales, sin, capital gains, tax ethics, duties/tariffs, etc.)&lt;/p&gt;
&lt;p&gt;The government goal should be to use taxes to create a sustainable environment for innovation and wealth. Taxes should be used wisely with the end goal of lowering taxes. Governments should create self-sustainable nationlised businesses where the nature is a priviledge rather than a need. Things like health care should remain nationalized, but private health care should also be allowed as it is in Quebec. Not sure why courts in Canada think that private health care access takes away from Canadians who are using the public health care system, but hey I&amp;rsquo;m not a judge and they aren&amp;rsquo;t economists.&lt;/p&gt;
&lt;h4 id=&#34;sales-tax&#34; &gt;Sales Tax
&lt;span&gt;
    &lt;a href=&#34;#sales-tax&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;p&gt;Should not exist. There are so many exceptions and the CRA does not do a good job at exempting everything. For example, the CRA reqeuires you to have a phone number
in order to login because of 2FA, but phone plans and phones have salex tax. These are necessities and a sales tax is regressive&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; in this case.
There are simply too many cases of figuring out what is a necessity and what isn&amp;rsquo;t. Not to mention that on top of federal sales tax, each province has its
own sales tax rules. Therefore a national business needs to report to so many different provinces or join something like US&amp;rsquo;s nexus. So then implementing a
sales tax fattens the government (additional beauracracy).&lt;/p&gt;
&lt;h4 id=&#34;tariffs&#34; &gt;Tariffs
&lt;span&gt;
    &lt;a href=&#34;#tariffs&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;p&gt;There should be almost 0 tariffs and import duties. If people want to shop in America, good for them. A trip to America is not free, so why make citizens&amp;rsquo; lives more expensive?&lt;/p&gt;
&lt;h3 id=&#34;organ-donors&#34; &gt;Organ Donors
&lt;span&gt;
    &lt;a href=&#34;#organ-donors&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;People can choose to donate their organs for free upon death, but yet organs go for
thousands of dollars in black markets? Governments should incentivize people in poverty to become organ donors so that when they die, their family will receive a payment instead of being left with nothing. A charity should be started for this at the very least.&lt;/p&gt;
&lt;h3 id=&#34;education&#34; &gt;Education
&lt;span&gt;
    &lt;a href=&#34;#education&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;For a country to be competitive on the global stage, education must be done in a way that strives for perfection and without excuses.
It is one of the things that I&amp;rsquo;m okay with requiring mandating. People under 18 are simply not mature or intelligent enough to make their own decisions
in life, and the current state does not integrate elementary well with high school well with post-secondary. In high school, there is school
every day, for four courses, in a longer term than university, where there are 5 courses, not every day, with a shorter term, harder, expensive,
and a higher risk of failing.&lt;/p&gt;
&lt;p&gt;So what is &amp;ldquo;so good.&amp;rdquo; Good question, I will leave this as an exercise for the reader. Just kidding; This is a TODO since like I said in the introduction,
this article is a collection of my thoughts on Canada that come to mind. I also try to keep it as articulate and cohesive as possible,
rather than vomit words. I aswell try to add my quirks and humor where I can.&lt;/p&gt;
&lt;h3 id=&#34;national-defence&#34; &gt;National Defence
&lt;span&gt;
    &lt;a href=&#34;#national-defence&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;One of the key functions of the government is to support national defence. Now even though Canada is part of NATO, NATO members are supposed to spend
2% of their GDP on national defence. I disagree with this percentage idea. If a percentage, it should be based on tax revenue, not GDP. Better yet,
there should be a plan on how to spend on national defence. There are 4+ things when it comes to national defence. Air, Water, Land, range weapons (i.e. missiles/nukes),
and air-defence (e.g. Iron Dome).&lt;/p&gt;
&lt;h4 id=&#34;airforce&#34; &gt;Airforce
&lt;span&gt;
    &lt;a href=&#34;#airforce&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;p&gt;An airforce is crucical. A single aircraft can devastate many land units, so an air-defence system is just as crucial. An airforce should be as mobile
as possible and should be not be crippled with one attack. In other words, there should be multiple air-bases and the location of these bases need to completely
classified or opaqued, but the existence of them should be stated. This is an equal balance between government secrets in the name of national defence. Some
governments, like the USA, take it too far and classify even operations. An operation should be classified until it&amp;rsquo;s over. Then it should be made as transparent as possible.&lt;/p&gt;
&lt;h4 id=&#34;navy&#34; &gt;Navy
&lt;span&gt;
    &lt;a href=&#34;#navy&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;p&gt;A Navy is useful for shipping as well as long-lasting operations. It&amp;rsquo;s also useful to for saving the fuel of aircrafts and keeping a moving aircraft base.
That is, instead of having fixed aircraft bases, we can have mobile bases. Hypothetically, aircraft carriers reduce the need of fixed airbases and thus
we could save money while improving the reliability of the air-force.&lt;/p&gt;
&lt;h4 id=&#34;army&#34; &gt;Army
&lt;span&gt;
    &lt;a href=&#34;#army&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;p&gt;The army is useful when aircrafts and missiles cannot be used luxuriously. An army&amp;rsquo;s strength is determined by both strategy and manpower. This is because, one
person could either take out 100+ enemy soldiers, or die without being of any use. For countries like Canada, we should reduce the school length term for
grade 12ers so that their 4 month summer can be spent learning how to be part of the military. I am against military conscription, but with a trained
civilian population, we will be able to depend more on the power of patriotism, civil duty, and volunteerism. A person with even basic military education will
be more willing than a 30 year old who has never shot a gun before.&lt;/p&gt;
&lt;p&gt;This training will not be as strict as the army and military is at the moment. I am strongly against force, so things like being forced to get a haircut, cost-savings
on living quarters, and drill sargents are a big no. People should not be scared of the training, but rather take it calmly. The entire course should
be able to be completed in 3 months, there should be lots of free time mixed in so that people don&amp;rsquo;t lose their minds. Since the program can be completed in 3
months, an extra 2 weeks of bonus or specialized education should be added for people who completed the education on time while the people who lagged behind,
can catch up on their basics. This is perfect because a) does not stop the progress of fast learners b) gives slower people more time to learn.&lt;/p&gt;
&lt;h2 id=&#34;my-platform&#34; &gt;My Platform
&lt;span&gt;
    &lt;a href=&#34;#my-platform&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;My platform would be run on the basis of redefining what a government&amp;rsquo;s job. It is to govern after all, and so we need
to redefined it to govern effectively. We&amp;rsquo;ll start by prioritizing issues. What are the greatest issues faced by Canadians?
I won&amp;rsquo;t go into the detail on why I chose this order, only my plan or solution for each of them.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Electoral system&lt;/li&gt;
&lt;li&gt;Disability benefits&lt;/li&gt;
&lt;li&gt;Housing affordability&lt;/li&gt;
&lt;li&gt;Indigenous people&lt;/li&gt;
&lt;li&gt;Income, entering the workforce, brain drain&lt;/li&gt;
&lt;li&gt;Education&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;improving-electoral-system&#34; &gt;Improving Electoral System
&lt;span&gt;
    &lt;a href=&#34;#improving-electoral-system&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;My first order of business is fixing the electoral system on all levels of government.  By making a system more democratic, parties are forced to collaborate in order to get work done. I want to set the example for what democracy looks like and all countries should look at Canada as being the most innovative and progressive in terms of democracy and fundamental human rights.&lt;/p&gt;
&lt;p&gt;As mentioned before, we will use the &lt;a href=&#34;https://blog.elijahlopez.ca/posts/representative-proportional-voting&#34;&gt;Represenative Proportional Voting&lt;/a&gt;. A recap: MP and MPPs still exist, but are chosen based upon party confidence in each riding, and not winning the riding (independents are the exception).&lt;/p&gt;
&lt;h3 id=&#34;improving-disability-benefits&#34; &gt;Improving Disability Benefits
&lt;span&gt;
    &lt;a href=&#34;#improving-disability-benefits&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;This issue is getting out of hand. On a pronvincial level, it&amp;rsquo;s an expenditure spiral;
in other words, the province with the best benefits attracts disabled people (rightfully) from other provinces
and in the long-run, would end up paying more for the program than other provinces. Therefore, disability &lt;strong&gt;benefits&lt;/strong&gt;
should be solely within the jurisdiction of the Federal government. Accesibility doesn&amp;rsquo;t seem like an issue so I won&amp;rsquo;t comment on that.&lt;/p&gt;
&lt;p&gt;Now, let us create a comprehensive plan for disabled people in Canada. I&amp;rsquo;m waiting on getting data on Ontario&amp;rsquo;s disability benefits,
but after that I will continue this section.&lt;/p&gt;
&lt;h3 id=&#34;improving-housing-affordability&#34; &gt;Improving Housing Affordability
&lt;span&gt;
    &lt;a href=&#34;#improving-housing-affordability&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;I already talked about this at the &lt;a href=&#34;#housing-affordability&#34;&gt;beginning&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;improving-indigenous-relations&#34; &gt;Improving Indigenous Relations
&lt;span&gt;
    &lt;a href=&#34;#improving-indigenous-relations&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;This is such a hot topic. People are quick to jump to their feet and march for the unmarked graves at residential schools,
but aren&amp;rsquo;t willing to start a discussion on what we should do in 2022. The indigenous issue has existed for over a century.
For goodness sake, the indigenous are still referred to as Indians in formally! Anyways, getting back on topic&amp;hellip;&lt;/p&gt;
&lt;p&gt;We need to think about the issue differently. That is take the total population of each province, and divide the pronvince&amp;rsquo;s land size by this number.&lt;/p&gt;
&lt;img class=equation-tall src=&#34;https://latex.codecogs.com/svg.image?landPerCapita=\frac{province\,\,size}{province\,\,population}&#34;&gt;
&lt;p&gt;Now that we have the land per capita, we multiply it by the Indigenous population in each province to get the land the indegenous are owed.
This is the land that is owed, so then we partition hunting land in each province equal to land owed minus land presently occupied as reserves.
This ensures that a) current reserves don&amp;rsquo;t go away, b) no more than land owed. This calculation isn&amp;rsquo;t required at the moment since I&amp;rsquo;m
not even in politics!&lt;/p&gt;
&lt;p&gt;So we&amp;rsquo;ve given the indigenous people the land they are owed, but that&amp;rsquo;s not enough. They need to be given more freedom and more rights.
We shall negotatite with the Indenous and decide something important. Does the Indigenous people want government investment into infrastructure,
or do they want to manage their land themselves? If the former, then they will have to pay only income taxes at half the rate for 250 years (not arbitrary, but it is rounded). If the latter,
they can invite the private industry themselves to invest in infrastructure like fiber optics and tellecommunication towers. I have no clue
how the Indigenous people want to live, but since each province&amp;rsquo;s population gets to decide, I&amp;rsquo;m sure at least one would choose the nomad style.
They are free to change their mind from no-support to having government support, but not the other way around.&lt;/p&gt;
&lt;p&gt;These areas will be free to incorporate. If they do so, a proportional voting system shall be used to determine 10 representatives and a leader.
I think with proportional voting, this will suffice. Once incorporated, they can choose to sell land to developers and initiate a tax on that land.
The government will provide city planners as advisors no matter the level of independence chosen. The goal is to build a sustainable economy for the
indigenous and allow them to choose without pressure to leave the  Indigenous locality. For example, they might want to preserve their culture and language.
So something like English/French language laws wouldn&amp;rsquo;t apply. However, if they decide to invite private industry, they&amp;rsquo;d probably want to support the English language.&lt;/p&gt;
&lt;p&gt;The education system doesn&amp;rsquo;t teach much about Indigenous history other than a couple classes in elementary school. How did they get here before the Vikings, what
were they doing the last couple of centuries, how did they react to the British small pox? It is critical to include Indigenous history as part of Canada&amp;rsquo;s history
if we are to recognize them as having a claim to this land.&lt;/p&gt;
&lt;p&gt;Of course we can go the other route, which is to fully assimilate the Indigenous to Canadian society. This would mean requiring indigenous to attend a school
of the majority language in the province. It is imperative one of these paths are chosen rather than what we got now, which is complete mess. &amp;ldquo;Do we let them own the
land on the property, or would that result in them selling it immediately? They can&amp;rsquo;t make those decisions for themselves.&amp;rdquo; This faulty thinking is why
the reserves are so poorly maintained.&lt;/p&gt;
&lt;h3 id=&#34;improving-the-tax-system&#34; &gt;Improving the Tax System
&lt;span&gt;
    &lt;a href=&#34;#improving-the-tax-system&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;Filing taxes for Canadian corporations is attrocious. I use my parents&amp;rsquo; accountant for income tax but in the future I will
have to do it myself and then I&amp;rsquo;ll comment on that process.&lt;/p&gt;
&lt;p&gt;It is very clear why corporations avoid taxes if the CRA is trying to invade the corporations&amp;rsquo; privacy rather than just ask politely for
the corporation to pay taxes on its profits. There are so many forms and you have to fill them in depending on questions that are asked
as well as direct references to sections in the Income Tax Act!&lt;/p&gt;
&lt;p&gt;I realize very quickly, that for ethical individuals interested in a close-knit ownership (membership), not for-profits
is the way to go. You get to control who becomes a director, and potential investors can be added to the board under a policy.
For example, a contract that would stipulate what voting rights they get. It&amp;rsquo;s absolutely ridiculous that not for-profits
do not get taxed. The CIRA (canada internet registration authority) is a not for-profit and they only donate to other
not for-profits ventures but the Canadian government? $40M to Rogers for New Brunswick internet infrastructure (thousands of dollars per family in New Brunswick).&lt;/p&gt;
&lt;p&gt;The Canadian tax code 100% punishes innovation and it makes me think that entrepreneurs in Canada are either patriotic, know
for sure they are going to print money, or they just didn&amp;rsquo;t think about the corporation residence that much. I&amp;rsquo;m the patriotic type, and my goals
largely involve Canada.&lt;/p&gt;
&lt;h3 id=&#34;income-entering-the-workforce-brain-drain&#34; &gt;Income, entering the workforce, brain drain
&lt;span&gt;
    &lt;a href=&#34;#income-entering-the-workforce-brain-drain&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;This is too much to write at the moment.&lt;/p&gt;
&lt;h3 id=&#34;improving-education&#34; &gt;Improving Education
&lt;span&gt;
    &lt;a href=&#34;#improving-education&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;TODO: I will create an overview on what the education should teach, how it should teach, goals of the education system, etc.&lt;/p&gt;
&lt;h3 id=&#34;drunk-driving&#34; &gt;Drunk Driving
&lt;span&gt;
    &lt;a href=&#34;#drunk-driving&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;I was reading about the billionaire killing. I do agree with the sentencing as it was already
the harshest first offence drunk driving killing, BUT, we need to prevent drunk people from drinking,
not punish the killers harshly.&lt;/p&gt;
&lt;p&gt;My policy would be that if you are caught in a DUI with hard evidence, unless it was a life-death emergency,
your license should be suspended for an entire year. No jail, no felony, no record, but a license suspension. Well there would be one record which would be &amp;ldquo;got caught drunk driving&amp;rdquo; for potential future instances.&lt;/p&gt;
&lt;p&gt;A second offence would result in a 10 year license suspension.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;By marriage I mean the unification of partners in a relationship rather than the legal sense&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;&lt;a href=&#34;http://www.moneychimp.com/features/market_cagr.htm&#34;&gt;Moneychimp - CAGR Stock Market Last 35 Years.&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;A sales tax is regressive because people with lower income pay a higher percentage of their income as sales tax if they bought the same goods.
Paying for groceries is a lot harder on poorer people.&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Investing (Equities)</title>
      <link>https://blog.elijahlopez.ca/posts/investing/</link>
      <pubDate>Fri, 20 May 2022 01:18:18 -0400</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/investing/</guid>
      <description>&lt;p&gt;My updated investing article. I wrote this with an emphasis on safety rather than making money.
I&amp;rsquo;ll start off with the tips and then go over what you need to know to follow these tips/rules.&lt;/p&gt;
&lt;div&gt;
    &lt;h2&gt;Table of Contents&lt;/h2&gt;
    &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#tips&#34;&gt;Tips&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#getting-started&#34;&gt;Getting Started&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#broker&#34;&gt;Broker&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#accounts&#34;&gt;Accounts&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#norberts-gambit&#34;&gt;Norbert&amp;rsquo;s Gambit&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#exchange-traded-funds-etfs&#34;&gt;Exchange-Traded Funds (ETFs)&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#orders&#34;&gt;Orders&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#options-and-futures&#34;&gt;Options and Futures&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#crypto-currency&#34;&gt;Crypto-Currency&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/div&gt;

&lt;h2 id=&#34;tips&#34; &gt;Tips
&lt;span&gt;
    &lt;a href=&#34;#tips&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;You&amp;rsquo;re either investing for the compound effect, in which case you need to invest often, or to live off the yield, in which case you can invest once and sell shares monthly for income&lt;/li&gt;
&lt;li&gt;If you want the benefits of compounding, invest on a weeky basis (pick a random day of th week to do it on)&lt;/li&gt;
&lt;li&gt;During bull markets, invest in $VOO; the Beta coefficient plays a huge role during the inevitable bear markets and you should try to avoid that&lt;/li&gt;
&lt;li&gt;Whenever the NASDAQ-100 is down -15% or more from its peak, invest in the $QQQ rather than the $VOO. The $QQQ will give a heuristically inflation adjusted CAGR of 10% (dividends excluded). The extra 2% is a big deal when we talk about decades. I&amp;rsquo;m actually not too sure about this recommendation, so stick to the $VOO for now.&lt;/li&gt;
&lt;li&gt;Do not try to time the market. The weekly schedule solves the issues of impatience.&lt;/li&gt;
&lt;li&gt;Do not pick stocks unless you are less than 25 years old. When you are less than 25, you can afford to lose all yur money.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;getting-started&#34; &gt;Getting Started
&lt;span&gt;
    &lt;a href=&#34;#getting-started&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;About what I said earlier 😅. I&amp;rsquo;m simply not in the mood to improve on my first investing article I created in 2020.
I can tell you what to learn though.&lt;/p&gt;
&lt;h3 id=&#34;broker&#34; &gt;Broker
&lt;span&gt;
    &lt;a href=&#34;#broker&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;You need a broker. If you are in Canada and are planning on investing weekly, go with RBC Direct Investing.
If you are in America, pick &lt;a href=&#34;https://robinhood.com/&#34;&gt;Robinhood&lt;/a&gt;. I don&amp;rsquo;t recommend Questrade or Wealthsimple because the experience for investing in US stocks is abysmal and I&amp;rsquo;d rather pay $10 to avoid waiting in a customer support chat and paying Wealthsimple&amp;rsquo;s FX fee.&lt;/p&gt;
&lt;h3 id=&#34;accounts&#34; &gt;Accounts
&lt;span&gt;
    &lt;a href=&#34;#accounts&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;TFSA: Tax Free Savings Account. Maximize this before your RRSP&lt;/li&gt;
&lt;li&gt;(R)RSP: Registered Retirement Savings Plan&lt;/li&gt;
&lt;li&gt;RESP: Registered Education Savings Plan (CAD only, so invest wisely!)&lt;/li&gt;
&lt;li&gt;Cash: Use this after maxxing your registered accounts. Tax implications exist when you make capital gains, so avoid selling unless you know what you are doing&lt;/li&gt;
&lt;li&gt;Margin: do not get it. It&amp;rsquo;s best to not open one since using the Margin is tempting if you know more than the basics.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;norberts-gambit&#34; &gt;Norbert&amp;rsquo;s Gambit
&lt;span&gt;
    &lt;a href=&#34;#norberts-gambit&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;If you are in Canada and want to invest in American stocks (or vice versa), you need to learn Norbert&amp;rsquo;s Gambit to avoid the percentage foreign exchange fees. This is incredbly simple for RBC. Buy DLR and short DLR.U. RBC will take care of the settling automatically so you don&amp;rsquo;t have to spend more time or money unlike Questrade and Wealthsimple. Questrade and Wealthsimple&amp;rsquo;s experience and FX fees is &lt;em&gt;bakwas&lt;/em&gt; (outrageous). A new broker needs to be started in Canada or someone new needs to lead RBC Direct Investing. Hopefully it&amp;rsquo;ll be me, but I have things to do too.&lt;/p&gt;
&lt;h3 id=&#34;exchange-traded-funds-etfs&#34; &gt;Exchange-Traded Funds (ETFs)
&lt;span&gt;
    &lt;a href=&#34;#exchange-traded-funds-etfs&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;There are many ETFs and they consist of a basket of securities. Financial securities are picked and maintained by the creator of the ETF. For example, the $VOO S&amp;amp;P 500 Index ETF is run by Vanguard. Each ETF usually has an expense ratio. That means you get charged for owning the ETF. I recommend $VOO instead of $SPY because the expense ratio for $VOO is  0.03% compared to $SPY&amp;rsquo;s 0.09%.&lt;/p&gt;
&lt;h3 id=&#34;orders&#34; &gt;Orders
&lt;span&gt;
    &lt;a href=&#34;#orders&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Limit order: a bid to buy a stock at a max price OR an ask to sell your stock at min price&lt;/li&gt;
&lt;li&gt;Market order: buying whatever the sellers are offering. Use with discrestion and for high volume stocks&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To buy a stock, place a buy limit order below market price and if it isn&amp;rsquo;t filled by 3-4 PM EST, keep increasing the bid to the asking price.&lt;/p&gt;
&lt;p&gt;To sell a stock, place a sell limit order above market price and if it isn&amp;rsquo;t filed by 3-4 PM EST, keep lowering the ask to the bid price.&lt;/p&gt;
&lt;h3 id=&#34;options-and-futures&#34; &gt;Options and Futures
&lt;span&gt;
    &lt;a href=&#34;#options-and-futures&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;Unless you are less than 25 years old or a gambler, do not even bother with options or futures. It&amp;rsquo;s best to stay away. This is for people who can afford to lose money or know what they are doing (i.e. you work in Equities).&lt;/p&gt;
&lt;h2 id=&#34;crypto-currency&#34; &gt;Crypto-Currency
&lt;span&gt;
    &lt;a href=&#34;#crypto-currency&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Sike! There&amp;rsquo;s no such thing as &amp;ldquo;investing&amp;rdquo; in crypto-currency. You are either gambling or want to experience P2P money.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MacOS Sucks</title>
      <link>https://blog.elijahlopez.ca/posts/macos-sucks/</link>
      <pubDate>Thu, 12 May 2022 17:21:36 -0400</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/macos-sucks/</guid>
      <description>&lt;p&gt;Here are some reasons MacOS sucks. Of course, Linux and Windows suck too. The order for desktop OS&amp;rsquo;s
are MacOS &amp;lt; Linux Desktop &amp;lt; Windows. This article is not about why Windows &amp;gt; Linux, so please refrain
from commenting about Linux. If you are a Mac user and are offended, Windows also sucks a) the Settings
app does not include everything found in the control panel, and the control panel uses the same UI interface
since Windows 7 and b) requires installing third party apps like TaskbarX, EarTrumpet, QuickLook, and ditto to improve the UX and
c) there&amp;rsquo;s no effort to bring Linux functionality to Windows (e.g. bash, posix kernel, preinstalled GNU coreutils, PATH limit and editable as a file).&lt;/p&gt;
&lt;h3 id=&#34;hidden-files&#34; &gt;Hidden Files
&lt;span&gt;
    &lt;a href=&#34;#hidden-files&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;So you want to see hidden files?
You go to finder settings but can&amp;rsquo;t find it. So you then Google it. Turns out you were supposed to memorize the very intuitive keyboard shortcut (command + shift + period or simply command + &amp;gt;).&lt;/p&gt;
&lt;h3 id=&#34;removing-many-files-via-command-line&#34; &gt;Removing Many Files via Command Line
&lt;span&gt;
    &lt;a href=&#34;#removing-many-files-via-command-line&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;rm -R folder requires sudo even if I own the files.&lt;/p&gt;
&lt;h3 id=&#34;homebrew-does-not-modify-path&#34; &gt;Homebrew does not modify PATH
&lt;span&gt;
    &lt;a href=&#34;#homebrew-does-not-modify-path&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;Homebrew does not permanently ass packages to path. You have to create a shell config yourself with the export path shenanigans. Stackoverflow doesn&amp;rsquo;t even bother giving you the one liner to do this. They make you create a file yourself and add it rather than a simple &lt;code&gt;echo &amp;quot;export PATH=PATH:...&amp;quot; &amp;gt;&amp;gt; ~/.zshrc&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;updating-macos--breaks-git&#34; &gt;Updating macOS  Breaks git
&lt;span&gt;
    &lt;a href=&#34;#updating-macos--breaks-git&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;Another reason is that every time you update MacOS, you will get the following error when trying to use git.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://apple.stackexchange.com/questions/254380/why-am-i-getting-an-invalid-active-developer-path-when-attempting-to-use-git-a#254381&#34;&gt;https://apple.stackexchange.com/questions/254380/why-am-i-getting-an-invalid-active-developer-path-when-attempting-to-use-git-a#254381&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The error is &amp;ldquo;invalid developer path.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Every time you update, you have to agree to Apple&amp;rsquo;s XCodes terms of service in order to use git, which isn&amp;rsquo;t made by Apple but simply
preinstalled by them. Don&amp;rsquo;t want to instsall XCode? Too bad, the Command line tools themselves is 130MB.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>XMR-BTC Atomic Swap ASB Guide</title>
      <link>https://blog.elijahlopez.ca/posts/xmr-btc-atomic-swap-asb/</link>
      <pubDate>Tue, 10 May 2022 17:07:56 -0400</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/xmr-btc-atomic-swap-asb/</guid>
      <description>&lt;p&gt;A tutorial made for myself, not really others because
the &lt;a href=&#34;https://github.com/comit-network/xmr-btc-swap/blob/master/docs/asb/README.md&#34;&gt;docs&lt;/a&gt;
aren&amp;rsquo;t straight forward!&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download &lt;a href=&#34;https://github.com/comit-network/xmr-btc-swap/releases/latest&#34;&gt;ASB and Swap zips&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Extract to &lt;code&gt;C:\Users\%USERNAME%\Documents\Monero&lt;/code&gt; or &lt;code&gt;~/Documents/Monero&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run the monero-rpc-wallet (pre-req: add monero install location to PATH)
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://monero.fail/?nettype=stagenet&#34;&gt;Find stagenet node&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Use port 28088 if mainnet/production&lt;/li&gt;
&lt;li&gt;Security risk: rpc-login is disabled&lt;/li&gt;
&lt;li&gt;wallet-dir: directory of an existing wallet (match to stagenet or mainnet)&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;C:\Users\maste\Documents\Monero&amp;gt;monero-wallet-rpc --stagenet --daemon-host http://stagenet.melo.tools:38081 --rpc-bind-port 38083 --disable-rpc-login --wallet-dir wallets/stagenet_one
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Make sure this guide is readable with your terminal open&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;asb --testnet start&lt;/code&gt; in a new terminal window and press enter for everything. Do not use Ctrl or Alt.&lt;/li&gt;
&lt;li&gt;A wallet will be created in 10 seconds&lt;/li&gt;
&lt;li&gt;If you close the ASB and want to start it again, restart the RPC to avoid a &amp;ldquo;wallet already exists error&amp;rdquo; from the ASB&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>JavaScript ES6 Imports Explained</title>
      <link>https://blog.elijahlopez.ca/posts/javascript-imports-explained/</link>
      <pubDate>Thu, 31 Mar 2022 09:27:06 -0400</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/javascript-imports-explained/</guid>
      <description>&lt;p&gt;If you work extensively with NodeJS, you probably already know of &lt;code&gt;require(&#39;express&#39;);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;However, what about the elgant ES6 imports?&lt;/p&gt;
&lt;h2 id=&#34;no-braces&#34; &gt;No Braces
&lt;span&gt;
    &lt;a href=&#34;#no-braces&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;When no braces are used, you are importing the default export and
get to use whatever name you want. In your file, all variables and functions
that you want importable by the client need to be explicitly exported.
You can also export multiple variables at once, but this article is about importing,
not as much so about exporting.&lt;/p&gt;
&lt;h3 id=&#34;examples&#34; &gt;Examples
&lt;span&gt;
    &lt;a href=&#34;#examples&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;In &lt;code&gt;Home.js&lt;/code&gt;,&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;default&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;function&lt;/span&gt; Main() { ... }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In &lt;code&gt;App.js&lt;/code&gt;,&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;// the imported name is arbitrary
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;import&lt;/span&gt; HomeComponent from &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;./Home&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Imports follow unix file conventions!&lt;/p&gt;
&lt;h3 id=&#34;exporting-a--object-as-default&#34; &gt;Exporting a {} Object as default
&lt;span&gt;
    &lt;a href=&#34;#exporting-a--object-as-default&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;default&lt;/span&gt; { ... };
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;braces&#34; &gt;Braces
&lt;span&gt;
    &lt;a href=&#34;#braces&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;import&lt;/span&gt; { Fragment } from &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This would be used if the variable exported is not the default. To import
these non-default imports under another name we do:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;import&lt;/span&gt; { IoSunnySharp as SunIcon } from &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;react-icons/io5&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;import&lt;/span&gt; { BsMoonStarsFill as MoonIcon } from &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;react-icons/bs&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;example&#34; &gt;Example
&lt;span&gt;
    &lt;a href=&#34;#example&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;const&lt;/span&gt; schedule200 = { ... };
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;mass-importing-and-exporting&#34; &gt;Mass Importing and Exporting
&lt;span&gt;
    &lt;a href=&#34;#mass-importing-and-exporting&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;// ./Files/index.js
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;export&lt;/span&gt; { &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;default&lt;/span&gt; as file1 } from &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;/file1.js&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;export&lt;/span&gt; { &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;default&lt;/span&gt; as file2 } from &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;/file1.js&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;// in ./App.jsx
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;import&lt;/span&gt; * as files from &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;./Files&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;console.log(files.file1);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Open-Debate Platform</title>
      <link>https://blog.elijahlopez.ca/posts/open-debate-platform/</link>
      <pubDate>Fri, 18 Mar 2022 22:58:03 -0400</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/open-debate-platform/</guid>
      <description>&lt;p&gt;I wasn&amp;rsquo;t able to put all the details from my mind into this document, but hopefully
the spirit can be conveyed even if the technical design may be incomplete.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Democracy cannot gauarantee truth, but can be used to guide discussion &amp;hellip; under a set of rules.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;open-debate-platform&#34; &gt;Open-Debate Platform
&lt;span&gt;
    &lt;a href=&#34;#open-debate-platform&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Open-debate platform (ODP) or open-source debate, strongly inspired by open-sourcecode platforms, is about like minded users cooperating informally in order to produce formal arguments in a structured and multiple opinion debate. A debate in this context is simply a question asking for answers. The purpose is to converge and display answers. It&amp;rsquo;s about helping people
finding the truth without bias. If people want to know the best language to learn, they will probably be greeted with &amp;ldquo;English&amp;rdquo;
but if they don&amp;rsquo;t agree that the reasons apply to them, they can look at the next alternative and so on. The platform
allows for efficient analysis of all opinions and arguments. Parts of the implementation follow. I say parts, because there might be race conditions, but the purpose of this document is to communicate the spirit of ODP so that technical solutions can be used and created to preserve and scale this spirit.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Controversy and Extremism&lt;/summary&gt;
Controvery and extremism is expected on a platform like this. The entire point is for an open discussion to
stamp out objectively wrong opinions. For example, murder is wrong; An argument pertaining to killing
would most likely delve into the definition of murder. However, the platform converges upon arguments that are
able to defend their position.
&lt;p&gt;Even though extremism will be present on the platform, uncivil discourse is not to be tolerated.
Civil discussion does not involve calls to genocide or targetting of innocent people. Such a statement would be supressed,
however arguing whether such things are okay will be permitted. There is a difference between debating something
that is immoral vs. actually acting immoraly. Since these arguments don&amp;rsquo;t actually dictate behavior, the ODP
does not have to follow any argument that is able to defend its position.&lt;/p&gt;
&lt;/details&gt;
&lt;p&gt;An ODP can be structured more easily digitally than physically. So the specs are made with that in mind.
Of course, a paper system could replicate this although with unsustainable logistics and so would need to cut some corners.&lt;/p&gt;
&lt;h2 id=&#34;specs&#34; &gt;Specs
&lt;span&gt;
    &lt;a href=&#34;#specs&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;With the spec, some features improve usability and user experience and are not required for the basic
implementation of an ODP. The basic is simply a platform that allows for the interactions described in the previous parapgraphs.
One way to accomplish that is given below.&lt;/p&gt;
&lt;h3 id=&#34;digital-platform&#34; &gt;Digital Platform
&lt;span&gt;
    &lt;a href=&#34;#digital-platform&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Most likely a website&lt;/li&gt;
&lt;li&gt;The website that acts as a host and a gatherer. A gather type system is decentralized but could take lot of technical effort to get right.&lt;/li&gt;
&lt;li&gt;The digital platformm is run by an unbiased &lt;a href=&#34;#operator&#34;&gt;operator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A biased operator invalidates ODP&lt;/li&gt;
&lt;li&gt;People can become &lt;a href=&#34;#user&#34;&gt;users&lt;/a&gt; by logging in with email or using public-private key signing&lt;/li&gt;
&lt;li&gt;Users to able to ask &lt;a href=&#34;#questions&#34;&gt;questions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The platform would have an ability to search and explore questions&lt;/li&gt;
&lt;li&gt;The platform supports a routing protocol like TOR and can be run with JavaScript disabled&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;operator&#34; &gt;Operator
&lt;span&gt;
    &lt;a href=&#34;#operator&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;An operator is an entity that runs the ODP. Operators are to remove calls to harm. Harm is defined as anything equal to or more than a call to chastize people who haven&amp;rsquo;t acted uncivil in a &lt;strong&gt;formal&lt;/strong&gt; setting. Formality does matter. Unbiased means not using their opinion an a question to censor other opinons. For example, an operator might be pro-Monero, however that does not give them the right to impede and censor civil arguments by pro-bitcoin and pro-ethereum parties.&lt;/p&gt;
&lt;h3 id=&#34;user&#34; &gt;User
&lt;span&gt;
    &lt;a href=&#34;#user&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;A user has the ability to interact with the platform and create questions, &lt;a href=&#34;#argument&#34;&gt;arguments&lt;/a&gt;, upvote argument points, and comment in &lt;a href=&#34;#discussions&#34;&gt;discussions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A user that creates an argument is also its &lt;a href=&#34;#User::Author&#34;&gt;author&lt;/a&gt; and one of its &lt;a href=&#34;#User::Maintainer&#34;&gt;maintainer&lt;/a&gt;.
A user can become a maintainer but not an author if they accept a maintainer invite from the author.&lt;/p&gt;
&lt;p&gt;A user cannot be an argument maintainer for a topic and also upvote another argument for the same topic.&lt;/p&gt;
&lt;h3 id=&#34;argument&#34; &gt;Argument
&lt;span&gt;
    &lt;a href=&#34;#argument&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;For each question, there are responses; also called arguments.
Ultimately, users are responsible for siding with an argument, the platform is just a tool to facilitate open debate as the name conveys.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;An argument has at least one reason&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An argument has rebutals for the arguments next popular and next least popular argument&amp;rsquo;s points.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;details&gt;&lt;summary&gt;Rebutal considerations&lt;/summary&gt;
  Replies are to be made to at least 1 rebutal within 2 weeks or the point/rebuttal will be marked as &#34;failed to defend point/rebuttal&#34;.
  Hence, points/rebuttals can be shown to the user sorted by point/rebutall defended -&gt; ongoing -&gt; failed to defend.
&lt;p&gt;This time window feature is very important in order to force discourse. It&amp;rsquo;s very easy to make 1 rebutal and never respond again. Every response to a rebutal must address the rebutal fully. Not addressing a rebutal fully makes the rebutal valid. In that way, points and rebutals can follow a thread type of structure to allow multiple replies and rebutals per point rather than batching all rebutals for a point into one. For less popular arguments, operators are allowed to be leniant about the forced rebutal rule. I&amp;rsquo;d say if there are more than 5 argument, the bottom 50% won&amp;rsquo;t need to comply with the forced discussion. This is because it&amp;rsquo;s more likely these projects are arguing with bad faith characters and so the operator can use their own prioritization method for rule violation reports.&lt;/p&gt;
  &lt;/details&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For each question, arguments should be sorted by number of upvotes. Upvotes are not an actual indication of quality, only of popularity.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;No more than 10 maintainers&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When users click an argument, they should be shown the list of points for that argument and rebuttals to those points by the other two projects. Arguments can also rebut other arguments that are more popular or less popular, but it does not force the other argument to reply. Replying to rebutals is required for arguments that are beside each other in popularity.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Rogue Behavior Considerations&lt;/summary&gt;
Arguments can be recreated (forked) in case of rogue or dormant maintainers. Since people can change
their minds, even if they decide to mess up the old argument they were supporting, history can be restored by a maintainer
in the same argument or by a proponent through forks.
If done correctly, each point has an associated history and id for each point in history.
Then, the upvotes can be restored as long as the users have no upvoted something new, and that point id does not exist
in any older forks. This way, the damage of greifing is reduced. These are all technical discussions though that uphold the
spirit of ODP.
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;Bad faith considerations&lt;/summary&gt;
It is up to operators how to deal with arguing in circles; if people are arguing in circles it is best to close the rebutal. Arguing in circles usually indicates one party is not acting in good faith. Rebutals can be reported as irrelevant and will shadow ban
the user. Shadow ban in this context means that the user will see the platform as if their action was valid.
&lt;/details&gt;
&lt;h3 id=&#34;discussions&#34; &gt;Discussions
&lt;span&gt;
    &lt;a href=&#34;#discussions&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;Discussions are informal communication features. They should be included for each argument, and each arguments merge requests.
Responses in dicussions are called comments.&lt;/p&gt;
&lt;p&gt;Arugment discussions can be moderated &lt;strong&gt;with bias&lt;/strong&gt; by the arguments &lt;a href=&#34;#User::Maintainer&#34;&gt;maintainers&lt;/a&gt; themselves since their role is to improve
discussion pertaining to their argument, not the question being answered. Comments are informal, so they can only be from proponents
of said argument. This should reduce the number of bad actors as proponents have to upvote the argument itself. The maintainers
are there to clean up remains.&lt;/p&gt;
&lt;h3 id=&#34;userauthor&#34; &gt;User::Author
&lt;span&gt;
    &lt;a href=&#34;#userauthor&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;A user that started the argument. They have the power to delete the argument if there
are less than 3 proponents of the argument. All authors are considered a maintainer.&lt;/p&gt;
&lt;h3 id=&#34;usermaintainer&#34; &gt;User::Maintainer
&lt;span&gt;
    &lt;a href=&#34;#usermaintainer&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;A maintainer is a user who has the ability to edit. Authors are considered maintainers but
not vice versa. To make a user a maintainer of an argument requires 75% of maintainers to vote.
There can only be up to 10 maintainers including the author.&lt;/p&gt;
&lt;p&gt;Arguments should have a change history so even if a &lt;a href=&#34;#User::Maintainer&#34;&gt;maintainer&lt;/a&gt; goes rogue, damage should be easily reversible.
If all maintainers go rogue, the author can request operator intervension to kick out the rogue maintainers. Or if the author goes rogue, the maintainers can request an operator intervension. This is where operator neutrality becomes important although not required since arguments can be &amp;ldquo;forked&amp;rdquo;, and the rogue argument basically left to die.&lt;/p&gt;
&lt;h3 id=&#34;question&#34; &gt;Question
&lt;span&gt;
    &lt;a href=&#34;#question&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;A question can also be referred to as a topic.&lt;/p&gt;
&lt;p&gt;Users can ask subjective questions about topics, but questions that spark debate should be prioritzed. Think &amp;ldquo;what is &lt;strong&gt;a&lt;/strong&gt; good ice cream flavor&amp;rdquo; vs. &amp;ldquo;what is the &lt;strong&gt;best&lt;/strong&gt; ice cream flavor&amp;rdquo;. There is a difference, the former seeks to get a good sample, but the latter seeks to find the best answer.&lt;/p&gt;
&lt;p&gt;A question is a duplicate if it conveys the same message or is equal ignoring case and non gramatic symbols. If it is the latter,
the question can be disallowed from creation, but the former should be marked as duplicate. Duplicate questions should be searchable but not prioritized. A question marked as a duplicate should allow the question creator to argue that the question was incorrectly marked as a duplicate.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Censorship considerations&lt;/summary&gt;
Many times on Stackoverflow, questions are marked as duplicate incorrectly on Stackoverflow where as actual duplicates fly by the radar.
These questions are not technical at all, only discussion prompts, so it is imperative to not censor valid questions.
&lt;/details&gt;
&lt;h3 id=&#34;merge-request&#34; &gt;Merge Request
&lt;span&gt;
    &lt;a href=&#34;#merge-request&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;A merge request is a request by a user to add a point or rebutal to an argument. Merge requests can only be
merged be maintainers and should support informal discussions.&lt;/p&gt;
&lt;h3 id=&#34;reason-or-point&#34; &gt;Reason or Point
&lt;span&gt;
    &lt;a href=&#34;#reason-or-point&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;A single reason that supports the arguments thesis. A point can have upvotes but every
edit or deletion resets the upvote to 0 and thus removes proponents of the argument.
An argument&amp;rsquo;s star count is equal to the sum of upvotes of its reasons which is also the number of propronents.&lt;/p&gt;
&lt;h3 id=&#34;usercontributer&#34; &gt;User::Contributer
&lt;span&gt;
    &lt;a href=&#34;#usercontributer&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;A user is considered a contributer if one of their changes in in the argument even if has been overwritten&lt;/p&gt;
&lt;h3 id=&#34;userproponent&#34; &gt;User::Proponent
&lt;span&gt;
    &lt;a href=&#34;#userproponent&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;A user is considered a proponent of an argument if they&amp;rsquo;ve upvoted a reason of the argument or are a maintainer for an argument.
Only reasoning points of the argument can be upvoted and a user is no longer a proponent if the point they upvoted
gets modified or deleted.&lt;/p&gt;
&lt;h2 id=&#34;platform-logistics&#34; &gt;Platform Logistics
&lt;span&gt;
    &lt;a href=&#34;#platform-logistics&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;A platform would be created by an operator. The operator has to make a legally bound contract
with all participants that stipulates that the operator will not manipulate or censor civil arguments and should laso provide
visitors and a link to download the platform source code (any license allowed). This holds the operator accountable for abuse.
Abuse would either be easily detectable or non-harmful to the goal of figuring out the best arguments. Platforms
can compete with each other.&lt;/p&gt;
&lt;p&gt;If an operator deleted a comment, an argument, an arguments points, it is pretty noticeable and easy to prove using archive websites.
Vote inflating is possible, but that is why the operator needs to show the UI in terms of rebutals. Operators that can be shown
to not follow the specs mentioned in this article won&amp;rsquo;t be considered an open-debate platform. If required, I can test out
a platform and classify or declassify it as an open-debate platform.&lt;/p&gt;
&lt;h2 id=&#34;remarks&#34; &gt;Remarks
&lt;span&gt;
    &lt;a href=&#34;#remarks&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;I&amp;rsquo;m not sure when I&amp;rsquo;ll be able to implement this, but I&amp;rsquo;m leaving this here for someone to pursue. My goal with this is to improve unity and reduce polarizations. We need to stop with the harassment of people that hold an opinion. An opinion is much different from
an action and we need to make that distinction by showing our tolerance for opposing opinions.&lt;/p&gt;
&lt;p&gt;There are people who think it&amp;rsquo;s okay for the tolerant to be intolerant of the intolerant but that&amp;rsquo;s contradictory. The best way
to debate against someone who promotes intolerance is to tell them that they are only able to promote intolerance because of the tolerant society. If society operated as it did in the past where tolerance is just the intolerance of the majority, then have have learned nothing!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why Monero Is the Best Crypto-Currency</title>
      <link>https://blog.elijahlopez.ca/posts/why-monero-is-the-best-crypto-currency/</link>
      <pubDate>Sat, 26 Feb 2022 11:37:57 -0500</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/why-monero-is-the-best-crypto-currency/</guid>
      <description>&lt;div&gt;
    &lt;h2&gt;Table of Contents&lt;/h2&gt;
    &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#arguments&#34;&gt;Arguments&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#what-is-monero&#34;&gt;What is Monero?&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#better-than-cash&#34;&gt;Better than cash&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#cryptocurrency-properties&#34;&gt;CryptoCurrency Properties&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#fungibility&#34;&gt;Fungibility&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#on-zcash&#34;&gt;On ZCash&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#privacy&#34;&gt;Privacy&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#tumblers&#34;&gt;Tumblers&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#btc--lightning&#34;&gt;BTC &amp;amp; Lightning&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#mixing&#34;&gt;Mixing&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#btc-xmr-atomic-swap&#34;&gt;BTC-XMR Atomic Swap&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#bch--cashfusion-&#34;&gt;BCH + CashFusion 💵&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#eth--tornado-cash&#34;&gt;ETH + Tornado 🌪 Cash&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#consensus-algorithm&#34;&gt;Consensus Algorithm&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#proof-of-stake-pos-vs-delegated-proof-of-stake-dpos&#34;&gt;Proof-of-Stake (PoS) vs Delegated Proof-of-Stake (DPoS)&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#proof-of-work-pow-vs-proof-of-stake-pos&#34;&gt;Proof-of-Work (PoW) vs. Proof-of-Stake (PoS)&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#asic-resistant-proof-of-work&#34;&gt;ASIC Resistant Proof-of-Work&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#transaction-fees-and-liquidating-monero&#34;&gt;Transaction Fees, and Liquidating Monero&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#notes&#34;&gt;Notes&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#international-standards&#34;&gt;International Standards&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#liquidating-and-purchasing-monero&#34;&gt;Liquidating and Purchasing Monero&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#addressing-scalability&#34;&gt;Addressing Scalability&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#scenario-a-matching-bitcoin&#34;&gt;Scenario A: Matching Bitcoin&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#scenario-b-a-practical-stress-test&#34;&gt;Scenario B: a Practical Stress Test&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#recap&#34;&gt;Recap&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/div&gt;

&lt;h2 id=&#34;introduction&#34; &gt;Introduction
&lt;span&gt;
    &lt;a href=&#34;#introduction&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;h3 id=&#34;arguments&#34; &gt;Arguments
&lt;span&gt;
    &lt;a href=&#34;#arguments&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Fungibility&lt;/li&gt;
&lt;li&gt;Privacy Reliability (Layer 1)&lt;/li&gt;
&lt;li&gt;ASIC Resistance&lt;/li&gt;
&lt;li&gt;Store of value
&lt;ul&gt;
&lt;li&gt;Not going to elaborate further than the fact that privacy invites storing wealth&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This article is meant to be the definitive guide on why Monero is the king of all cryptos when it comes to fulfilling the role of money or real currency.
It is long in order to be thorough, as well as includes common responses/tactics.&lt;/p&gt;
&lt;p&gt;The intended target audience is an open-minded reader interested in cryptocurrency as well as fellow Monero users who continuously answer questions such as &amp;ldquo;why does Monero (not) do X?.&amp;rdquo;
I am open to debate, but I will say that when it comes to cryptoCURRENCY, privacy is a must.&lt;/p&gt;
&lt;p&gt;I will be comparing Monero&amp;rsquo;s features to those fund in Bitcoin (BTC), Ethereum (ETH), Stellar (XLM), and ZCash (ZEC).
I will also talk about layer 2 solutions: BTC&amp;rsquo;s Lightning, BCH&amp;rsquo;s CashFusion, ETH&amp;rsquo;s Tornado Cash.&lt;/p&gt;
&lt;p&gt;For all other cryptos/solutions, one can use the transitive property: If Monero &amp;gt; X and X &amp;gt; Y, then Monero &amp;gt; Y.&lt;/p&gt;
&lt;p&gt;I will start with a brief introduction to Monero, since privacy was not simple to implement.&lt;/p&gt;
&lt;h2 id=&#34;what-is-monero&#34; &gt;What is Monero?
&lt;span&gt;
    &lt;a href=&#34;#what-is-monero&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;On a high levels, Monero aims to be digital cash. It actually outdoes cash when it comes to fungibility.
It does not support smart contracts, but there is another crypto in the works that will co-opt Monero&amp;rsquo;s mining. I forget the name of it, but fluffypony is involved.&lt;/p&gt;
&lt;h3 id=&#34;better-than-cash&#34; &gt;Better than cash
&lt;span&gt;
    &lt;a href=&#34;#better-than-cash&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;balance cannot be calculated out without consent&lt;/li&gt;
&lt;li&gt;transaction amounts, parties, and times cannot be figured by outside parties&lt;/li&gt;
&lt;li&gt;each piece or whole is indiffertential from another (fungible)
&lt;ul&gt;
&lt;li&gt;where cash suffers is that cash that has any trace of cocaine can be confiscated under civil forfeiture&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;cannot be stolen unless encryption is broken
&lt;ul&gt;
&lt;li&gt;you should always store your Monero seed in a KeePassX database on two seperate devices&lt;/li&gt;
&lt;li&gt;if you are worried about transfering your money upon, there are ways other than a will to send a password to a person&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;digitally accessible
&lt;ul&gt;
&lt;li&gt;it is as easy to send large amounts of XMR as it is small amounts&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;flat transaction fees
&lt;ul&gt;
&lt;li&gt;credit cards do not have flat fees&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;cryptocurrency-properties&#34; &gt;CryptoCurrency Properties
&lt;span&gt;
    &lt;a href=&#34;#cryptocurrency-properties&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Monero uses stealth addresses to obscure the number of times an address has received Monero. These are similar to the modulus concept where (x mod 5 = 3) has an infinite number of solutions. They are created by the sender to protect the information of the receiver. That way, an observer is uncertain how many times a targeted address has actually received Monero. All wallets implement this, so only a bad actor would not create a stealth address, but Monero doesn&amp;rsquo;t rely on just stealth addresses&lt;/li&gt;
&lt;li&gt;Monero uses ring signatures to protect the identity of the sender. At the moment, each transaction has 10 other possible signatories, called decoys, as seen &lt;a href=&#34;https://xmrchain.net/tx/75fbbd3db7d7a5739e06c61282990bb44c090ee81ff288cde1feb7ea82f67f51&#34;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;One seed is the key to an infinite amount of accounts each with an infinite amount of addresses. Think of this like having multiple chequing accounts and each has multiple direct deposit numbers. These accounts are mathematically generated, so the nth account will always be the same on different wallet clients.&lt;/li&gt;
&lt;li&gt;Transaction fees reduce as the number of transactions increase&lt;/li&gt;
&lt;li&gt;Block sizes are dynamic in the long term but block-to-block growth is capped via mining penalties&lt;/li&gt;
&lt;li&gt;Monero uses the proof-of-work consensus protocol RandomX algorithm for its ASIC resistance&lt;/li&gt;
&lt;li&gt;Monero is not a Bitcoin fork. It is actually a Bytecoin fork with several improvements&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;fungibility&#34; &gt;Fungibility
&lt;span&gt;
    &lt;a href=&#34;#fungibility&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Culpable cryptos: Most except Monero, its forks, and possibly some mimblewimble coins&lt;/p&gt;
&lt;p&gt;For a crypto to be money, it has to be fungible. If crypto is not fungible, users are at risk of being denied service for not being &amp;ldquo;right.&amp;rdquo; The definition of right would be dependent on the receiver and could even be legislated by governments. Transaction histories allow this to happen and there&amp;rsquo;s no guarantee you aren&amp;rsquo;t being watched for maybe transacting with someone who had the &amp;ldquo;wrong&amp;rdquo; coins. This is an issue with all cryptocurrencies except for Monero. With ZEC, since transactions are public by default, and most transactions on the blockchain are public, having the option for public transactions means that receivers can simply refute any transaction that isn&amp;rsquo;t public. This is true for exchanges. Exchange use t-addresses for ZEC, not the shielded ones.&lt;/p&gt;
&lt;p&gt;Now you may say not having fungibility prevents money laundering and duly hurts criminals (does it really though?), but what about the undue harm to individuals? The definition of a criminal is different in every country. According to &lt;a href=&#34;https://www.humandignitytrust.org/lgbt-the-law/map-of-criminalisation/&#34;&gt;Humanity Dignity Trust&lt;/a&gt;, engaging in homosexual activities is a crime in 71 countries. We actively hurt marginalized groups when we promote non-fungible cryptos. If you and your same-sex partner shared crypto together, an authoritative government can easily suspect you of sleeping together, since sharing bank/money accounts is more common among partners than friends. If you like to argue in bad faith by saying maybe they are just father-son, you&amp;rsquo;d be lying to yourself if you think governments making homosexuality a crime is going to think half of the people sharing an account with the same-sex is just a rich parent.&lt;/p&gt;
&lt;h2 id=&#34;on-zcash&#34; &gt;On ZCash
&lt;span&gt;
    &lt;a href=&#34;#on-zcash&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Now is a good time to dismantle ZCash. Z-cash offers privacy optionally and not even by default. That is the only reason it is on more exchanges than Monero. To my knowledge, no exchange that supports ZCash and not Monero allows shielded deposits (50% sure) and withdrawals. Additionally, transparent transactions are the default, most transactions on the blockchain were transparent ones, and users have to trust that ZCash was set up without any bad actors. Transactions being transparent by default make shielded transactions stick out. This leads to discrimination and suspicion of users that use shielded transactions. In addition to these issues, ZCash gives 10% of the total supply to their own founders. This goes against equitable decentralization and democracy.&lt;/p&gt;
&lt;p&gt;Furthermore, ZCash does not protect transaction values for even transparent -&amp;gt; shielded addresses. Having two types of addresses means that senders can discriminate against shielded address users. This two type system means that common behaviours such as transacting in short periods of time can be susceptible to blockchain analysis and has been traced before by even an &lt;a href=&#34;https://twitter.com/The8Connor/status/1284900368116330497&#34;&gt;individual&lt;/a&gt;. &amp;ldquo;having unshielded TX inherently make shielded ones less private&amp;rdquo; - &lt;a href=&#34;https://www.reddit.com/r/CryptoCurrency/comments/hubbvg/comment/fym8yn9/?utm_source=share&amp;amp;utm_medium=web2x&amp;amp;context=3&#34;&gt;u/lol_VEVO&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Adding more insult to privacy advocates, the founder - Zooka - once (drunkenly) tweeted that they would add privacy by default and that they would take it away from criminals. Needing to trust the setup does make it possible… The fact that the founder holds this opinion shows us that ZCash isn&amp;rsquo;t interested in privacy as a human right, only privacy for those who hold the right opinion. By the way, the definition of criminal varies from country to country as I said in the last section. I&amp;rsquo;m attacking the vision of ZCash&amp;rsquo;s leader which is fair game.&lt;/p&gt;
&lt;p&gt;In the Monero community, one of Monero&amp;rsquo;s paid workers was also working for another crypto project. There is more to this story, but the conflict of interest was brought up in the community and the worker resigned.&lt;/p&gt;
&lt;p&gt;The general fund was also questioned and a general fund report was created.&lt;/p&gt;
&lt;h2 id=&#34;privacy&#34; &gt;Privacy
&lt;span&gt;
    &lt;a href=&#34;#privacy&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Privacy is defined as protecting sensitive information such as networth, transaction value, and if a person transacted.
Culpable cryptos: All except Monero, its forks, ZCash&amp;rsquo;s shielded transactions, and possibly mimblewimble coins.
There are layer 2 solutions, but like I said before, these aren&amp;rsquo;t easy to use, and are prone to ignorance. Users would be required to know about them, they cost more,
the transactions stand out, and the user looks automatically suspicious for transacting differently than other people on the network.&lt;/p&gt;
&lt;p&gt;With Monero, the defaults are private and deviation from the defaults erodes users&amp;rsquo; own privacy, and so it is not encouraged unless you
know what you are doing! Churning, timelocks (DO NOT TOUCH THIS), and sending to multiple addresses comes to mind.&lt;/p&gt;
&lt;p&gt;Privacy is a fundamental human right. Any cryptocurrency that doesn&amp;rsquo;t protect the balance of a wallet by protecting the history of transactions, puts the owner at risk from bad actors. One should not have to take many precautions such as using multiple wallets just for some privacy. One would also have to somehow keep each wallet&amp;rsquo;s coins separated from each other. Then there are mixers. Mixers/Tumblers are 2014 technology. They cost more transaction fees, take time, and spam the network. Objectively speaking, a cryptocurrency that can protect your privacy with one transaction is much better than a cryptocurrency that requires you to use 3rd party tools for some possible privacy. How can you be certain that proprietary blockchain analysis tools haven&amp;rsquo;t already figured out a way to map out tumbled coins?&lt;/p&gt;
&lt;p&gt;Here is a real example of the privacy provided by the fiat banking system: In Canada, we have Interac eTransfers. When I send an eTransfer to my friend, or vice-versa, we don&amp;rsquo;t know how much each other has. But if we had used BTC, ETH, SOL, XLM, and by ZEC (default configuration for the sender), we could&amp;rsquo;ve seen each others&amp;rsquo; balances. We simply cannot expect any crypto to replace fiat if the privacy will end up being worse than using fiat. This is of course assuming a world where crypto prices have reduced volatility. Before you say &amp;ldquo;people do not care about privacy,&amp;rdquo; please tell me would you leave the door open at a public washroom? People do care about privacy, they just prefer convenience more. Monero aims to be the convenient solution that is private.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s dismantle some arguments that think network effect + layer n solutions &amp;gt; layer 1 privacy. I will not be using # of users as an argument when there are more Monero users than there are users using the Layer n solution.&lt;/p&gt;
&lt;h3 id=&#34;tumblers&#34; &gt;Tumblers
&lt;span&gt;
    &lt;a href=&#34;#tumblers&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Requires users to trust centralized service or do it yourself which is tricky for new users.&lt;/li&gt;
&lt;li&gt;Tumblers can be traced by blockchain analytic companies&lt;/li&gt;
&lt;li&gt;Transaction fees ++&lt;/li&gt;
&lt;li&gt;Network spam ++&lt;/li&gt;
&lt;li&gt;Does not protect balances and thus would require managing at least two addresses just to reach the basic level of Monero&amp;rsquo;s privacy. UX is much simpler and thus better for Monero. Monero has its own UX faults, but they are all UI and not technical. UI can always be improved at no cost to the user.&lt;/li&gt;
&lt;li&gt;Requires user knowledge&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;btc--lightning&#34; &gt;BTC &amp;amp; Lightning
&lt;span&gt;
    &lt;a href=&#34;#btc--lightning&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Inbound liquidity. You need 5 BTC to receive ≤ 5 BTC. This is a rich get the richer scheme, and it&amp;rsquo;s not mentioned often enough.
Many people around the world live paycheck to paycheck, people simply cannot be paid in BTC-Lightning because of this incredible flaw. Remember we are dicussing cryptocurrency as money.&lt;/li&gt;
&lt;li&gt;Onboarding issues (L1 Transaction)
&lt;ul&gt;
&lt;li&gt;Fees: opening a channel requires you to tie up BTC into a channel and costs you a transaction fee.&lt;/li&gt;
&lt;li&gt;Limited Transactions/day: There isn&amp;rsquo;t enough time in the world to onboard billions of people who require money to transact&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Balance attack. An attacker can send fake transactions to your invoice to determine your channel balance. You may argue you can have multiple channels or you can store most BTC on layer 1, but how is that more convenient than Monero? You end up having to keep track of and think about more than if you had just used Monero.&lt;/li&gt;
&lt;li&gt;Requires invoicing (being online). For you to send money to me, I have to create an invoice for you to send money to. You have to ask me for permission to send me money! This is absurd, donations would require more work than what layer 1 provides, and is worse than the fiat system.
Hosting a website or using a centralized service is not a solution to this problem. Privacy is hindered with these alternatives. Why make life difficult when a solution already exist?&lt;/li&gt;
&lt;li&gt;Node network. To send BTC through lightning to someone you don&amp;rsquo;t have a channel open with, you have to HOPE that they are connected indirectly to you via a chain of mutual nodes through another channel you have open. Usability would require the centralization of payment channels and thus is not really secure.&lt;/li&gt;
&lt;li&gt;There are probably more issues that I do not know about&lt;/li&gt;
&lt;li&gt;There are more Monero users than there are channels on Lightning. Atomic swap to Monero is easier than using Lightning channels.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;mixing&#34; &gt;Mixing
&lt;span&gt;
    &lt;a href=&#34;#mixing&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Every piece of BTC has history to it.&lt;/li&gt;
&lt;li&gt;Ever heard of adverse selection? Users of BTC that has been tainted are more likely to wash it by methods including mixing.&lt;/li&gt;
&lt;li&gt;You are risking your own BTC, by using mixing services.&lt;/li&gt;
&lt;li&gt;Not to mention, these mixing services can get hacked or shut down for money laundering&lt;/li&gt;
&lt;li&gt;More expensive than base transaction&lt;/li&gt;
&lt;li&gt;Requires user knowledge&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;btc-xmr-atomic-swap&#34; &gt;BTC-XMR Atomic Swap
&lt;span&gt;
    &lt;a href=&#34;#btc-xmr-atomic-swap&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Some BTC users think the BTC-XMR swap makes BTC better because BTC users now have another way to wash their money&lt;/li&gt;
&lt;li&gt;They promote swapping to XMR and then swapping back to BTC!&lt;/li&gt;
&lt;li&gt;These are the users who use BTC because it is first, not because they think the tech is the best&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;bch--cashfusion-&#34; &gt;BCH + CashFusion 💵
&lt;span&gt;
    &lt;a href=&#34;#bch--cashfusion-&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;CashFusion obfuscates the sender of the coins but does not protect the owner&amp;rsquo;s balances. If you give me your BCH address, I still know how much you own. You&amp;rsquo;d have to maintain two addresses, one for receiving and one for sending just to get to the basic privacy protections Monero offers without any addon or user knowledge requirement.&lt;/p&gt;
&lt;p&gt;CashFusion relies on a single server which means that it&amp;rsquo;s centralized and prone to &lt;a href=&#34;https://www.reddit.com/r/btc/comments/pwupmn/comment/hem7yuc/?utm_source=share&amp;amp;utm_medium=web2x&amp;amp;context=3&#34;&gt;attacks&lt;/a&gt;. If one manages to take out CashFusion, all cash-fusions are unable to be completed. This is worse than Visa and MasterCard who have their own node network. These centralized companies are more decentralized than CashFusion itself! Reminder: Facebook, an almost $1T company went down for hours on Monday, October 4th, 2021 due to a DNS issue. Centralized internet services are all prone to being unusable by a user. The good thing is that there is no risk of losing funds (according to CashFusion).&lt;/p&gt;
&lt;p&gt;Instead of using a basic BCH wallet, you now have to use CashFusion&amp;rsquo;s network. This is no different from simply downloading a Monero wallet and swapping BCH for XMR.&lt;/p&gt;
&lt;p&gt;Bitcoin Cash users have the right mindset; privacy is a human right.
They like the idea of privacy but have this loyalty towards BCH similar to smokers opting for cigarettes over ecigs.
One is objectively better than the other. Crypto is still in its infancy, so it&amp;rsquo;ll take 10 years for people to stop acting like hard drug users who should be using psychedelics instead.&lt;/p&gt;
&lt;h2 id=&#34;eth--tornado-cash&#34; &gt;ETH + Tornado 🌪 Cash
&lt;span&gt;
    &lt;a href=&#34;#eth--tornado-cash&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;The good thing about Tornado cash compared to CashFusion is that you don&amp;rsquo;t have to rely on a centralized service. The web app is a UI for the Tornado: Mixer smart contract. This is a very good use of smart contracts but still, this service does not bring Ethereum up to Monero&amp;rsquo;s default protections.&lt;/p&gt;
&lt;p&gt;For one, you are restricted to sending and withdrawing 4 different quantities of ETH. How I would use Tornado is if I needed to &amp;ldquo;cleanse&amp;rdquo; ETH, I&amp;rsquo;d have to continuously send ETH to and then withdraw to different addresses each time. That&amp;rsquo;s 9 addresses if I had to move 0.9 ETH, not including transaction fees, the .0X amount of ETH left, and even the time/headache just to accomplish this. Up to $270 would be forfeited in order to get transaction privacy, not balance privacy.&lt;/p&gt;
&lt;p&gt;A single Monero seed can have an infinite number of accounts and each account can have an infinite number of subaddresses. Instead of subaddresses showing up on the blockchain, a stealth address is created by the sender on the receiver&amp;rsquo;s behalf and shows up on the transaction. Each transaction also has 7 other possible signatures (sender&amp;rsquo;s being a stealth address again) and so the sender is protected as well. The transaction amount is also unknown to observers&lt;/p&gt;
&lt;p&gt;A single Monero seed can have an infinite number of accounts and each account can have an infinite number of subaddresses. Instead of subaddresses showing up on the blockchain, a stealth address is created by the sender on the receiver&amp;rsquo;s behalf and shows up on the transaction. Each transaction also has 7 other possible signatures (sender&amp;rsquo;s being a stealth address again) and so the sender is protected as well. The transaction amount is also unknown to observers.&lt;/p&gt;
&lt;p&gt;Tornado Cash is just a mixer and like all mixer&amp;rsquo;s unless all transactions go through Tornado, ETH with a history dating to a Tornado can be seen as more suspicious than non-Tornado ETH.&lt;/p&gt;
&lt;p&gt;Ethereum has one thing over Monero which is smart contracts but just because they are called smart, does not mean they are used in a very smart way. DAO exploit resulted in a hard fork because it affects the founders, then there&amp;rsquo;s the Polygon exploit, and the Indexed Finance exploit. Even after being audited, smart contracts can be exploited. DeFi is simply less secure at the moment compared to proprietary banking systems that are at least insured up to $100,000 per person. It&amp;rsquo;s open-source minus the community inspection. I do hope DeFi improves in the coming years but a question for the reader is why Ethereum and not Solana, Cardano, Stellar? Should Ethereum really move away from proof-of-work? Let&amp;rsquo;s find out in the next subsection.&lt;/p&gt;
&lt;p&gt;Ethereum has one thing over Monero which is smart contracts but just because they are called smart, does not mean they are used in a very smart way. DAO exploit resulted in a hard fork because it affects the founders, then there&amp;rsquo;s the Polygon exploit, and the Indexed Finance exploit. Even after being audited, smart contracts can be exploited. DeFi is simply less secure at the moment compared to proprietary banking systems that are at least insured up to $100,000 per person. It&amp;rsquo;s open-source minus the community inspection. I do hope DeFi improves in the coming years but a question for the reader is why Ethereum and not Solana, Cardano, Stellar? Should Ethereum really move away from proof-of-work? Let&amp;rsquo;s find out in the next subsection.&lt;/p&gt;
&lt;h2 id=&#34;consensus-algorithm&#34; &gt;Consensus Algorithm
&lt;span&gt;
    &lt;a href=&#34;#consensus-algorithm&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;h3 id=&#34;proof-of-stake-pos-vs-delegated-proof-of-stake-dpos&#34; &gt;Proof-of-Stake (PoS) vs Delegated Proof-of-Stake (DPoS)
&lt;span&gt;
    &lt;a href=&#34;#proof-of-stake-pos-vs-delegated-proof-of-stake-dpos&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;Before we compare staking to working, let us first decide what&amp;rsquo;s objectively a better staking mechanism. DPoS suffers from even more issues compared to normal staking. Delegation is not more democratic, it&amp;rsquo;s more centralized.
The rich have more votes, increase their delegate&amp;rsquo;s likelihood of winning, and giving the rich voters a bigger share of the rewards.
There is a sacrifice of centralization in the name of scalability and even according to Vitalik (ETH founder), there are incentives for the delegates to collude.
In conclusion DPoS is worse than PoS so I will compare PoW to PoS.&lt;/p&gt;
&lt;h3 id=&#34;proof-of-work-pow-vs-proof-of-stake-pos&#34; &gt;Proof-of-Work (PoW) vs. Proof-of-Stake (PoS)
&lt;span&gt;
    &lt;a href=&#34;#proof-of-work-pow-vs-proof-of-stake-pos&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;So now we have come to the discussion of PoW vs PoS. Unlike previous PoS critics, I&amp;rsquo;ll be arguing that PoW is better than PoS from the equity point of view and that PoS benefits the wealthy more than PoW.
PoS critics usually try to argue that PoS is less secure than PoW, but I have never seen them respond back to the solutions proposed that punish bad actors. That is why I don&amp;rsquo;t consider them as solid arguments and will merely mention them.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In PoW, there are costs to validating transactions in a block. The mining rewards are an incentive but a cost must be taken for a chance to get the rewards. There is real risk involved.&lt;/li&gt;
&lt;li&gt;With PoS, the rich arguably get richer. A better argument is that the rich do not distribute or invest their coins in order to get richer. With PoW, the rich will have to actively spend their crypto (assuming a crypto world), distributing their coins to hardware companies and then the working class, in order to simply get the chance of more money. There is a measurable physical cost associated with it. Rewards are distributed to those who put in the most work, and not people who had the most. PoS is like a Central Bank giving newly printed money more often to the people who have saved the most. What&amp;rsquo;s to stop the UN to start a resolution that requires countries to buy up all PoS coins and then stake them together? Then the supply of ETH is fully controlled by the government at no cost to them.&lt;/li&gt;
&lt;li&gt;This point is more economical and theoretical than about PoS: Inflation is when prices increase year over year. If done correctly, there is a higher cost to money hoarders than those who have an appropriate amount saved. The cost to live should be non-increasing but the cost of luxury goods should be non-decreasing and a marginal property tax can help tackle wealth inequality without direct discrimination. The wealthy should be able to live where they want and own as many properties as they desire but they should be dissuaded in raising the cost to live for others. I say all this because crypto should not benefit the fortunate more than the unfortunate. It should benefit innovation, and risk. I have purposely excluded investment because a scam also requires an investment and that is not something crypto should reward. Pre-mined coins disproportionately rewards those in power and not necessarily those that take on risk. The first buyers take on more risk than those who are facilitating the presale. There is more trust required than a PoW coin that simply utilizes users&amp;rsquo; CPU. The price of the token is determine by those that mine it and are not set by the founders/upper class.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@abhisharm/understanding-proof-of-stake-through-its-flaws-part-3-long-range-attacks-672a3d413501&#34;&gt;Weak Subjectivity&lt;/a&gt;
When a node comes online for the first time, how will the node know the hash of the valid chain? In PoW, the correct chain is objectively the longest chain which is determined by computation power. In PoS, the new node will have to trust other nodes to be broadcasting the right information. Let&amp;rsquo;s look at Vitalik&amp;rsquo;s argument: &amp;ldquo;consider the kind of situation where weak subjectivity by itself would compromise a blockchain&amp;rsquo;s security. In such a world, powerful corporate or nation state actors would have the ability to somehow convince an entire community that block hash B was the block hash of block XXXYYY when most of them saw at the time and have stored in their own computers that the block hash of block XXXYYY was A, but for some reason such powerful actors would not have the ability to trick users into accepting a different location from where they download their client software.&amp;rdquo;
According to Vitlak, a bad actor cannot set up more than half the network&amp;rsquo;s nodes and broadcast the wrong hash such that when the nodes restart due to a network update, they won&amp;rsquo;t rely on false information? It&amp;rsquo;s pretty obvious that the cost to set up 51% of broadcasting nodes is considerably less than the cost to achieve 51% of the network&amp;rsquo;s hash rate.
I&amp;rsquo;ll admit this argument is very fuzzy, but I am open to removing it completely if one is willing to provide an unbiased risk analysis of weak subjectivity.&lt;/li&gt;
&lt;li&gt;Another argument is PoS is permissioned vs PoW&amp;rsquo;s permissionless. To get Monero, one can mine it on any CPU. For PoS, one needs to buy the crypto from another entity to participate in the system.&lt;/li&gt;
&lt;li&gt;A premine was probably required if there was never PoW and so PoS coins reward the rich at no cost to them. A system that favours merit over the oligarchs is always fairer.&lt;/li&gt;
&lt;li&gt;Other arguments that other people use (not part of my actual argument, just something to think about): Accumulated work (reversing the PoS chain is faster than than the PoW chain), finality requires 2/3 instead of 51%.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I strongly believe that ETH 2.0 will show everyone if PoS is here to stay or is significantly less secure than PoW, but what it won&amp;rsquo;t show that it is more equitable than PoW.&lt;/p&gt;
&lt;p&gt;As for Monero. Monero would only adopt PoS if the community voted for it and for the time being, that seems unlikely. Any Monero fork that uses PoS will be used less than Monero itself, and by the network effect, Monero will be used, not PoSonero.&lt;/p&gt;
&lt;h2 id=&#34;asic-resistant-proof-of-work&#34; &gt;ASIC Resistant Proof-of-Work
&lt;span&gt;
    &lt;a href=&#34;#asic-resistant-proof-of-work&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Now that we have determined that PoW is more secure than PoS, let&amp;rsquo;s figure out why PoW is better on Monero than the other PoW cryptos like BTC.&lt;/p&gt;
&lt;p&gt;For a proof-of-work network to be secure, it needs to prevent centralization and advantages. Cryptos like ETH1, BTC, BCH are all compatible with ASICs and thus prone to centralization by big corporations with ASIC farms. Monero however, uses the (4x audited) RandomX algorithm is optimized to run better on CPUs than GPUs and ASICs. Before &lt;a href=&#34;https://github.com/tevador/RandomX/blob/master/doc/design.md&#34;&gt;RandomX&lt;/a&gt;, Monero needed hard forks to render any specialized ASICs useless, but with RandomX, the virtualisation techniques increased the complexity of implementing ASICs.&lt;/p&gt;
&lt;p&gt;The logic behind ASIC resistance is as &lt;a href=&#34;https://www.reddit.com/r/Monero/comments/ggdp8e/comment/fq0332a/?utm_source=share&amp;amp;utm_medium=web2x&amp;amp;context=3&#34;&gt;follows&lt;/a&gt;: PoW algorithms are meant to be inefficient for ALL parties. ASICs allow for hardware advantages and thus greater efficiency for some parties than the individual. The ASIC manufacturer maintains a hardware advantage over other miners and can thus produce more hashes per Watt than other miners. This is objectively more centralized. Example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-md&#34; data-lang=&#34;md&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Let CPU hashes per core = x hashes / watt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;# SHA-256
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;&lt;/span&gt;ASIC hashes per core = nx Hashes / Watt, n &amp;gt; 1 [Advantage to specialist]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;# RandomX
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;&lt;/span&gt;ASIC hashes per core &amp;lt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;Hashes&lt;/span&gt; &lt;span style=&#34;color:#a61717;background-color:#e3d2d2&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;Watt&lt;/span&gt; &lt;span style=&#34;color:#a61717;background-color:#e3d2d2&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;due&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;Randomness&lt;/span&gt; &lt;span style=&#34;color:#a61717;background-color:#e3d2d2&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;Virtualisation&lt;/span&gt;&lt;span style=&#34;color:#a61717;background-color:#e3d2d2&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;ASICs&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;cannot&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;be&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;made&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;outperform&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;CPUs&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;since&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;entire&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;algorithm&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;creates&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;random&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;program&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;that&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;leverages&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;many&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;CPU&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;features&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;possible&lt;/span&gt;&lt;span style=&#34;color:#a61717;background-color:#e3d2d2&#34;&gt;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Not only would it be costly and difficult to create an ASIC to run RandomX more efficiently, but there is also a massive risk that Monero can simply hard fork again and use a modified algorithm. There are more lucrative opportunities for profit-driven firms than to try and create a complex ASIC for an algorithm purposely created to make the process difficult.&lt;/p&gt;
&lt;h2 id=&#34;transaction-fees-and-liquidating-monero&#34; &gt;Transaction Fees, and Liquidating Monero
&lt;span&gt;
    &lt;a href=&#34;#transaction-fees-and-liquidating-monero&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;I&amp;rsquo;m only including this for everyone to get the idea that transaction fees are only horrible for ETH at the moment.&lt;/p&gt;
&lt;p&gt;To properly compare fees, we will normalize each cryptocurrency market cap to that of Bitcoins, to get the normalized price and thus normalized USD fee. For most cryptos, transactions correlate with fees but not with Monero; the opposite is true, one factor being dynamic block sizes that end up lowering the fees per transaction as transactions/block increases. The argument for fees is to penalize spam, which is the attack on NANO that went on for months. The only incentive to run a NANO node is to accept NANO…The entire worth is derived from the network effect and not actual technology or cost like PoW cryptos.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.elijahlopez.ca/images/crypto/transaction-fees.png&#34; alt=&#34;Transaction fees table&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.google.com/spreadsheets/d/1WfRmKKbGrSF_t95fattTJYfZXL2qk6-byNjCXh-oYA4/edit#gid=0&#34;&gt;Source of calculations&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;notes&#34; &gt;Notes
&lt;span&gt;
    &lt;a href=&#34;#notes&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;For Ethereum, the normalized Fee is poised to change when ETH 2 rolls out which will allegedly make it competitive with Solana.&lt;/li&gt;
&lt;li&gt;With Monero, transaction fees actually decrease as transactions increase due to dynamic block sizes. You can read more about dynamic block sizes in my Intro to Monero at the beginning of this article. If the minimum transaction fees are deemed too high, Monero can always reduce it in a hard fork, but at the moment there is no need.&lt;/li&gt;
&lt;li&gt;With Stellar, the fee was back-calculated from $0.00025 / transaction currently. I&amp;rsquo;m not sure if it&amp;rsquo;s tied to fiat or just transaction traffic.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There really isn&amp;rsquo;t much to say about transaction fees. Anything less than $2 / transaction is good since credit card transactions cost %1.5–3 and thus sellers can accept crypto transactions that are short up 2%.&lt;/p&gt;
&lt;p&gt;Supply caps and block reward reductions may play a role in the future, but I&amp;rsquo;d rather wait and see make baseless speculations.
This is an unknown type of risk with Bitcoin in its current state.&lt;/p&gt;
&lt;h2 id=&#34;international-standards&#34; &gt;International Standards
&lt;span&gt;
    &lt;a href=&#34;#international-standards&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Lastly, Monero and Stellar both use the ISO 4217 currency standard for international currencies just like XAU is for one troy ounce of gold. This reason is a semantic one, so that&amp;rsquo;s why it&amp;rsquo;s last.&lt;/p&gt;
&lt;h2 id=&#34;liquidating-and-purchasing-monero&#34; &gt;Liquidating and Purchasing Monero
&lt;span&gt;
    &lt;a href=&#34;#liquidating-and-purchasing-monero&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;This is not important to the argument, however it is important for Monero users.&lt;/p&gt;
&lt;p&gt;By now if you hate Monero, you will be tempted to start throwing a temper tantrum about Monero being de-listed and the &amp;ldquo;fear of regulations&amp;rdquo;. Guess what you can use instead? You can use &lt;a href=&#34;https://fixedfloat.com/&#34;&gt;fixedfloat&lt;/a&gt; to exchange XMR to XLM for a 0.5% fee and then deposit XLM on the exchange you use to sell immediately to fiat. Make sure the exchange you use can be trusted or that any crypto you deposit can be recovered through at least legal means. The reason I chose XLM and not any other crypto is because I did the math, and the math says that Stellar is the cheapest today to use as a medium.&lt;/p&gt;
&lt;p&gt;To buy Monero, just do the same as above, but the other way around.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.elijahlopez.ca/images/crypto/monero-swap-fees.png&#34; alt=&#34;Monero Swapping Fees&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;addressing-scalability&#34; &gt;Addressing Scalability
&lt;span&gt;
    &lt;a href=&#34;#addressing-scalability&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Just as a reminder, with Monero, fees reduce as transactions per block go up.&lt;/p&gt;
&lt;h3 id=&#34;scenario-a-matching-bitcoin&#34; &gt;Scenario A: Matching Bitcoin
&lt;span&gt;
    &lt;a href=&#34;#scenario-a-matching-bitcoin&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;There are currently 272503 transactions per day on Bitcoin,
so we need to check if even modern hard drives and SSDs can handle this amount of transactions on the Monero blockchain.&lt;/p&gt;
&lt;p&gt;From xmrchain.net, the average transaction size on Monero for the last 25 transactions is 2.05 kB.
We&amp;rsquo;ll use 3 kB per transaction to account for any future upgrades and other block data.&lt;/p&gt;
&lt;p&gt;Since block times are ~2 minutes, instead of 10, the transactions per block is: 272503/24/30 ~= 379 transactions per block.
A block&amp;rsquo;s size is 379 * 3 = 1.137 MB. Even poor internet download speeds could handle this.&lt;/p&gt;
&lt;p&gt;A year&amp;rsquo;s worth of transactions would be 1.137 * 30 * 24 * 365 = 298,803.6 MB = 300GB.&lt;/p&gt;
&lt;p&gt;At 300GB a year, we use 3 TB a decade, and 9 TB every three decades.&lt;/p&gt;
&lt;p&gt;Overall, we need to spend $500 for a 16 TB hard drive or $1,000 for a 8 TB SSD.
This is the cost in the present, but overtime storage prices will go down.
By the usage described before, an SSD will last 2.5 decades and an HDD will last 5 decades!&lt;/p&gt;
&lt;h3 id=&#34;scenario-b-a-practical-stress-test&#34; &gt;Scenario B: a Practical Stress Test
&lt;span&gt;
    &lt;a href=&#34;#scenario-b-a-practical-stress-test&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;Now we will figure out the transactions/day limit. Let&amp;rsquo;s say in the future, Monero upgrades to allow nodes
to use data for 10 years. That is, any transactions incorporating outputs that are more than 10 years old
will be considered invalid. At 8TB/decade, we get 800GB per year which is x2.67 more than our previous
scenario. 800 / 365 / 3 = 730,593 transactions per day. And again, this is under the assumption that transactions become
46% bigger than they currently are. If we use the present average of 2.05 kB, 800 GB / 365 / 2.05 KB = 1,069,161 transactions per day.&lt;/p&gt;
&lt;p&gt;Thus, max transactions per day is within the range [730,593, 1,069,161]&lt;/p&gt;
&lt;h2 id=&#34;recap&#34; &gt;Recap
&lt;span&gt;
    &lt;a href=&#34;#recap&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Monero offers fungibility, all aspects of financial privacy without requiring users to know of specific techniques, and an ASIC-resistant proof-of-work system. These three important topics might make Monero the best cryptocurrency as of today, but its open-minded and always-improving technology is why it will continue to be the best. Monero is digital cash, not a Security.&lt;/p&gt;
&lt;p&gt;If you enjoyed this article and want to support my future works, feel free to donate anonymously: monero:84PR6SkYd5zaFLKDjAFrQfbaAg2c7SV3q3XDZ15QCpEZUggrN4YzY7n8m9XC3deXjo41yWHTm1LrsUpPTYGnRQbD9Cwp8En
Thanks to Monero, I only have one wallet that has multiple addresses and I don&amp;rsquo;t need to worry about someone curious spying on the amount of Monero I lost in a boating accident.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to Buy Monero in Canada</title>
      <link>https://blog.elijahlopez.ca/posts/how-to-buy-monero-in-canada/</link>
      <pubDate>Fri, 25 Feb 2022 22:56:02 -0500</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/how-to-buy-monero-in-canada/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ll be testing all of these methods except LocalMonero since the actual fee there is at least 20% as of 2022/4/21.
Testing is done by using converting the received XMR to CAD using the currency pair rates at the start of each new pair transaction.&lt;/p&gt;
&lt;h2 id=&#34;fixed-float&#34; &gt;Fixed Float
&lt;span&gt;
    &lt;a href=&#34;#fixed-float&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Assuming you can purchase XLM via &lt;a href=&#34;https://web.newton.co/r/YREHXA&#34;&gt;Newton&lt;/a&gt;, use &lt;a href=&#34;https://fixedfloat.com/XLM/XMR?ref=dybjhjrb&#34;&gt;Fixed Float&lt;/a&gt; for 0.5% - 1% fee per trade.&lt;/p&gt;
&lt;h2 id=&#34;kraken&#34; &gt;Kraken
&lt;span&gt;
    &lt;a href=&#34;#kraken&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;h3 id=&#34;cad---usd---xmr&#34; &gt;CAD -&amp;gt; USD -&amp;gt; XMR
&lt;span&gt;
    &lt;a href=&#34;#cad---usd---xmr&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;A deposit fee of 0.1% for etransfer (3k limit), a USD conversion fee of 0.2%, and a 0.16% post limit order fee to buy XMR, and a flat network fee to withdraw.
In total, that&amp;rsquo;s 0.46% as a maker and a 0.56% fee as a taker. You can use Etana to forgo the deposit fee, but I&amp;rsquo;m unsure if Etana has its
own fees and it does require KYC. A wire transfer requires being in-persona which might have its own fees; it does for my business account!&lt;/p&gt;
&lt;p&gt;My own results for the etransfer deposit method are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CAD/USD = 1.25625&lt;/li&gt;
&lt;li&gt;XMR/USD = 285.48&lt;/li&gt;
&lt;li&gt;a etransfer of 3,000 CAD becomes 2,970 CAD converted to 2,359.45 USD bought 8.2648521800 XMR withdrew and received 8.25152 XMR&lt;/li&gt;
&lt;li&gt;Fee = 3,000 - 8.25152 * 285.48 * 1.25625 = 40.72&amp;hellip; = 1.3574%&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Make sure to set the limit order one cent less than market with &lt;strong&gt;post&lt;/strong&gt; selected unless you are treating it as a security.&lt;/p&gt;
&lt;p&gt;The etransfer deposit fee took the largest chunk! I&amp;rsquo;ll have to test the other methods to compare.&lt;/p&gt;
&lt;h3 id=&#34;xlm---usd---xmr&#34; &gt;XLM -&amp;gt; USD -&amp;gt; XMR
&lt;span&gt;
    &lt;a href=&#34;#xlm---usd---xmr&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;Depositing XLM only incurs network fees. Selling to USD has a 0.16% fee for a post limit order, and a post limit order on XMR is another 0.16%.
That&amp;rsquo;s 0.34% as a 2x maker and 0.52% as a 2x taker.&lt;/p&gt;
&lt;h3 id=&#34;usd---xmr&#34; &gt;USD -&amp;gt; XMR
&lt;span&gt;
    &lt;a href=&#34;#usd---xmr&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;You&amp;rsquo;ll need a USD bank account for this and you&amp;rsquo;ll need Etana which is another KYC hurdle. Theoretically this method results in
a 0.16% fee as a maker and a 0.26% fee as a taker. I say theoretically though since I don&amp;rsquo;t know if there&amp;rsquo;s any fee from Etana&amp;rsquo;s side and
it&amp;rsquo;s not practical as like I said before, you need to have USD beforehand without a conversion fee.&lt;/p&gt;
&lt;h2 id=&#34;local-monero&#34; &gt;Local Monero
&lt;span&gt;
    &lt;a href=&#34;#local-monero&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://localmonero.co/?rc=nde2&#34;&gt;Local Monero&lt;/a&gt; is less private than FixedFloat and more than exchanges but costs way more (20%+ via CAD, 4.4%+ via XLM),
requires greater level of trust, and takes a longer time than exchanges ignoring the inital KYC time.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://nehdddktmhvqklsnkjqcbpmb63htee2iznpcbs5tgzctipxykpj6yrid.onion/?rc=nde2&#34;&gt;Local Monero TOR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://lm.i2p/?rc=nde2&#34;&gt;Local Monero I2P&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;conclusion&#34; &gt;Conclusion
&lt;span&gt;
    &lt;a href=&#34;#conclusion&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;In conclusion, it&amp;rsquo;s better to buy XLM on Newton, sell it for USD on Kraken, and then buy XMR with the USD.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>HTML and CSS - Mobile Responsive Design</title>
      <link>https://blog.elijahlopez.ca/posts/mobile-responsive-design/</link>
      <pubDate>Thu, 24 Feb 2022 00:40:12 -0500</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/mobile-responsive-design/</guid>
      <description>&lt;p&gt;Tutorials nowadays just regurgitate the wrong information! Here&amp;rsquo;s the right way to do mobile responsive design. The key is to use
a scale of 0.86 instead of 1. This way zooming in and out actually works!&lt;/p&gt;
&lt;p&gt;From &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTML/Viewport_meta_tag#viewport_width_and_screen_width&#34;&gt;https://developer.mozilla.org/en-US/docs/Web/HTML/Viewport_meta_tag#viewport_width_and_screen_width&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;name&lt;/span&gt;=&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;content&lt;/span&gt;=&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;width=device-width, initial-scale=0.86, minimum-scale=0.86&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Tutorials will recommend to style mobile first, but I usually create websites for the desktop view first.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;/* This is optional. I use it for Tablet or 16:10 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;media&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;screen&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;and&lt;/span&gt; (&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;max-width&lt;/span&gt;:&lt;span style=&#34;color:#ffa500&#34;&gt;1280px&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    #&lt;span style=&#34;color:#447fcf;text-decoration:underline&#34;&gt;desktop-nav&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;a&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;float&lt;/span&gt;: &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;left&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;text-align&lt;/span&gt;: &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;center&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;margin-left&lt;/span&gt;: &lt;span style=&#34;color:#3677a9&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;%&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;/* This is the mobile view */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;media&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;screen&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;and&lt;/span&gt; (&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;max-width&lt;/span&gt;:&lt;span style=&#34;color:#ffa500&#34;&gt;870px&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    #&lt;span style=&#34;color:#447fcf;text-decoration:underline&#34;&gt;desktop-nav&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;display&lt;/span&gt;: &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;none&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>How to Create a Monero Stagenet Wallet</title>
      <link>https://blog.elijahlopez.ca/posts/how-to-create-a-monero-stagenet-wallet/</link>
      <pubDate>Mon, 21 Feb 2022 17:04:11 -0500</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/how-to-create-a-monero-stagenet-wallet/</guid>
      <description>
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/MlYorZQTmV4&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;I&amp;rsquo;m making this tutorial because there&amp;rsquo;s currently a bug in the GUI that won&amp;rsquo;t let
you make a stagenet wallet if you have already used a mainnet wallet.&lt;/p&gt;
&lt;h2 id=&#34;add-to-path-environment-variable&#34; &gt;Add to PATH Environment Variable
&lt;span&gt;
    &lt;a href=&#34;#add-to-path-environment-variable&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;This is optional but will help you in accessing the CLI in a terminal with any working directory&lt;/p&gt;
&lt;h2 id=&#34;creating-the-wallet-directory&#34; &gt;Creating the Wallet Directory
&lt;span&gt;
    &lt;a href=&#34;#creating-the-wallet-directory&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;h3 id=&#34;windows&#34; &gt;Windows
&lt;span&gt;
    &lt;a href=&#34;#windows&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;&lt;code&gt;cd %HOMEPATH%/Documents/Monero/wallets &amp;amp;&amp;amp; mkdir stagenet_one &amp;amp;&amp;amp; cd stagenet_one&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;unix&#34; &gt;Unix
&lt;span&gt;
    &lt;a href=&#34;#unix&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;p&gt;&lt;code&gt;cd ~/Documents/Monero/wallets &amp;amp;&amp;amp; mkdir stagenet_one &amp;amp;&amp;amp; cd stagenet_one&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;creating-the-wallet&#34; &gt;Creating the Wallet
&lt;span&gt;
    &lt;a href=&#34;#creating-the-wallet&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;monero-wallet-cli --stagenet --daemon-address=http://stagenet.xmr-tw.org:38081 --untrusted-daemon
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Enter wallet name: stagenet_one
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;For the next input: y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;open-wallet-from-gui&#34; &gt;Open Wallet from GUI
&lt;span&gt;
    &lt;a href=&#34;#open-wallet-from-gui&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Now you can open the stagenet wallet from your GUI&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bash &amp; Linux Helpers</title>
      <link>https://blog.elijahlopez.ca/posts/bash-helpers/</link>
      <pubDate>Mon, 14 Feb 2022 14:06:30 -0500</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/bash-helpers/</guid>
      <description>&lt;p&gt;It seems that many article tutorials on &lt;code&gt;bash&lt;/code&gt; are ugly, are unoptimal, and are no straight forward.
My goal is for this file to be a reference file whenever I need to do scripting after a long time.
One important concept in bash, is that an exit code of 0 indicates True, not False. Which seems counterintuitive if you program in
any non-scripting language like C/C++ or Python.&lt;/p&gt;
&lt;h2 id=&#34;bash---argument-parsing-and-flags&#34; &gt;Bash - Argument Parsing and Flags
&lt;span&gt;
    &lt;a href=&#34;#bash---argument-parsing-and-flags&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;If you don&amp;rsquo;t get what&amp;rsquo;s going on, read my &lt;a href=&#34;https://blog.elijahlopez.ca/posts/bash-quickstart.md&#34;&gt;bash quickstart article&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;concepts&#34; &gt;Concepts
&lt;span&gt;
    &lt;a href=&#34;#concepts&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;getopts is overkill, so here is an alternative.&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Booleans&amp;rdquo; using string comparison&lt;/li&gt;
&lt;li&gt;Conditionals (if, elif, else, AND &amp;amp;&amp;amp;, OR ||)&lt;/li&gt;
&lt;li&gt;For loop&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40ffff&#34;&gt;supplied_arg&lt;/span&gt;=&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;default&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# iterate all arguments&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;for&lt;/span&gt; arg in &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#40ffff&#34;&gt;$@&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# use [[ ]] to avoid double quoting variables&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; [[ &lt;span style=&#34;color:#40ffff&#34;&gt;$last_arg&lt;/span&gt; = &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;--supply&amp;#34;&lt;/span&gt; ]]; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#40ffff&#34;&gt;supplied_arg&lt;/span&gt;=&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#40ffff&#34;&gt;$arg&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#40ffff&#34;&gt;last_arg&lt;/span&gt;=&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# OR ||&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;elif&lt;/span&gt; [[ &lt;span style=&#34;color:#40ffff&#34;&gt;$arg&lt;/span&gt; = &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;--flag1&amp;#34;&lt;/span&gt; ]] || [[ &lt;span style=&#34;color:#40ffff&#34;&gt;$arg&lt;/span&gt; = &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;--flag&amp;#34;&lt;/span&gt; ]]; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#40ffff&#34;&gt;flag1&lt;/span&gt;=&lt;span style=&#34;color:#24909d&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# elif, AND &amp;amp;&amp;amp;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;elif&lt;/span&gt; [[ &lt;span style=&#34;color:#40ffff&#34;&gt;$arg&lt;/span&gt; = &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;--override&amp;#34;&lt;/span&gt; ]] &amp;amp;&amp;amp; [[ ! &lt;span style=&#34;color:#40ffff&#34;&gt;$supplied_arg&lt;/span&gt; = &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;default&amp;#34;&lt;/span&gt; ]]; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# ignore the redundancy, this is to showcase &amp;amp;&amp;amp;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#40ffff&#34;&gt;flag_override&lt;/span&gt;=&lt;span style=&#34;color:#24909d&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# you can do something with these args here&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# wc -l &amp;#34;$arg&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# or you can set last_arg in order to parse `--something ARG`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#40ffff&#34;&gt;last_arg&lt;/span&gt;=&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#40ffff&#34;&gt;$arg&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# end of if statement&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# done loop (for or while)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# check if flag supplied&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; [ &lt;span style=&#34;color:#40ffff&#34;&gt;flag1&lt;/span&gt; = true]; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;got --flag1 or --flag&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#40ffff&#34;&gt;notGot&lt;/span&gt;=&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;got neither --flag1 nor --flag&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# flag not supplied (since variable was never set, we check ! = true rather than = false)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; [ ! &lt;span style=&#34;color:#40ffff&#34;&gt;flag1&lt;/span&gt; = &lt;span style=&#34;color:#24909d&#34;&gt;true&lt;/span&gt; ]; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#40ffff&#34;&gt;$notGot&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;linux---add-to-path&#34; &gt;Linux - Add to PATH
&lt;span&gt;
    &lt;a href=&#34;#linux---add-to-path&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;A better approach than appending a statement to &lt;code&gt;PATH=&amp;quot;$PATH:/new/path&amp;quot;&amp;gt;&amp;gt; ~/.bashrc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;TODO: add instructions&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;linux---add-cronjob&#34; &gt;Linux - Add Cronjob
&lt;span&gt;
    &lt;a href=&#34;#linux---add-cronjob&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;automated approach&lt;/li&gt;
&lt;li&gt;adds the cronjob if not exists&lt;/li&gt;
&lt;li&gt;prevents concurrent/overlap runs&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;add_cronjob() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# crontab will not set the working directory&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# create locks directory if it does not exist&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    mkdir -p ~/locks
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# my sample job uses flock to prevent overlapping runs&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# minute hour day month day_of_week&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# /X means divisible by X&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#40ffff&#34;&gt;cronjob&lt;/span&gt;=&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;*/1 * * * * flock -n ~/locks/auto_deploy_&lt;/span&gt;&lt;span style=&#34;color:#40ffff&#34;&gt;$PROJECT&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;.lock &lt;/span&gt;&lt;span style=&#34;color:#40ffff&#34;&gt;$PYTHON&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color:#24909d&#34;&gt;pwd&lt;/span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;/cronjob.py&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# cronjob.py will set the working directory&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; ! crontab -l &amp;amp;&amp;gt;/dev/null; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# crontab file does not exist&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#40ffff&#34;&gt;$cronjob&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt; | crontab -
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;Created new crontab with job&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;elif&lt;/span&gt; ! crontab -l 2&amp;gt;/dev/null | grep -Fq &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#40ffff&#34;&gt;$cronjob&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# job not found in crontab&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;$(&lt;/span&gt;crontab -l ; &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#40ffff&#34;&gt;$cronjob&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;)&lt;/span&gt; | crontab -
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;Added &lt;/span&gt;&lt;span style=&#34;color:#40ffff&#34;&gt;$cronjob&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt; ... to existing crontab&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;Job already exists in crontab&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;linux---add-systemd-service&#34; &gt;Linux - Add Systemd Service
&lt;span&gt;
    &lt;a href=&#34;#linux---add-systemd-service&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;I used lots of echos and tee [-a]&lt;/li&gt;
&lt;li&gt;In order to work with spaces in an argument, I created strings with &lt;code&gt;\&#39;$VAR\&#39;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;TODO: add code&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;linux---auto-setup-certbot&#34; &gt;Linux - Auto Setup Certbot
&lt;span&gt;
    &lt;a href=&#34;#linux---auto-setup-certbot&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# Context:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# define $DOMAIN (e.g. lenerva.com)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;install_certbot() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sudo snap install core; sudo snap refresh core
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sudo snap install --classic certbot
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sudo ln -s /snap/bin/certbot /usr/bin/certbot
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sudo certbot --nginx -d &lt;span style=&#34;color:#40ffff&#34;&gt;$DOMAIN&lt;/span&gt; -d www.&lt;span style=&#34;color:#40ffff&#34;&gt;$DOMAIN&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;linux---auto-configure-nginx---gunicorn&#34; &gt;Linux - Auto Configure NGINX - Gunicorn
&lt;span&gt;
    &lt;a href=&#34;#linux---auto-configure-nginx---gunicorn&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;This works for me but it is possible to fail for you without editing &lt;code&gt;/etc/nginx/nginx.conf&lt;/code&gt; manually server name hashes to 128&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# Context:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# define $DOMAIN beforehand (e.g. lenerva.com)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# define $PROJECT beforehand (e.g. my-project)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# pwd is currently the project root directory&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;configure_nginx() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# configure nginx&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sudo apt install nginx -y
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sudo mkdir -p /var/www/&lt;span style=&#34;color:#40ffff&#34;&gt;$DOMAIN&lt;/span&gt;/html
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sudo chown -R &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#40ffff&#34;&gt;$USER&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#40ffff&#34;&gt;$USER&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt; /var/www/&lt;span style=&#34;color:#40ffff&#34;&gt;$DOMAIN&lt;/span&gt;/html
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sudo chmod -R &lt;span style=&#34;color:#3677a9&#34;&gt;755&lt;/span&gt; /var/www/&lt;span style=&#34;color:#40ffff&#34;&gt;$DOMAIN&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;server {&amp;#34;&lt;/span&gt; | sudo tee /etc/nginx/sites-available/&lt;span style=&#34;color:#40ffff&#34;&gt;$PROJECT&lt;/span&gt; &amp;gt;/dev/null
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;  listen [::]:80;&amp;#34;&lt;/span&gt; | sudo tee -a /etc/nginx/sites-available/&lt;span style=&#34;color:#40ffff&#34;&gt;$PROJECT&lt;/span&gt; &amp;gt;/dev/null
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;  listen 80;&amp;#34;&lt;/span&gt; | sudo tee -a /etc/nginx/sites-available/&lt;span style=&#34;color:#40ffff&#34;&gt;$PROJECT&lt;/span&gt; &amp;gt;/dev/null
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;  location / {&amp;#34;&lt;/span&gt; | sudo tee -a /etc/nginx/sites-available/&lt;span style=&#34;color:#40ffff&#34;&gt;$PROJECT&lt;/span&gt; &amp;gt;/dev/null
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;    include proxy_params;&amp;#34;&lt;/span&gt; | sudo tee -a /etc/nginx/sites-available/&lt;span style=&#34;color:#40ffff&#34;&gt;$PROJECT&lt;/span&gt; &amp;gt;/dev/null
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;    proxy_pass http://unix:&lt;/span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color:#24909d&#34;&gt;pwd&lt;/span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;/gunicorn.sock;&amp;#34;&lt;/span&gt; | sudo tee -a /etc/nginx/sites-available/&lt;span style=&#34;color:#40ffff&#34;&gt;$PROJECT&lt;/span&gt; &amp;gt;/dev/null
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;  }&amp;#34;&lt;/span&gt; | sudo tee -a /etc/nginx/sites-available/&lt;span style=&#34;color:#40ffff&#34;&gt;$PROJECT&lt;/span&gt; &amp;gt;/dev/null
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;}&amp;#34;&lt;/span&gt; | sudo tee -a /etc/nginx/sites-available/&lt;span style=&#34;color:#40ffff&#34;&gt;$PROJECT&lt;/span&gt; &amp;gt;/dev/null
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sudo ln -s &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;/etc/nginx/sites-available/&lt;/span&gt;&lt;span style=&#34;color:#40ffff&#34;&gt;$PROJECT&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt; /etc/nginx/sites-enabled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# TODO: if publishing script, also set max server name hashes to 128 in /etc/nginx/nginx.conf&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# uncomment below if it didn&amp;#39;t work&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# nano /etc/nginx/nginx.conf&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sudo systemctl restart nginx
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# Firewall&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sudo ufw allow &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;Nginx Full&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Jenkins Snippets</title>
      <link>https://blog.elijahlopez.ca/posts/jenkins-snippets/</link>
      <pubDate>Mon, 07 Feb 2022 11:08:15 -0500</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/jenkins-snippets/</guid>
      <description>&lt;h2 id=&#34;ignorable-preface&#34; &gt;Ignorable Preface
&lt;span&gt;
    &lt;a href=&#34;#ignorable-preface&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;One of my tasks at work was to prevent builds aborted by &lt;code&gt;kill_outdated_builds()&lt;/code&gt; from resuming upon a Jenkins restart. After I finished that one, I got a task later to remove all unsafe method usages, mainly the use of &lt;code&gt;getRawBuild&lt;/code&gt; which was used beyond the aforementioned function. It is used liberally on StackOverFlow, which is unfortunate, as if a public repository decides to use the function, there will be a massive security hole.&lt;/p&gt;
&lt;p&gt;These two snippets are a safe but rather unintuitive way to abort builds and get the build log in Jenkins. They took hours of research just to figure out and implement.&lt;/p&gt;
&lt;h2 id=&#34;aborting-old--outdated-builds&#34; &gt;Aborting Old / Outdated Builds
&lt;span&gt;
    &lt;a href=&#34;#aborting-old--outdated-builds&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#447fcf;text-decoration:underline&#34;&gt;hudson.model.ParametersAction&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#447fcf;text-decoration:underline&#34;&gt;jenkins.model.Jenkins&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#447fcf;text-decoration:underline&#34;&gt;jenkins.model.CauseOfInterruption&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#447fcf;text-decoration:underline&#34;&gt;jenkins.model.Jenkins&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;// type of _build in case you need it
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#447fcf;text-decoration:underline&#34;&gt;org.jenkinsci.plugins.workflow.job.WorkflowRun&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;// TODO: create plugin or something for custom status messages
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ffa500&#34;&gt;@NonCPS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#447fcf&#34;&gt;abortOldBuilds&lt;/span&gt;(String paramKey, String paramVal) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;// param_key and paramVal can be used for PR numbers
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;def&lt;/span&gt; job = Jenkins.&lt;span style=&#34;color:#bbb&#34;&gt;instanceOrNull&lt;/span&gt;.&lt;span style=&#34;color:#bbb&#34;&gt;getItem&lt;/span&gt;(JOB_NAME)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;def&lt;/span&gt; buildID = BUILD_ID
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;// highest running ID
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;def&lt;/span&gt; highestRID = buildID
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;// in case the current build is old
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;&lt;/span&gt;    WorkflowRun curBuild
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;def&lt;/span&gt; build = job.&lt;span style=&#34;color:#bbb&#34;&gt;getLastBuild&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;// avoid .builds since it can cause iteration errors
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;while&lt;/span&gt; (build != &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;null&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;def&lt;/span&gt; cbuildID = build.&lt;span style=&#34;color:#bbb&#34;&gt;id&lt;/span&gt;.&lt;span style=&#34;color:#bbb&#34;&gt;toInteger&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;def&lt;/span&gt; curParamVal = build.&lt;span style=&#34;color:#bbb&#34;&gt;allActions&lt;/span&gt;.&lt;span style=&#34;color:#bbb&#34;&gt;find&lt;/span&gt;{it &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;in&lt;/span&gt; ParametersAction}?.&lt;span style=&#34;color:#bbb&#34;&gt;getParameter&lt;/span&gt;(paramKey)?.&lt;span style=&#34;color:#bbb&#34;&gt;value&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;// optionally filter out builds
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; (curParamVal == param_val) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; (cbuildID == buildID) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                curBuild = build
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            } &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; (build.&lt;span style=&#34;color:#bbb&#34;&gt;isBuilding&lt;/span&gt;() &amp;amp;&amp;amp; cbuildID &amp;lt; highestRID) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                build.&lt;span style=&#34;color:#bbb&#34;&gt;doKill&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                echo &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;terminated build #${cbuildID}&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;def&lt;/span&gt; cause = &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;Aborted by #${buildID} for being an old build&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;// + for paramVal
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;&lt;/span&gt;                &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;// add to the log of another build
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;&lt;/span&gt;                build.&lt;span style=&#34;color:#bbb&#34;&gt;getListener&lt;/span&gt;().&lt;span style=&#34;color:#bbb&#34;&gt;getLogger&lt;/span&gt;().&lt;span style=&#34;color:#bbb&#34;&gt;println&lt;/span&gt;(cause)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;// The below will cause zombie jobs and so was abandoned
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;&lt;/span&gt;                &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;// def r = new ArrayList&amp;lt;&amp;gt;(Arrays.asList({ cause as String } as CauseOfInterruption))
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;&lt;/span&gt;                &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;// _build.addAction(new InterruptedBuildAction(r))
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;&lt;/span&gt;            } &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; (cbuildID &amp;gt; highestRID) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;// update highest running ID
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;&lt;/span&gt;                highestRID = cbuildID
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        build = build.&lt;span style=&#34;color:#bbb&#34;&gt;getPreviousBuild&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; (highestRID &amp;gt; buildID) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        println &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;Terminating self since newer build was found&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;def&lt;/span&gt; selfAbortCause = &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;Aborting due to the presence of a newer build&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        curBuild.&lt;span style=&#34;color:#bbb&#34;&gt;doKill&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;getting-build-log&#34; &gt;Getting Build Log
&lt;span&gt;
    &lt;a href=&#34;#getting-build-log&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#447fcf;text-decoration:underline&#34;&gt;jenkins.model.Jenkins&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ffa500&#34;&gt;@NonCPS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#447fcf&#34;&gt;getLog&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;def&lt;/span&gt; job = Jenkins.&lt;span style=&#34;color:#bbb&#34;&gt;instanceOrNull&lt;/span&gt;.&lt;span style=&#34;color:#bbb&#34;&gt;getItem&lt;/span&gt;(JOB_NAME)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;def&lt;/span&gt; build = job.&lt;span style=&#34;color:#bbb&#34;&gt;getBuildByNumber&lt;/span&gt;(Integer.&lt;span style=&#34;color:#bbb&#34;&gt;parseInt&lt;/span&gt;(BUILD_NUMBER))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;return&lt;/span&gt; build.&lt;span style=&#34;color:#bbb&#34;&gt;logFile&lt;/span&gt;.&lt;span style=&#34;color:#bbb&#34;&gt;text&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Bash Quickstart</title>
      <link>https://blog.elijahlopez.ca/posts/bash-quickstart/</link>
      <pubDate>Wed, 26 Jan 2022 12:38:14 -0500</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/bash-quickstart/</guid>
      <description>&lt;h2 id=&#34;strings&#34; &gt;Strings
&lt;span&gt;
    &lt;a href=&#34;#strings&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40ffff&#34;&gt;$text&lt;/span&gt;=&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;hello&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40ffff&#34;&gt;$ext&lt;/span&gt;=&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;txt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40ffff&#34;&gt;str_concat&lt;/span&gt;=&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#40ffff&#34;&gt;$text&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#40ffff&#34;&gt;$ext&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40ffff&#34;&gt;str_concat2&lt;/span&gt;=&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#40ffff&#34;&gt;$text&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt; .&lt;/span&gt;&lt;span style=&#34;color:#40ffff&#34;&gt;$ext&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# lesson: always use [[ ]] with string variables to avoid runtime errors&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; [[ &lt;span style=&#34;color:#40ffff&#34;&gt;$str_concat&lt;/span&gt; = &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;hello .txt&amp;#34;&lt;/span&gt; ]]; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;preferred method&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# you can also use double quotes, but it&amp;#39;s not as clean imo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; [ &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#40ffff&#34;&gt;$str_concat&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&lt;/span&gt; = &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;hello .txt&amp;#34;&lt;/span&gt; ]; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;option B, use double quotes&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# this will result in too many arguments error&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# if [ $str_concat2 = &amp;#34;hello .txt&amp;#34; ]; then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;#     echo &amp;#34;not possible&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# this works only if the variable does not contain spaces&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; [ &lt;span style=&#34;color:#40ffff&#34;&gt;$str_concat&lt;/span&gt; = &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;hello.txt&amp;#34;&lt;/span&gt; ]; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;works&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;loops-and-more-conditionals&#34; &gt;Loops and More Conditionals
&lt;span&gt;
    &lt;a href=&#34;#loops-and-more-conditionals&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# for loop examples&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;for&lt;/span&gt; var in &lt;span style=&#34;color:#3677a9&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#3677a9&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#3677a9&#34;&gt;3&lt;/span&gt; str1 str2 str3 &lt;span style=&#34;color:#40ffff&#34;&gt;$flag1&lt;/span&gt; &lt;span style=&#34;color:#3677a9&#34;&gt;9&lt;/span&gt; 10; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#40ffff&#34;&gt;$var&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# range&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;for&lt;/span&gt; var in {1..10}; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#40ffff&#34;&gt;$var&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# for loop as while loop&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# some math here too&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40ffff&#34;&gt;counter&lt;/span&gt;=&lt;span style=&#34;color:#3677a9&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;while&lt;/span&gt; [ &lt;span style=&#34;color:#40ffff&#34;&gt;$counter&lt;/span&gt; -lt &lt;span style=&#34;color:#3677a9&#34;&gt;10&lt;/span&gt; ]; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; [ &lt;span style=&#34;color:#40ffff&#34;&gt;$counter&lt;/span&gt; -eq &lt;span style=&#34;color:#3677a9&#34;&gt;0&lt;/span&gt; ]; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ((counter++))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;counter+2=&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;$((&lt;/span&gt;++counter&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;elif&lt;/span&gt; [ &lt;span style=&#34;color:#40ffff&#34;&gt;$counter&lt;/span&gt; -lt &lt;span style=&#34;color:#3677a9&#34;&gt;5&lt;/span&gt; ]; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;less than 5&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;elif&lt;/span&gt; [ &lt;span style=&#34;color:#40ffff&#34;&gt;$counter&lt;/span&gt; -gt &lt;span style=&#34;color:#3677a9&#34;&gt;5&lt;/span&gt; ]; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#24909d&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;greater than 5&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>How to Fill out W-8 BEN Form in Canada</title>
      <link>https://blog.elijahlopez.ca/posts/filling-out-w-8ben-form-canada/</link>
      <pubDate>Tue, 04 Jan 2022 13:37:18 -0500</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/filling-out-w-8ben-form-canada/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.irs.gov/pub/irs-pdf/fw8ben.pdf&#34;&gt;Download the form.&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;blank-lines&#34; &gt;Blank Lines
&lt;span&gt;
    &lt;a href=&#34;#blank-lines&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;lines 5, 6b, 7, 10&lt;/p&gt;
&lt;h2 id=&#34;part-1&#34; &gt;Part 1
&lt;span&gt;
    &lt;a href=&#34;#part-1&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Line 1: First and Last name&lt;/li&gt;
&lt;li&gt;Line 2: Canada&lt;/li&gt;
&lt;li&gt;Line 3: Address&lt;/li&gt;
&lt;li&gt;Line 4: Address if differs&lt;/li&gt;
&lt;li&gt;Line 6a: SIN&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;part-2&#34; &gt;Part 2
&lt;span&gt;
    &lt;a href=&#34;#part-2&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Line 9: Canada&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;part-3&#34; &gt;Part 3
&lt;span&gt;
    &lt;a href=&#34;#part-3&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Check the box&lt;/li&gt;
&lt;li&gt;Sign&lt;/li&gt;
&lt;li&gt;Your name&lt;/li&gt;
&lt;li&gt;Today&amp;rsquo;s date&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Bye Medium, Hello Hugo &#43; GitHub Pages</title>
      <link>https://blog.elijahlopez.ca/posts/bye-medium-hello-hugo/</link>
      <pubDate>Sat, 01 Jan 2022 12:20:08 -0500</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/bye-medium-hello-hugo/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve officially moved from blogging on Medium to my own &lt;a href=&#34;https://blog.elijahlopez.ca&#34;&gt;GitHub page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Some of the most frustrating things with Medium are: clunky comment UI, click-bait recommendations, no way to download my own articles, slower than YouTube interface, and to top it off, no dark theme.&lt;/p&gt;
&lt;p&gt;The two things Medium does arguably well is being a blogging network and having a writing UI. The writing UI is a simpler version of Quill.js, but since I can write in Markdown,  the only good point is that the editor is in a Sans-Serif font and not a mono-space font 😂.&lt;/p&gt;
&lt;p&gt;A couple weeks ago, I realized that online content is not forever as everybody says. Only the online content that was archived lasts forever. Chances are, you and I are not going to have our content archived by a third party for free, easily, and knowingly available. The conclusion then is to have at least two backups.&lt;/p&gt;
&lt;p&gt;That lead me to downloading all the files from my Google Drive. Now my Google Drive is almost empty, and all my files are available on my laptop, my PC, and on a cloud storage of my choice.&lt;/p&gt;
&lt;p&gt;When it came to archiving my Medium content, that&amp;rsquo;s when I realized that there was no option to download. I had to copy paste each one of my articles! Awesome!&lt;/p&gt;
&lt;p&gt;I haven&amp;rsquo;t ported many of the articles over to GitHub pages, mainly because I don&amp;rsquo;t want to deal with the formatting, but I made this post for another reason. I made this post to inform other people that &amp;ldquo;self&amp;rdquo;-hosting is a viable option, and I&amp;rsquo;ve made it work well.&lt;/p&gt;
&lt;p&gt;You can read how I made this blogging site using Hugo and hosted on GitHub pages, &lt;a href=&#34;https://blog.elijahlopez.ca/posts/hugo-tutorial/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why 64-bit Programs are Better Than 32-bit</title>
      <link>https://blog.elijahlopez.ca/posts/64bit-is-better-than-32bit/</link>
      <pubDate>Sat, 25 Dec 2021 10:30:44 -0600</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/64bit-is-better-than-32bit/</guid>
      <description>&lt;p&gt;This article is from a developer point of view, not a user point of view.
The audience of this article are beginner to intermediate developers and is introductory, not argumenatiative.
Do not expect to be convinced if you are pro 32-bit software because Windows decided to support 32-bit software.
From a user point of view, 64-bit computers and software is better because then you can have 100 browser tabs open&lt;/p&gt;
&lt;h3 id=&#34;1-no-4gib-memory-limit&#34; &gt;1. No 4GiB Memory Limit
&lt;span&gt;
    &lt;a href=&#34;#1-no-4gib-memory-limit&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;If your application needs more than 4GiB memory, then you definitely need a 32-bit application.
And if you don&amp;rsquo;t need more than 4GiB of memory, you might not want to develop 32-bit development habits because if you do need 4GB in the future, its better for your habits to already work out, that it is to keep in the back of your mind that you need to switch to targetting 64-bit.&lt;/p&gt;
&lt;h3 id=&#34;2-64-bit-users-get-64-bit-applications&#34; &gt;2. 64-bit Users get 64-bit Applications
&lt;span&gt;
    &lt;a href=&#34;#2-64-bit-users-get-64-bit-applications&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;By shipping only 64-bit distrubtions, and only one legacy 32-bit application, most users won&amp;rsquo;t be recommended the wrong architecture.
For example, VLC recommended their 32-bit distribution on my 64-bit computer! Some of my video files are around 20GB so of course 64-bit would be best.&lt;/p&gt;
&lt;h3 id=&#34;3-linux-seamless-installation-for-users&#34; &gt;3. Linux: Seamless Installation for Users
&lt;span&gt;
    &lt;a href=&#34;#3-linux-seamless-installation-for-users&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;If you ship 32-bit Linux applications, chances are that your users will now need to install the necessary 32-bit libraries.
Most systems are 64-bit and 32-bit users can continue using legacy software with their package manager.&lt;/p&gt;
&lt;h3 id=&#34;4-64-bit-is-the-default&#34; &gt;4. 64-bit is the Default
&lt;span&gt;
    &lt;a href=&#34;#4-64-bit-is-the-default&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;In Visual Studio 2022, the default target architecture is 64-bit. It used to be 32-bit.
Most users run 64-bit systems, so the default compiler or intrepetor you install, like Python, will also be 64-bit in 2021.&lt;/p&gt;
&lt;h3 id=&#34;5-future-proof--32-bit-compilers&#34; &gt;5. Future Proof &amp;amp; 32-bit Compilers
&lt;span&gt;
    &lt;a href=&#34;#5-future-proof--32-bit-compilers&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;64-bit is objectively more future proof than 32-bit. Rust already has a 128-bit primitive, so 32-bit will definitely be left in the dust if things shift even further. We&amp;rsquo;ve already seen Windows 10 go from &amp;ldquo;last Windows&amp;rdquo; to out of support in 2024. When starting new projects, why sacrifice the stability of your applicaiton in the future, just to support the past?&lt;/p&gt;
&lt;p&gt;My personal grife is a Python project. Over two years ago, I made a music player for Windows, &lt;a href=&#34;https://github.com/elibroftw/music-caster/&#34;&gt;Music Caster&lt;/a&gt;. The relevant details are Python 3.7 64-bit, PyInstaller, and a fork of portaudio that only compiled for 64-bit.
After some time, a user asked me to support 32-bit. Me being naive at the time agreed because I fell prey to the 32-bit supports more users reasoning.&lt;/p&gt;
&lt;p&gt;To support 32-bit applications, I had to uninsatll my existing instllation and then install the 32-bit version of Python. I went with Python 3.8 since Python 3.9 hadn&amp;rsquo;t come out yet. I wish it was that simple, but there&amp;rsquo;s more. I had to figure out how to compile the 32-bit version of the portaudio library. Then another year later, I&amp;rsquo;ve decided to future proof my application, so the journey back from 32-bit Python was just as hard.&lt;/p&gt;
&lt;p&gt;Lesson of the day is to never use a 3.X.0 Python distribution or learn Rust while you are using Python.&lt;/p&gt;
&lt;h3 id=&#34;6-no-emulation&#34; &gt;6. No Emulation
&lt;span&gt;
    &lt;a href=&#34;#6-no-emulation&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;The most common pro 32-bit software argument is also the most ironic. The entire reason emulation exists, that is 32-bit software running on 64-bit Windows,
is Windows supporting legacy software. Creating 32-bit software when 64-bit is possible, is simply ignorant as to why 64-bit exits.&lt;/p&gt;
&lt;p&gt;At the cost of not supporting at most 2% of Windows users, your application won&amp;rsquo;t have to be emulated.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;WOW64 is the x86 emulator that allows 32-bit Windows-based applications to run seamlessly on 64-bit Windows. &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;64-bit operations are native in 64-bit systems and don&amp;rsquo;t require multiple 32-bit calls
In the end, performance is largely based on optimization, and not so much architecture target, so that&amp;rsquo;s why this is the last section.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;conclusion&#34; &gt;Conclusion
&lt;span&gt;
    &lt;a href=&#34;#conclusion&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;I know this article is not a 100% high quality article, but this article isn&amp;rsquo;t argumentative, it&amp;rsquo;s just a run through.&lt;/p&gt;
&lt;p&gt;In conclusion, it&amp;rsquo;s better to distribute 32-bit and 64-bit applications than just 32-bit applications.
But don&amp;rsquo;t be like VLC, and recommend 64-bit computers to install the 32-bit version!&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/windows/win32/winprog64/running-32-bit-applications&#34;&gt;https://docs.microsoft.com/en-us/windows/win32/winprog64/running-32-bit-applications&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Installing Libraries for C&#43;&#43; with Vcpkg and CMake</title>
      <link>https://blog.elijahlopez.ca/posts/vcpkg-cmake-tutorial/</link>
      <pubDate>Sun, 19 Dec 2021 19:51:55 -0500</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/vcpkg-cmake-tutorial/</guid>
      <description>
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/FeBzSYiWkEU&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&#34;prerequisties&#34; &gt;Prerequisties
&lt;span&gt;
    &lt;a href=&#34;#prerequisties&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;An IDE
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/download&#34;&gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://visualstudio.microsoft.com/downloads/&#34;&gt;Visual Studio 2022&lt;/a&gt; if on Windows for the compiler&lt;/li&gt;
&lt;li&gt;Any IDE that has pretty good CMake integration&lt;/li&gt;
&lt;li&gt;Otherwise, you will need to use &lt;code&gt;cmake&lt;/code&gt; yourself&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;A Compiler
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://visualstudio.microsoft.com/downloads/&#34;&gt;Visual Studio 2022&lt;/a&gt; if on Windows&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gcc&lt;/code&gt; (Linux)&lt;/li&gt;
&lt;li&gt;MSYS2/Mingw &lt;code&gt;gcc&lt;/code&gt; (Windows)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clang&lt;/code&gt; (MacOS?)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;installing-cmake&#34; &gt;Installing CMake
&lt;span&gt;
    &lt;a href=&#34;#installing-cmake&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;You will need &lt;a href=&#34;https://cmake.org/download/&#34;&gt;CMake 3.22+&lt;/a&gt; in order to use the Visual Studio 2022 compiler through VSCode.
The installer does most of the work, so you won&amp;rsquo;t have to manually add &lt;code&gt;cmake&lt;/code&gt; to PATH.&lt;/p&gt;
&lt;p&gt;In VSCode, you will need to install the &amp;ldquo;C/C++ Extension&amp;rdquo; and the &amp;ldquo;CMake Tools&amp;rdquo; extensions.&lt;/p&gt;
&lt;h3 id=&#34;installing-vcpkg&#34; &gt;Installing Vcpkg
&lt;span&gt;
    &lt;a href=&#34;#installing-vcpkg&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;Clone &lt;a href=&#34;https://github.com/microsoft/vcpkg&#34;&gt;vcpkg&lt;/a&gt; into a directory that won&amp;rsquo;t bother you in your day to day life
&lt;ul&gt;
&lt;li&gt;For me, that would be &lt;code&gt;C:\Users\maste\Documents\GitHub\vcpkg&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;git clone https://github.com/microsoft/vcpkg.git&lt;/code&gt; or GitHub desktop&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Run the Vcpkg bootstrap script
&lt;ul&gt;
&lt;li&gt;Windows: &lt;code&gt;&amp;quot;./bootstrap-vcpkg&amp;quot; -disableMetrics&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Unix: &lt;code&gt;./bootstrap-vcpkg.sh -disableMetrics&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Modify environment variables
&lt;ul&gt;
&lt;li&gt;Add the vcpkg cloned directory to PATH
&lt;ul&gt;
&lt;li&gt;On Windows, use Windows search for &amp;ldquo;envir&amp;rdquo;&lt;/li&gt;
&lt;li&gt;On Linux, open your &lt;code&gt;.bashrc&lt;/code&gt; file and add &lt;code&gt;export PATH=$PATH:~/vcpkg&lt;/code&gt; to your &lt;code&gt;.bashrc&lt;/code&gt; file&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Set &lt;code&gt;VCPKG_DEFAULT_TRIPLET&lt;/code&gt; to &lt;code&gt;x64-windows&lt;/code&gt; on Windows, or your computers triplet
&lt;ul&gt;
&lt;li&gt;Valid architectures are: x86, x64, arm, arm64 and wasm32.&lt;/li&gt;
&lt;li&gt;Valid OS names are &lt;code&gt;&#39;windows&#39;, &#39;linux&#39;, &#39;macos&#39;&lt;/code&gt; (I&amp;rsquo;m unsure about the macos part)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Enable vcpkg packages to be used in VS/MSBuild:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;vcpkg integrate install&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;copy the path to vcpkg.cmake for use later&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You can now install packages using &lt;code&gt;vcpkg install &amp;lt;lib&amp;gt;&lt;/code&gt; and search for them using &lt;code&gt;vcpkg search &amp;lt;lib&amp;gt;&lt;/code&gt;.
In the next section, we&amp;rsquo;ll be integrating &lt;code&gt;vcpkg&lt;/code&gt; within a CMake project.&lt;/p&gt;
&lt;h2 id=&#34;integrating-vcpkg-into-a-new-cmake-project&#34; &gt;Integrating Vcpkg into a new CMake Project
&lt;span&gt;
    &lt;a href=&#34;#integrating-vcpkg-into-a-new-cmake-project&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;In this section we&amp;rsquo;ll be creating a CMake C++ project that will make an HTTP request using the &lt;code&gt;cpr&lt;/code&gt; library.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create a CMake project in Visual Studio or VSCode&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;VS: open visual studio and click &amp;ldquo;Create a new project&amp;rdquo; and search for &amp;ldquo;CMake Project&amp;rdquo;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;VSCode: open an empty folder in VSCode and use &amp;ldquo;CMake: Quick Start&amp;rdquo; from the command palette (Ctrl + Shift + P)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In &lt;code&gt;CMakeLists.txt&lt;/code&gt;, add the following helper target &amp;ldquo;run&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmake&#34; data-lang=&#34;cmake&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#24909d&#34;&gt;add_custom_target&lt;/span&gt;(&lt;span style=&#34;color:#ed9d13&#34;&gt;run&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#ed9d13&#34;&gt;COMMAND&lt;/span&gt; ${&lt;span style=&#34;color:#40ffff&#34;&gt;PROJECT_NAME&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#ed9d13&#34;&gt;DEPENDS&lt;/span&gt; ${&lt;span style=&#34;color:#40ffff&#34;&gt;PROJECT_NAME&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#ed9d13&#34;&gt;WORKING_DIRECTORY&lt;/span&gt; ${&lt;span style=&#34;color:#40ffff&#34;&gt;CMAKE_PROJECT_DIR&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  )&lt;span style=&#34;color:#a61717;background-color:#e3d2d2&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set the CMake toolchain file to the path to &lt;code&gt;vcpkg.cmake&lt;/code&gt; (from step 4)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Visual Studio: Press manage configurations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Visual Studio Code: Add the following to your &lt;code&gt;settings.json&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;cmake.configureSettings&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a61717;background-color:#e3d2d2&#34;&gt;:&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;&amp;#34;CMAKE_TOOLCHAIN_FILE&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;...vcpkg.cmake&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If using &lt;code&gt;cmake&lt;/code&gt; from the command line, add &lt;code&gt;-DCMAKE_TOOLCHAIN_FILE=C:/Users/maste/Documents/GitHub/vcpkg/scripts/buildsystems/vcpkg.cmake&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a &lt;code&gt;vcpkg&lt;/code&gt; response file to maintain portability&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create &lt;code&gt;vcpkg_rf.txt&lt;/code&gt; in the root directory with the contents:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;install
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cpr
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install dependencies using &lt;code&gt;vcpkg &amp;quot;@vcpkg_rf.txt&amp;quot; [optional arguments]&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For each library installed, you&amp;rsquo;ll see instructions for what to add or modify in your &lt;code&gt;CMakeLists.txt&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For &lt;code&gt;cpr&lt;/code&gt;, that would be&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmake&#34; data-lang=&#34;cmake&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#24909d&#34;&gt;find_package&lt;/span&gt;(&lt;span style=&#34;color:#ed9d13&#34;&gt;cpr&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;CONFIG&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;REQUIRED&lt;/span&gt;)&lt;span style=&#34;color:#a61717;background-color:#e3d2d2&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a61717;background-color:#e3d2d2&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#24909d&#34;&gt;target_link_libraries&lt;/span&gt;(&lt;span style=&#34;color:#ed9d13&#34;&gt;PROJECT_NAME&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;PRIVATE&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;cpr::cpr&lt;/span&gt;)&lt;span style=&#34;color:#a61717;background-color:#e3d2d2&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;For more than one library, you only need one &lt;code&gt;target_link_libraries&lt;/code&gt; rather than one for each additional library&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now let&amp;rsquo;s code. In the main C++ file, type the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cd2828;font-weight:bold&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#cd2828;font-weight:bold&#34;&gt;&amp;lt;cpr/cpr.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#cd2828;font-weight:bold&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cd2828;font-weight:bold&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#cd2828;font-weight:bold&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#cd2828;font-weight:bold&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cd2828;font-weight:bold&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#447fcf&#34;&gt;main&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cpr::Response r = cpr::Get(cpr::Url{ &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;https://api.github.com/repos/whoshuu/cpr/contributors&amp;#34;&lt;/span&gt; },
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        cpr::Authentication{ &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;pass&amp;#34;&lt;/span&gt; },
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        cpr::Parameters{ {&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;anon&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;}, {&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;key&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;} });
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    r.status_code;                  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;// 200
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;&lt;/span&gt;    r.header[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;content-type&amp;#34;&lt;/span&gt;];       &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;// application/json; charset=utf-8
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;&lt;/span&gt;    r.text;                         &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;// JSON text string
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;&lt;/span&gt;    std::cout &amp;lt;&amp;lt; r.text &amp;lt;&amp;lt; std::endl;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#3677a9&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Let&amp;rsquo;s test our build&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If something doesn&amp;rsquo;t work, you may need to configure/delete CMake cache using your IDE or doing it manually&lt;/li&gt;
&lt;li&gt;In Visual Studio, just click the green play button&lt;/li&gt;
&lt;li&gt;In Visual Studio Code, you can use the &amp;ldquo;Build: Target&amp;rdquo; and select &amp;ldquo;run&amp;rdquo; from the command palette&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If the steps didn&amp;rsquo;t work for you, you can follow &lt;a href=&#34;https://youtu.be/FeBzSYiWkEU&#34;&gt;this tutorial video&lt;/a&gt;.
The video has an example of opening a project in VSCode that was made in Visual Studio.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sum of Geometric Sequences</title>
      <link>https://blog.elijahlopez.ca/posts/sum-of-geometric-seq/</link>
      <pubDate>Sat, 18 Dec 2021 23:28:15 -0500</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/sum-of-geometric-seq/</guid>
      <description>&lt;!-- markdownlint-disable-file MD033 --&gt;
&lt;p&gt;Here are two useful formulas that are presented in a pretty way.
Thank you GitHub for the math LaTeX rendering.&lt;/p&gt;
&lt;h2 id=&#34;sum-of-a-finite-geometric-series&#34; &gt;Sum of a Finite Geometric Series
&lt;span&gt;
    &lt;a href=&#34;#sum-of-a-finite-geometric-series&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;img class=equation-tall src=&#34;https://render.githubusercontent.com/render/math?math=S_n=\sum_{i=1}^{n}a_ir^{i-1}=a_1\frac{r^n-1}{r-1}&#34;&gt;
&lt;img class=equation-tall src=&#34;https://render.githubusercontent.com/render/math?math=S_n=a_1\frac{r^n-1}{r-1}=a_1\frac{1-r^n}{1-r}&#34;&gt;
&lt;h2 id=&#34;sum-of-an-infinite-geometric-series&#34; &gt;Sum of an Infinite Geometric Series
&lt;span&gt;
    &lt;a href=&#34;#sum-of-an-infinite-geometric-series&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;img class=equation-tall src=&#34;https://render.githubusercontent.com/render/math?math=S=\sum_{i=0}^{\infty}a_ir^i=\frac{a_1}{1-r}&#34;&gt;
</description>
    </item>
    
    <item>
      <title>Creating a Blog With GitHub Pages and Hugo</title>
      <link>https://blog.elijahlopez.ca/posts/hugo-tutorial/</link>
      <pubDate>Fri, 17 Dec 2021 22:18:47 -0500</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/hugo-tutorial/</guid>
      <description>&lt;p&gt;I created this blog using Hugo and host it on GitHub Pages. In this tutorial, I&amp;rsquo;ll teach you to do the same.
The resources I had used to create a working blog left out some important details that I will include in my tutorial.
I&amp;rsquo;ve also done the brunt of the work to perfect the theme and workflow.
If you are like me, you can follow the tutorial that &lt;a href=&#34;#forking-my-site&#34;&gt;forks my site&lt;/a&gt; rather than making a blog site &lt;a href=&#34;#from-scratch&#34;&gt;from scratch&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34; &gt;Prerequisites
&lt;span&gt;
    &lt;a href=&#34;#prerequisites&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/getting-started/installing#binary-cross-platform&#34;&gt;Hugo&lt;/a&gt; is &amp;ldquo;installed&amp;rdquo; and can be used (test &lt;code&gt;hugo version&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;git&lt;/a&gt; is installed and can be used (test &lt;code&gt;git version&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;If either test fails (i.e. not on PATH), learn from &lt;a href=&#34;https://duckduckgo.com/?t=ffab&amp;amp;q=how+to+add+to+path&amp;amp;ia=web&#34;&gt;how to add to PATH&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;forking-my-blog&#34; &gt;Forking My Blog
&lt;span&gt;
    &lt;a href=&#34;#forking-my-blog&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Web UI fork &lt;a href=&#34;https://github.com/elibroftw/blog.elijahlopez.ca&#34;&gt;blog.elijahlopez.ca&lt;/a&gt; with repository name &lt;code&gt;blog&lt;/code&gt; and use your own description&lt;/li&gt;
&lt;li&gt;Go to &lt;a href=&#34;https://github.com/USERNAME/blog/settings/pages&#34;&gt;https://github.com/USERNAME/blog/settings/pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Select the source as your defalt branch name (e.g. master, main)&lt;/li&gt;
&lt;li&gt;For folder select &amp;ldquo;/docs&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Click save&lt;/li&gt;
&lt;li&gt;Add a custom domain if you want later since it takes 5+ minutes&lt;/li&gt;
&lt;li&gt;Edit the About section in &lt;a href=&#34;https://github.com/USERNAME/blog/&#34;&gt;https://github.com/USERNAME/blog/&lt;/a&gt; and change the website to &lt;code&gt;https://USERNAME.github.io&lt;/code&gt; or a domain&lt;/li&gt;
&lt;li&gt;Clone your repo using &lt;code&gt;git clone --recurse-submodules -j8 https://github.com/USERNAME/blog.git&lt;/code&gt; or GitHub desktop&lt;/li&gt;
&lt;li&gt;To enable the &lt;code&gt;pre-commit&lt;/code&gt; hook, use the command &lt;code&gt;git config core.hookspath .githooks&lt;/code&gt; in your repo directory
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;pre-commit&lt;/code&gt; hook will auto-update themes and build the site using &lt;code&gt;hugo -d docs&lt;/code&gt; before commiting&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Delete &lt;code&gt;content/posts&lt;/code&gt; and &lt;code&gt;static/images&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Edit &lt;code&gt;config.yaml&lt;/code&gt; and replace my information with yours (set baseUrl to the one shown by GitHub)&lt;/li&gt;
&lt;li&gt;You can remove # to enable certain features (the about section requires uses &lt;code&gt;content/about.md&lt;/code&gt; and &lt;code&gt;content/about-subpage.md&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Read &lt;code&gt;content/hugo-guide.md&lt;/code&gt; in your new repo to help you write, edit, and publish posts&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;from-scratch-outdated&#34; &gt;From Scratch (Outdated)
&lt;span&gt;
    &lt;a href=&#34;#from-scratch-outdated&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Create a &lt;code&gt;USERNAME.github.io&lt;/code&gt; repository in GitHub&lt;/li&gt;
&lt;li&gt;Clone the repository&lt;/li&gt;
&lt;li&gt;Get the GitHub link for a &lt;a href=&#34;https://themes.gohugo.io/&#34;&gt;theme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add the theme using &lt;code&gt;git submodule add GitHubURL.git themes/themeName&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Read the theme instructions for basic configuration (i.e. &lt;code&gt;config.yaml&lt;/code&gt; or &lt;code&gt;config.toml&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Edit &lt;code&gt;config.yaml&lt;/code&gt; or &lt;code&gt;config.toml&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;hugo new content/posts/POST.md&lt;/code&gt; to create a new post&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;hugo serve -D&lt;/code&gt; when drafting the post and see your changes at &lt;a href=&#34;http://localhost:1313/&#34;&gt;http://localhost:1313/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Set &lt;code&gt;draft: false&lt;/code&gt; after you are done drafting a post&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;hugo -d docs&lt;/code&gt; when you are ready to push your website&lt;/li&gt;
&lt;li&gt;Commit and push to origin (GitHub)&lt;/li&gt;
&lt;li&gt;To update themes, use &lt;code&gt;git submodule update --remote --merge&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;You can use pre-commit hooks to automate steps 10 and 12 before every commit&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;other-resources&#34; &gt;Other Resources
&lt;span&gt;
    &lt;a href=&#34;#other-resources&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/getting-started/quick-start/&#34;&gt;https://gohugo.io/getting-started/quick-start/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://retrolog.io/blog/creating-a-hugo-theme-from-scratch/&#34;&gt;https://retrolog.io/blog/creating-a-hugo-theme-from-scratch/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://levelup.gitconnected.com/build-a-personal-website-with-github-pages-and-hugo-6c68592204c7&#34;&gt;https://levelup.gitconnected.com/build-a-personal-website-with-github-pages-and-hugo-6c68592204c7&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>UW WLU Double Degree</title>
      <link>https://blog.elijahlopez.ca/posts/uw-wlu-double-degree/</link>
      <pubDate>Fri, 17 Dec 2021 21:36:13 -0500</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/uw-wlu-double-degree/</guid>
      <description>&lt;p&gt;I started my double degree BCS and BBA journey in Fall 2019.
Here are some things you should know about the program plus the environment.&lt;/p&gt;
&lt;h2 id=&#34;homeschool-differences&#34; &gt;Homeschool Differences
&lt;span&gt;
    &lt;a href=&#34;#homeschool-differences&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;h3 id=&#34;scholarships&#34; &gt;Scholarships
&lt;span&gt;
    &lt;a href=&#34;#scholarships&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;WLU has higher scholarship values than UW. The amount changes each year. For example in my year, WLU provided C$5,000 for first year but in 2021, that value was less than or equal to C$4,000. I&amp;rsquo;m not entirely sure because I forgot what my friend said they received.&lt;/p&gt;
&lt;h3 id=&#34;tuition&#34; &gt;Tuition
&lt;span&gt;
    &lt;a href=&#34;#tuition&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Quest and Loris are both accessible but,&lt;/li&gt;
&lt;li&gt;UW-based students will need to use Quest to pay &amp;amp; view their tuition bill&lt;/li&gt;
&lt;li&gt;WLU-based students will need to use Loris to pay &amp;amp; view their tuition bill&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;first-year-residences&#34; &gt;First Year Residences
&lt;span&gt;
    &lt;a href=&#34;#first-year-residences&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;You go through your home school to get a residence&lt;/li&gt;
&lt;li&gt;Both typically have dorm style or apartment style&lt;/li&gt;
&lt;li&gt;Dorm = food plan ($$$) and apartment = food stamps (flex dollars)
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://students.wlu.ca/registration-and-finances/onecard/where-to-use-it.html&#34;&gt;Flex dollars&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;GRT (public transportation) pass: UW students use watcard, WLU students uses onecard
&lt;ul&gt;
&lt;li&gt;Press the respective card on the reader to &amp;ldquo;pay&amp;rdquo; for the bus&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Orientation
&lt;ul&gt;
&lt;li&gt;Laurier
&lt;ul&gt;
&lt;li&gt;Has some over-rated 4 teams event during O-week. I didn&amp;rsquo;t find it interesting. It&amp;rsquo;s easier to befriend people who live near you.&lt;/li&gt;
&lt;li&gt;There was a residence floor meeting that helps you break the ice with people on your floor. At least for apartment style&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Waterloo
&lt;ul&gt;
&lt;li&gt;Math students got pink ties 😂&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Co-Op
&lt;ul&gt;
&lt;li&gt;UW students use WaterlooWorks, WLU students use Navigator&lt;/li&gt;
&lt;li&gt;UW students have a co-op term for the first summer term, WLU students get a summer break (interpret that however you wish to)&lt;/li&gt;
&lt;li&gt;WLU students don&amp;rsquo;t have to take the infamous Professional Development (PD) that UW students have to take. Both involve at least one work term report.&lt;/li&gt;
&lt;li&gt;Navigator vs. WaterlooWorks
&lt;ul&gt;
&lt;li&gt;Navigator has more business related jobs and the software jobs also are also from these typical businesses. e.g., RBC, TD, Scotiabank, EY, Deloitte, etc.&lt;/li&gt;
&lt;li&gt;WaterlooWorks has more tech-related jobs&lt;/li&gt;
&lt;li&gt;I&amp;rsquo;m unsure if WaterlooWorks has the same accounting, legal, analyst jobs that Navigator has&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;preparing-for-university&#34; &gt;Preparing for University?
&lt;span&gt;
    &lt;a href=&#34;#preparing-for-university&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;I did not prepare at all. I spent my time lifeguarding as well as working on my &lt;a href=&#34;https://github.com/elibroftw/music-caster&#34;&gt;music player, Music Caster&lt;/a&gt;.
I will share some advice.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The first two weeks do not represent the semester at all&lt;/li&gt;
&lt;li&gt;Brush up on first principles of calculus. Limits are integral (see what I did there) in Calculus 1 (MATH 137)&lt;/li&gt;
&lt;li&gt;Be ready to learn a lot of new concepts in &amp;ldquo;Algebra&amp;rdquo; (MATH 135)
&lt;ul&gt;
&lt;li&gt;WLU-based students should pay more attention to this course, as I noticed more of them struggle with the math courses than their UW counterparts
&lt;ul&gt;
&lt;li&gt;This does not mean imply UW students are smarter than WLU students&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Be ready to wake up before 8 AM for the 9:30 AM classes
&lt;ul&gt;
&lt;li&gt;Take into account transporation time&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;For BU 111, install the &lt;a href=&#34;https://python.org/download&#34;&gt;Python Programming Language&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;It&amp;rsquo;s superior to the native calculator application [operators: +, -, /, // (integer divide), * (multiply)]&lt;/li&gt;
&lt;li&gt;Take a look at &lt;a href=&#34;https://github.com/elibroftw/number-crunching-automation&#34;&gt;Number Crunching Automation&lt;/a&gt; for some useful functions&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Enjoy your summer, seriously&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;moving-to-campus&#34; &gt;Moving to Campus
&lt;span&gt;
    &lt;a href=&#34;#moving-to-campus&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;If WLU based, you&amp;rsquo;ll first be at Lazaridus Hall.
&lt;ul&gt;
&lt;li&gt;Pick up residence keys/pass&lt;/li&gt;
&lt;li&gt;Pick up orientation kit&lt;/li&gt;
&lt;li&gt;If you took a picture of yourself for the Onecard, pick that up here too
&lt;ul&gt;
&lt;li&gt;If you forget, you can go to that Starbucks area with the seats and you&amp;rsquo;ll see a photobooth that&amp;rsquo;ll have your card&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;uw-advanced-courses&#34; &gt;UW Advanced Courses
&lt;span&gt;
    &lt;a href=&#34;#uw-advanced-courses&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;The default first year math courses (MATH 137, MATH 135, MATH 136, MATH 138) are already harder than most Canadian Universities&amp;rsquo; first year math courses&lt;/li&gt;
&lt;li&gt;Computer Science students can take 12X math courses to have an easier time, but it only hurts them in the long run (easy = less stimulating)&lt;/li&gt;
&lt;li&gt;Advanced courses are for the highest academic achievers who are ready to put in the time and effort
&lt;ul&gt;
&lt;li&gt;This is for people who got 90+ on the Euclid&lt;/li&gt;
&lt;li&gt;Even being the smartest student at your high school is not enough to handle it&lt;/li&gt;
&lt;li&gt;Getting a 100% in high school math is just the prerequisite&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Two of my friends from high school that were in CS enrolled in both advanced math classes with one even signing up for the advanced CS class. Then, once they found it really tough (~2nd week), they switched to normal stream and had to catch up with me 😂.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>First Post</title>
      <link>https://blog.elijahlopez.ca/posts/first/</link>
      <pubDate>Wed, 15 Dec 2021 00:16:00 -0500</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/first/</guid>
      <description>&lt;p&gt;This post tests if Hugo with the anubis theme works.
I&amp;rsquo;m thinking of self publishing articles rather than posting on Medium.
Medium&amp;rsquo;s UI is slower than YouTube&amp;rsquo;s even though Medium is completely text-based.&lt;/p&gt;
&lt;h3 id=&#34;edit&#34; &gt;Edit
&lt;span&gt;
    &lt;a href=&#34;#edit&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;It&amp;rsquo;s currently December 19th 2021, and I&amp;rsquo;ve even added a comment section. There&amp;rsquo;s absolutely no reason to use Medium anymore especially after making my own &lt;a href=&#34;https://blog.elijahlopez.ca/posts/hugo-tutorial&#34;&gt;Hugo GitHub Pages Tutorial&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Representative Proportional Voting</title>
      <link>https://blog.elijahlopez.ca/posts/representative-proportional-voting/</link>
      <pubDate>Fri, 19 Nov 2021 11:58:17 -0400</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/representative-proportional-voting/</guid>
      <description>&lt;p&gt;The one argument against common proportional voting systems is &amp;ldquo;local represenation matters.&amp;rdquo;
Party-list proportional representation is the formal term for it but it does not care about local representations.&lt;/p&gt;
&lt;p&gt;To solve this we still keep the same voting methods. The only change is which MP actually get elected. Once all the votes are counted, first determine independent MPs using first past the post. Remove these seats from the total seats. Then use Huntington–Hill method to determine number of seats for each party (independents are not one party). Primary allocation is done using any party with more than hare quota.&lt;/p&gt;
&lt;p&gt;To protect independents we give independents priority when picking MP&amp;rsquo;s for each riding.&lt;/p&gt;
&lt;p&gt;After seats are allocated,&lt;/p&gt;
&lt;p&gt;From smallest seats party to largest:
Find riding from unelected riding&amp;rsquo;s with the highest percentage voting for that party (use sorting algorithm). Elect the party MP for that riding. Remove riding from unelected riding&amp;rsquo;s. Repeat.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to Move EFI (MSR) System Partition</title>
      <link>https://blog.elijahlopez.ca/posts/move-efi-system-partition/</link>
      <pubDate>Mon, 30 Aug 2021 22:48:20 -0500</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/move-efi-system-partition/</guid>
      <description>&lt;p&gt;To the start of the disk.&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34; &gt;Prerequisites
&lt;span&gt;
    &lt;a href=&#34;#prerequisites&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;4GB+ USB
Some intuition&lt;/p&gt;
&lt;p&gt;This took way too long for such a simple solution. Suppose you want to move the system EFI partition to the start of your disk because it was in after an unallocated or unused partition.&lt;/p&gt;
&lt;p&gt;What you&amp;rsquo;ll need is a live USB that has GPARTED on it. I suggest using a Linux distro live USB, in my case Zorin OS (Core / Lite) since they usually come with gparted. If you want the fastest way however, you can use &lt;a href=&#34;https://gparted.org/download.php&#34;&gt;gparted live&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Once you got the ISO file of the live distro (or gparted), you can use balenaEtcher to burn the ISO to a USB. This tool is way simpler and intuitive than Rufus or Fedora&amp;rsquo;s burning tool (which does not work for other ISO&amp;rsquo;s!).&lt;/p&gt;
&lt;p&gt;Once you&amp;rsquo;ve burned the ISO, simply restart your computer and try to get to the boot menu. For example, on my Razer blade stealth, I had to mash the F12 button. In the boot menu, you should see your USB. Click on the USB name without any partition X, unless they all are partition X.&lt;/p&gt;
&lt;p&gt;Now you want to try the distro, so make sure you are clicking the try options and not the install. On the gparted live, you&amp;rsquo;ll probably just boot into the OS.&lt;/p&gt;
&lt;p&gt;Now that you are in the OS, press the Special key (Windows key on Windows), search for &amp;ldquo;gparted&amp;rdquo; and open it.&lt;/p&gt;
&lt;p&gt;In gparted you want to select the EFI partition first, click move, and set the space before to the minimum, and the space after to the maximum without changing the partition size. Next you want to do the same thing with the MSR partition. You&amp;rsquo;ll encounter some warnings about your
system may not work after but that&amp;rsquo;s probably if you don&amp;rsquo;t move the MSR partition. Click apply operations (the checkmark) and reboot your machine. You&amp;rsquo;ll see in the disk management tool that the EFI partition has moved and now you can expand or merge the usable partition.&lt;/p&gt;
&lt;p&gt;I am not responsible if your system breaks. I am simply stating the solution that I came up with myself that I wish someone told me about earlier.&lt;/p&gt;
&lt;p&gt;If you need to move unallocated space to the right of a volume, use &lt;a href=&#34;https://www2.aomeisoftware.com/download/pa/PAssist_Std.exe&#34;&gt;AOMEI Partition Assistant Standard Edition&lt;/a&gt;.
The software boots windows into a secure environment where it can safely perform the long process of moving the partition so that the unallocated space is on the right side.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Registering Default File Handler&#39;s in Windows with Python</title>
      <link>https://blog.elijahlopez.ca/posts/register-default-file-handler-python/</link>
      <pubDate>Sun, 30 May 2021 22:51:53 -0500</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/register-default-file-handler-python/</guid>
      <description>&lt;p&gt;Recently I needed to make my music player register as a file handler for audio files (mp3, flac, etc…) but how would I do this? Say hello to Windows Registry.&lt;/p&gt;
&lt;p&gt;Here is the helpers file for Music Caster. Look for &lt;code&gt;add_reg_handlers&lt;/code&gt; &lt;a href=&#34;https://github.com/elibroftw/music-caster/blob/master/src/helpers.py&#34;&gt;https://github.com/elibroftw/music-caster/blob/master/src/helpers.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This function sets my music player as the default program for a variety of file extensions. It also adds custom right click options for those file extensions and folders as well.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m sorry for the lack of an explanation but the best I can do is:&lt;/p&gt;
&lt;p&gt;First, you can choose to implement a URI protocol so that your program can be opened from a hyperlink in your browser.&lt;/p&gt;
&lt;p&gt;Create a class name for your program. Something like &amp;ldquo;ProgramEXT&amp;rdquo; for each extension or if the extensions are all related to each other, something like &amp;ldquo;ProgramFile.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Now come up with a generic name for each of the file extensions you want to be the default program for. For example, if your program might be a PDF reader, you would want to call any .pdf&amp;rsquo;s a &amp;ldquo;PDF File.&amp;rdquo; You can look at the code for how to write this to the registry, along with setting the icon.&lt;/p&gt;
&lt;p&gt;Looking at the code, next comes the default command. This defines what happens when the file is opened in the default program or double clicked.&lt;/p&gt;
&lt;p&gt;Next comes supplementary commands that will show even if the user did not want to make your program the default handler. Note that these commands only appear on the extensions you want them to appear on, unless you want to include them on all file extensions, but for that you will have to do more reading on your own.&lt;/p&gt;
&lt;p&gt;Finally comes the part where you can add custom right click options to folders.
At the end of the function is the code required to delete your registry modifications.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Parallel Concurrent Requests in Python</title>
      <link>https://blog.elijahlopez.ca/posts/parallel-concurrent-requests-in-python/</link>
      <pubDate>Wed, 24 Feb 2021 22:42:39 -0500</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/parallel-concurrent-requests-in-python/</guid>
      <description>&lt;p&gt;You’d think that the fastest way to make parallel network requests would be to use asyncio, but it’s actually &lt;code&gt;concurrent.futures.ThreadPoolExecutor&lt;/code&gt;.
I’ve known ThreadPools before as I worked with them in Java 6+ months ago, but I couldn’t find something similar in Python until yesterday.
There is also a &lt;code&gt;ProcessPoolExecutor&lt;/code&gt;, but I’d only suggest you use that for CPU-bound tasks.
ThreadPoolExecutor is better since requests are network bound (and also because I encountered a jumbled error when I tried to use &lt;code&gt;ProcessPoolExecutor&lt;/code&gt;.
Here is a quick proof of concept using &lt;code&gt;ThreadPoolExecutor&lt;/code&gt;.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/elibroftw/fc61f40da65ad3178ea03c768c86a932.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;I hope that the comments in the code above were enough but if not, please let me know.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Automate Firefox Addon Publishing</title>
      <link>https://blog.elijahlopez.ca/posts/automate-firefox-addon-publishing/</link>
      <pubDate>Thu, 08 Oct 2020 22:58:39 -0500</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/automate-firefox-addon-publishing/</guid>
      <description>&lt;p&gt;If you&amp;rsquo;re like me, you always want to speed up aspects of your life especially routine tasks. I&amp;rsquo;ll be doing this in Python but you can easily convert the code to a language of your choice.&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34; &gt;Prerequisites
&lt;span&gt;
    &lt;a href=&#34;#prerequisites&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;We&amp;rsquo;re going to be using the Firefox Add-ons API to upload your add-on so you will need some API keys. You can get your API keys from &lt;a href=&#34;https://addons.mozilla.org/developers/addon/api/key/&#34;&gt;here&lt;/a&gt;. 
Place the pair of API keys into a .env file like so:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jwt-issuer=string
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jwt-secret=string
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;third-party-libraries&#34; &gt;Third Party Libraries
&lt;span&gt;
    &lt;a href=&#34;#third-party-libraries&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;After you do that, you will need to install some necessary modules (add to &lt;code&gt;requirements.txt&lt;/code&gt;): &lt;code&gt;pip install requests PyJWT&lt;/code&gt;
After installing these two modules, copy the snippet at the bottom of the article.&lt;/p&gt;
&lt;h2 id=&#34;modifying-thescript&#34; &gt;Modifying the Script
&lt;span&gt;
    &lt;a href=&#34;#modifying-thescript&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;GUID&lt;/code&gt;: include the &amp;lsquo;{&amp;rsquo; and &amp;lsquo;}&amp;rsquo; into the string if applicable
&lt;code&gt;addon_files&lt;/code&gt;: a list of source files of the add-on (relative path&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/elibroftw/1a94149a2f6232d062b666c4ee9ea530.js&#34;&gt;&lt;/script&gt;

</description>
    </item>
    
    <item>
      <title>VS Code Remote SSH Tutorial</title>
      <link>https://blog.elijahlopez.ca/posts/vs-code-remote-ssh/</link>
      <pubDate>Fri, 11 Sep 2020 18:23:50 -0500</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/vs-code-remote-ssh/</guid>
      <description>&lt;p&gt;In this tutorial we&amp;rsquo;ll integrate SSH into VS Code in a way that won&amp;rsquo;t require entering a password every time.&lt;/p&gt;
&lt;h2 id=&#34;generating-an-ssh-key&#34; &gt;Generating an SSH key
&lt;span&gt;
    &lt;a href=&#34;#generating-an-ssh-key&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;If you&amp;rsquo;re on Windows, you will need to install the OpenSSH feature from Settings or you can use WSL to be able to use &lt;code&gt;ssh-keygen&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can generate an SSH key using &lt;code&gt;ssh-keygen -t ed25519&lt;/code&gt;. Press enter on the prompt to use the default filename.&lt;/p&gt;
&lt;p&gt;Keep track of where the key is stored. (e.g. &lt;code&gt;C:\Users\maste\.ssh\id_ed25519&lt;/code&gt;)
This will be useful when configuring the Remote-SSH VSCode extension.&lt;/p&gt;
&lt;h2 id=&#34;adding-ssh-key-to-authorized-keys&#34; &gt;Adding SSH key to Authorized Keys
&lt;span&gt;
    &lt;a href=&#34;#adding-ssh-key-to-authorized-keys&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;During the process of adding our keys, we&amp;rsquo;ll have to enter our passwords.&lt;/p&gt;
&lt;h3 id=&#34;linux--macos--wsl&#34; &gt;Linux / MacOS / WSL
&lt;span&gt;
    &lt;a href=&#34;#linux--macos--wsl&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh-copy-id -i path/to/file/if/not/default USER@HOST
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# examples&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh-copy-id -i .ssh/id_ed25519.pub USER@HOST
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh-copy-id -i /mnt/c/Users/maste/.ssh/id_ed25519.pub USER@HOST
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When doing this, press enter to any yes/no prompts such as fingerprints and etc. The fingerprint prompt is
important only if you can&amp;rsquo;t trust your network (e.g. Starbucks WiFi).&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re having trouble with this, just &lt;code&gt;cd&lt;/code&gt; into the &lt;code&gt;.ssh&lt;/code&gt; folder and use &lt;code&gt;-i id_ed25519.pub&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;windows-without-wsl&#34; &gt;Windows Without WSL
&lt;span&gt;
    &lt;a href=&#34;#windows-without-wsl&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;If you&amp;rsquo;re on Windows, you won&amp;rsquo;t have access to &lt;code&gt;ssh-copy-id&lt;/code&gt;. Instead you can modify the first command below or use the second command
if you aren&amp;rsquo;t doing anything abnormal on your computer.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#24909d&#34;&gt;type &lt;/span&gt;path\to\id_algo.pub | ssh USER&lt;span style=&#34;color:#40ffff&#34;&gt;@HOST&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;cat &amp;gt;&amp;gt; .ssh/authorized_keys&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# type $env:USERPROFILE\.ssh\id_ed25519.pub | ssh user@host &amp;#34;cat &amp;gt;&amp;gt; .ssh/authorized_keys&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# the above is a helper that hopefully requires no modifications&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;setting-up-vs-code&#34; &gt;Setting up VS Code
&lt;span&gt;
    &lt;a href=&#34;#setting-up-vs-code&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Install the &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-ssh&#34;&gt;Remote - SSH extension&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the Command Palette (Ctrl + Shift + P) and use the &amp;ldquo;Remote-SSH: Open SSH Configuration File&amp;hellip;&amp;rdquo; command&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select the first path  (e.g. &lt;code&gt;C:\Users\maste\.ssh\config&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enter the information for your remote server(s). Here is mine for reference. I had to comment out PreferredAuthentications.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Host uWaterloo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  User e5lopez
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  HostName linux.student.cs.uwaterloo.ca
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  IdentityFile &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;C:\Users\maste\.ssh\id_ed25519&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# Linux/MacOS: IdentityFile &amp;#34;/Users/USER/.ssh/id_ed25519&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# PreferredAuthentications publickey&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;From the command palette, use &amp;ldquo;Remote-SSH: Connect Current Window to Host&amp;hellip;&amp;rdquo; and select the host you just added&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A window will show up asking you to choose the platform for the remote server so choose the &lt;strong&gt;remote server&amp;rsquo;s&lt;/strong&gt; platform (e.g. Linux)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If all goes well, you should be able to connect without having to enter a password
&lt;img src=&#34;https://blog.elijahlopez.ca/images/vs-code-remote-ssh/connected-example.png&#34; alt=&#34;VS Code SSH&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tip: add multiple folders in the remote server to a workspace&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Convert Word Files to PDF With Python</title>
      <link>https://blog.elijahlopez.ca/posts/convert-word-files-to-pdf/</link>
      <pubDate>Wed, 02 Sep 2020 23:04:27 -0500</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/convert-word-files-to-pdf/</guid>
      <description>&lt;p&gt;NOTE: Windows tutorial.&lt;/p&gt;
&lt;p&gt;Back when I first started University, I decided to type out all my math notes. Yes, you heard me right, I typed out my math notes (equation editor is very powerful) - or took screenshot snippets of the textbook PDF and pasted them into my notes.docx if I was lagging behind and too lazy to type it out later. I&amp;rsquo;m always about studying efficiently so whenever I needed to read my math notes, it was always annoying having to wait a couple seconds for Word to open up my notes so I decided to start exporting them to PDF but I didn&amp;rsquo;t want to do it manually every time for both all my course notes so I decided I would use Python to solve my problem. Here&amp;rsquo;s what I came up with after doing some research and debugging to optimize code execution.&lt;/p&gt;
&lt;p&gt;A lot of the code is about leveraging the win32 API and I&amp;rsquo;d be lying if I knew what everything actually did, but rest assured I did have to figure out how to get it to work as you can see with the word = comments where I was figuring out how to do the conversion using threads. I&amp;rsquo;m sure you could even use multiprocessing here but that&amp;rsquo;s for another time since this code was made for only 4 files. You could also use a thread pool if it turns out you have more than 4 files but don&amp;rsquo;t want to rewrite the code to work with multiprocessing.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/elibroftw/5d048a6fededb730e3f2e95793212046.js&#34;&gt;&lt;/script&gt;

</description>
    </item>
    
    <item>
      <title>Windows 10 Favorite Cursors</title>
      <link>https://blog.elijahlopez.ca/posts/windows-10-favorite-cursors/</link>
      <pubDate>Sat, 18 Jul 2020 23:07:33 -0500</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/windows-10-favorite-cursors/</guid>
      <description>&lt;p&gt;If you don&amp;rsquo;t know how to install cursors, you may watch the tutorial I made below:&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/rtSR9ySQ5h4&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;My Windows 10 customization is something I do not really talk about, mostly because it&amp;rsquo;s akin to the sauce(s) you choose with your side rather than the main course itself. I was into cursors a long time ago, but I forgot about them when I built my own PC and got a new laptop.&lt;/p&gt;
&lt;p&gt;The other day though, I had just installed Manjaro (KDE) onto a USB - tutorial coming soon? - so I decided to boot into it on my laptop and the first design I noticed is how nice the cursor is. Suffice to say, a week later I realized just how ugly Windows 10 cursors are, even though I was already using the dark ones, which by the way does not affect the link pointer.&lt;/p&gt;
&lt;p&gt;Below are the cursor packs I have installed from best to worst since I loathe those bottom-top lists. Note that you will need a Deviant Art account to download these themes since I want to give credit to the original artists. This list is small, which I&amp;rsquo;d argue is a good thing, but I will make sure to update it if I ever decide to install more themes.&lt;/p&gt;
&lt;h2 id=&#34;1-breeze-hacked&#34; &gt;1. Breeze Hacked
&lt;span&gt;
    &lt;a href=&#34;#1-breeze-hacked&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://blog.elijahlopez.ca/images/windows-10-favorite-cursors/breeze-hacked.png&#34; alt=&#34;Breeze Hacked&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.deviantart.com/en-ryuu/art/Breeze-Hacked-Cursor-For-Windows-752551821&#34;&gt;Download from deviantart&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This theme builds upon the KDE Breeze themes and is for those who are like me and have a specific niche.
In this case it&amp;rsquo;s &amp;ldquo;hackish,&amp;rdquo; that needs to be fulfilled. It does remind me of those First Civilization particles in Assassin&amp;rsquo;s Creed IV: Black Flag, if you have ever played that game.&lt;/p&gt;
&lt;h2 id=&#34;2-evolution-os&#34; &gt;2. Evolution OS
&lt;span&gt;
    &lt;a href=&#34;#2-evolution-os&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://blog.elijahlopez.ca/images/windows-10-favorite-cursors/evolution-os.jpeg&#34; alt=&#34;Evolution OS&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.deviantart.com/sk-studios-design/art/EvolutionOS-Custom-Cursors-for-Windows-648438877&#34;&gt;Download from deviantart&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is a Mac OS inspired theme. It is an immediate improvement over the Windows cursors and would fit any users who uses Mac OS a lot.&lt;/p&gt;
&lt;h2 id=&#34;3-window-betterblack&#34; &gt;3. Window Better Black
&lt;span&gt;
    &lt;a href=&#34;#3-window-betterblack&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://blog.elijahlopez.ca/images/windows-10-favorite-cursors/windows-better-black.png&#34; alt=&#34;Window Better Black&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.deviantart.com/twipeep/art/Windows-10-cursor-black-version-572437583&#34;&gt;Download from deviantart&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This cursor pack fine tunes the original Windows black cursor theme. The primary reason you&amp;rsquo;d want to use this, is to replace the white cursors without dramatically changing your cursor scheme.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to Ignore Value Properties in Javers</title>
      <link>https://blog.elijahlopez.ca/posts/java-javers-ignore-value/</link>
      <pubDate>Sat, 18 Jul 2020 11:19:04 -0500</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/java-javers-ignore-value/</guid>
      <description>&lt;p&gt;If you just want the solutions, look at the first and last code blocks. Read the whole article if you want some storytelling. Please comment if you have any feedback.&lt;/p&gt;
&lt;p&gt;At work one day, my task was to ignore certain properties of objects when they were being compared. Suppose the object, e.g. custom vertex, had properties &lt;code&gt;{ lastUpdated, color, x, y, z, comments }&lt;/code&gt;.
If one was comparing objects of these properties, one might not want the fields &amp;ldquo;lastUpdated&amp;rdquo; and &amp;ldquo;comments&amp;rdquo; to be involved since they are metadata and not practical properties.
I quickly learned that &lt;a href=&#34;https://javers.org/&#34;&gt;Javers&lt;/a&gt; was being used in creating these diff objects. After reading the documentation, I came across the &lt;code&gt;@DiffIgnore&lt;/code&gt; annotation that could be used in the objects implementation to specify properties to ignore.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/elibroftw/159978a1b3d2c16fbcbc3c3c6e71fb48.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;The only problem with this is that I did not implement the objects I was using! The object&amp;rsquo;s I was using were imports so I hit a roadblock.
One solution I did think of was to first get the changes with those properties I didn&amp;rsquo;t want, and then remove them from the original changes list. Of course I&amp;rsquo;d have to make a copy of the changes list since the return value of &lt;code&gt;getChanges&lt;/code&gt; is not modifiable.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/elibroftw/02ada4d55c06fc5851225bebe3a3c997.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;If you always think of efficiency, you&amp;rsquo;ll see that this solution is grossly inefficient even if it does get the work done. If only there was some way for the unwanted changes to not even exist in the first place.&lt;/p&gt;
&lt;p&gt;I did a lot of reading and came across custom entities. When you are creating a Javers object, you can add objects to it with ignored properties.
This works for some objects but I quickly learned that what I needed was to specify a value object not an Entity object as the latter requires an IdPropertyName.
So after going to Stack Overflow and sorting questions for Javers by new I came across a comment that told the OP use registerValueObject.
I searched it up and sure enough, it was exactly what I needed. Here&amp;rsquo;s how you would use it:&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/elibroftw/1c266ff334d5afd81c690d3848c31e70.js&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;resources&#34; &gt;Resources
&lt;span&gt;
    &lt;a href=&#34;#resources&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://javers.org/documentation/&#34;&gt;Javers Documentation&lt;/a&gt;
&lt;a href=&#34;https://stackoverflow.com/questions/tagged/javers&#34;&gt;Stack Overflow Javers tag&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Automate Unity Building</title>
      <link>https://blog.elijahlopez.ca/posts/automate-unity-building/</link>
      <pubDate>Sun, 21 Jun 2020 11:11:24 -0500</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/automate-unity-building/</guid>
      <description>&lt;p&gt;It took me hours to figure out how to create a simple build script in Unity, even after watching videos, I was really confused.
So why not write an article so that other developers won&amp;rsquo;t need to spend that much time themselves.&lt;/p&gt;
&lt;h2 id=&#34;getting-started&#34; &gt;Getting Started
&lt;span&gt;
    &lt;a href=&#34;#getting-started&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Before we get started make sure you have the necessary build supports needed. In Unity Hub you can see your installations.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.elijahlopez.ca/images/automate-unity-building/unity-hub.png&#34; alt=&#34;Unity installation screenshot&#34;&gt;&lt;/p&gt;
&lt;p&gt;If not, you&amp;rsquo;ll have to click the three dots, and then click &amp;ldquo;Add Modules.&amp;rdquo;
Next, we will need to create a script named something like &lt;code&gt;BuildScript.cs&lt;/code&gt;.
Make sure this file is placed in &lt;code&gt;Assets/Editor&lt;/code&gt;.
This file will be responsible in calling Unity BuildPlayer as well as adding menu items for you to quickly build for your platform(s) of choice.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://gist.github.com/elibroftw/149c230518e3e0d9af54d9c472c2ee84#file-buildscript-cs&#34;&gt;BuildScript.cs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Next copy the code below. Disclaimer: this code uses the scenes from your build settings so make sure the scenes there are correct.
You can ignore the last function if you want, I just kept it there in case you need to use Asset Bundles (I did not).
With this script you can call the build methods from &amp;ldquo;File &amp;gt; Build All&amp;rdquo; and Unity will build the players to the &amp;ldquo;Builds&amp;rdquo; directory in your project root.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.elijahlopez.ca/images/automate-unity-building/unity-hub.png&#34; alt=&#34;Unity build menu&#34;&gt;&lt;/p&gt;
&lt;p&gt;This takes care of building from the editor but what if you were using CI/server to build it for you?
You will need to make a shell/batch script or you can use Python so that the OS won&amp;rsquo;t matter.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://gist.github.com/elibroftw/be1f6ad737ccde25e86f858f2f11629f#file-unitybuild-py&#34;&gt;UnityBuild.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You may have to modify some variables such as &lt;code&gt;UNITY&lt;/code&gt; and also the zipping process if you don&amp;rsquo;t want to zip the builds.
You may also pair this up with an Ino setup script like so &lt;code&gt;iscc setup_script.iss&lt;/code&gt;.
I hope you found this tutorial helpful because I sure would&amp;rsquo;ve.&lt;/p&gt;
&lt;h2 id=&#34;resources&#34; &gt;Resources
&lt;span&gt;
    &lt;a href=&#34;#resources&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://docs.unity3d.com/Manual/BuildPlayerPipeline.html&#34;&gt;Build Player Pipeline&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.unity3d.com/Manual/CommandLineArguments.html&#34;&gt;Unity Command line arguments&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to Create Menus in Pygame</title>
      <link>https://blog.elijahlopez.ca/posts/create-menus-in-pygame/</link>
      <pubDate>Sun, 21 Jun 2020 10:54:30 -0500</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/create-menus-in-pygame/</guid>
      <description>&lt;p&gt;This article is about creating high functioning menus with an optimized workflow along with even a settings page.&lt;/p&gt;
&lt;p&gt;One note of warning is that each of these sections of code cannot be run independently.
I have split the code on purpose so that you can use it in a plug and play manner.
I will link my own pygame project at the end so that you can see that the code I&amp;rsquo;ve shared is the code I do in fact use.&lt;/p&gt;
&lt;h2 id=&#34;boilerplate-code&#34; &gt;Boilerplate Code
&lt;span&gt;
    &lt;a href=&#34;#boilerplate-code&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;The following snippet defines constants such as button widths and text sizes.
You should expect an undefined error since I have not shown main_menu() yet.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://repl.it/@elilopez/PygameMenus#boilerplate.py&#34;&gt;boilereplate.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gfxdraw&lt;/code&gt; is what we will use to make anti-aliased circles for our toggle button.
There&amp;rsquo;s a variable called &lt;code&gt;button_layout_4&lt;/code&gt; which I use as the layout for if the menu will have 4 centred buttons of the same size.
You can make your own custom layout if you need x buttons. I actually made a local button_layout_3 in my own end game menu since it only required only 3 buttons.&lt;/p&gt;
&lt;p&gt;In this repl, there are other files as well that we will take a look at.&lt;/p&gt;
&lt;h2 id=&#34;helper-functions&#34; &gt;Helper Functions
&lt;span&gt;
    &lt;a href=&#34;#helper-functions&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://repl.it/@elilopez/PygameMenus#helpers.py&#34;&gt;helpers.py&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;text_objects&#34; &gt;text_objects(…)
&lt;span&gt;
    &lt;a href=&#34;#text_objects&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;Returns the text surface and its dimensions&lt;/p&gt;
&lt;h3 id=&#34;button&#34; &gt;button(…)
&lt;span&gt;
    &lt;a href=&#34;#button&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;Creates a visual button with a passive and hovered (active) state.
Return value is whether or not the button was clicked.
Note that there is a 100ms buffer time to ensure the click was not of a previous menu button.&lt;/p&gt;
&lt;h3 id=&#34;draw_circle&#34; &gt;draw_circle(…)
&lt;span&gt;
    &lt;a href=&#34;#draw_circle&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;Draws an anti-aliased circle. First the outline is drawn and then the fill is drawn.&lt;/p&gt;
&lt;h3 id=&#34;toggle_btn&#34; &gt;toggle_btn(…)
&lt;span&gt;
    &lt;a href=&#34;#toggle_btn&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;This function creates the text and toggle with enabled and disabled states.
The return value is whether the toggle (including the text) was clicked.
Since there is no hover state, &lt;code&gt;draw_toggle&lt;/code&gt; and &lt;code&gt;blit_text&lt;/code&gt; are available to avoid redundant blitting and drawing.&lt;/p&gt;
&lt;h2 id=&#34;main-menu&#34; &gt;Main Menu
&lt;span&gt;
    &lt;a href=&#34;#main-menu&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://repl.it/@elilopez/PygameMenus#main_menu.py&#34;&gt;main_menu.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now that you have the boiler plate code we can now start with the main menu.
The following is an overview of our game. Note that this is the order and not what each menu will contain since menus can have go back buttons.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Main Menu
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Game Loop
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Pause
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            High Scores
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            QUIT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Settings
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    High Scores
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    QUIT
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;main_menu()&lt;/code&gt; is called exactly once to ensure there is no mutually recursive shenanigans going on.&lt;/p&gt;
&lt;p&gt;Whenever the game ends and the user is returned to the main menu, we will need to redraw the static parts of the main menu.
This is what the &lt;code&gt;main_menu_setup()&lt;/code&gt; is for.
The event parsing is to check if &amp;ldquo;Alt + F4&amp;rdquo; or Esc were pressed so that the user can exit the game with standard keyboard shortcuts as well as checking if the user has left clicked.
You can add your own custom keyboard shortcuts that associate to specific buttons like I did for viewing high scores.&lt;/p&gt;
&lt;p&gt;You should modify &lt;code&gt;BUTTON_WIDTH&lt;/code&gt;, &lt;code&gt;button_rects&lt;/code&gt;, the button texts, and also the button if statement logic to fit your needs.
When experimenting you can use raw pixel values to determine the right positions, but when you are satisfied convert these pixel values to percentages of &lt;code&gt;SCREEN_WIDTH&lt;/code&gt; and &lt;code&gt;SCREEN_HEIGHT&lt;/code&gt;.
Using raw pixel values will make the GUI look drastically different for devices with different resolutions from the device you develop on.&lt;/p&gt;
&lt;h2 id=&#34;settings-menu&#34; &gt;Settings Menu
&lt;span&gt;
    &lt;a href=&#34;#settings-menu&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://repl.it/@elilopez/PygameMenus#settings_menu.py&#34;&gt;settings_menu.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The logic for the settings menu is similar to the main menu except we have to deal with writing and reading settings.
I use a variable &lt;code&gt;config: dict&lt;/code&gt; to store the game settings and I have a &lt;code&gt;save_config()&lt;/code&gt; function that writes the dict to a &lt;code&gt;config.json&lt;/code&gt; file.
Since toggle buttons are static, I keep track of whether or not its the first loop and if the toggles need to be redrawn (setting changed).
Note that the back button is just a return. This is because of the game logic I talked about earlier to avoid unnecessary recursion.
As you can see, we have modified the function of pressing the Escape key to return back to the main menu.&lt;/p&gt;
&lt;h2 id=&#34;pause-menu&#34; &gt;Pause Menu
&lt;span&gt;
    &lt;a href=&#34;#pause-menu&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://repl.it/@elilopez/PygameMenus#pause_menu.py&#34;&gt;pause_menu.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is definitely one of the more complicated menus to create because I had to deal with game character movement + having a translucent background.
Similar to the main menu, we will need to redraw the background every time we are returning from either the settings page or the high scores page.&lt;/p&gt;
&lt;p&gt;Note that I have updated this code after I created the gif at the bottom.&lt;/p&gt;
&lt;p&gt;My version of the pause menu required me to pass the game character because of some roadblocks I faced, but yours may not require this.
A lot of the differences between this code and the previous menus have to do with handling character movement (whether to stop the character from moving, keep the character moving, etc).
The most important part is how I save the translucent background so that I can use it again when returning from the high score and settings menus.&lt;/p&gt;
&lt;h2 id=&#34;other-menus&#34; &gt;Other Menus
&lt;span&gt;
    &lt;a href=&#34;#other-menus&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Other menus include the end screen and high scores menu but I won&amp;rsquo;t be showing the code for those since the point of this article is to help you create your own menus optimally, not to do everything for you.
It&amp;rsquo;s just a question of placement (modifying button_rects) since I have taught you how the game logic should be and also creating the buttons themselves.&lt;/p&gt;
&lt;p&gt;Check out my game &lt;a href=&#34;https://github.com/elibroftw/jungle-climb&#34;&gt;Jungle Climb&lt;/a&gt; if you want to see how all the helper functions are put together.&lt;/p&gt;
&lt;div style=&#39;position:relative;padding-bottom:calc(100% / 1.78)&#39;&gt;&lt;iframe src=&#39;https://gfycat.com/ifr/arcticbigheartedaddax&#39; frameborder=&#39;0&#39; scrolling=&#39;no&#39; width=&#39;100%&#39; height=&#39;100%&#39; style=&#39;position:absolute;top:0;left:0;&#39; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;

&lt;h2 id=&#34;possible-improvements&#34; &gt;Possible Improvements
&lt;span&gt;
    &lt;a href=&#34;#possible-improvements&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;h3 id=&#34;2022&#34; &gt;2022
&lt;span&gt;
    &lt;a href=&#34;#2022&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;I ran the game and am blinded by own menu. It&amp;rsquo;s too white and bright. It would be better for the menu background to be black and transcluent rather than white and tranclucent.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Intermediate Python Tutorial Project Ideas and Tips</title>
      <link>https://blog.elijahlopez.ca/posts/intermediate-python/</link>
      <pubDate>Fri, 24 Apr 2020 21:25:40 -0500</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/intermediate-python/</guid>
      <description>&lt;h2 id=&#34;introduction&#34; &gt;Introduction
&lt;span&gt;
    &lt;a href=&#34;#introduction&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;The purpose of this article is to teach you, the reader, intermediate level Python.
I’ll assume you know the basics of Python; you are able to create a quadratic root solver.
I will share what my next steps were, as well as how you can follow suit in a shorter period of time by reading 2 years of concepts in this article.&lt;/p&gt;
&lt;h2 id=&#34;how-it-all-started&#34; &gt;How It All Started
&lt;span&gt;
    &lt;a href=&#34;#how-it-all-started&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;I learned Python basics through &lt;a href=&#34;https://cscircles.cemc.uwaterloo.ca/&#34;&gt;CS Circles&lt;/a&gt;, and then proceeded to improve/test my problem solving skills.
I did this by doing &lt;a href=&#34;https://cemc.uwaterloo.ca/contests/ccc-cco.html&#34;&gt;CCC&lt;/a&gt; questions which you can find (among other contest problems) at &lt;a href=&#34;https://dmoj.ca/&#34;&gt;DMOJ&lt;/a&gt;.
Other sites to improve your algorithmic problem solving skills include &lt;a href=&#34;https://www.hackerrank.com/&#34;&gt;HackerRank&lt;/a&gt; and &lt;a href=&#34;https://leetcode.com/&#34;&gt;LeetCode&lt;/a&gt;.
Most developers on here are doing it for interview prep rather than broadening their thinking and concepts.&lt;/p&gt;
&lt;p&gt;While I was doing this, I was programming with the default IDLE!
Four months went by before I learned about PyCharm. Due to redundancy within the IntelliJ ecosystem,
I suggest installing &lt;a href=&#34;https://www.jetbrains.com/idea/&#34;&gt;IntelliJ IDEA&lt;/a&gt; with the Python plugin. This avoids the instllation
of more than one IntelliJ products when programming in many languages.
IntelliJ has a slight learning curve but is has lots of productivity features.
Nowadays, I use both IntelliJ and Visual Studio Code.&lt;/p&gt;
&lt;p&gt;I have an entire folder dedicated to snippets of code I could use in the future.
I suggest you do the same and you could even add the snippets featured in this article to avoid needless online searching in the future.&lt;/p&gt;
&lt;h2 id=&#34;general-tips&#34; &gt;General Tips
&lt;span&gt;
    &lt;a href=&#34;#general-tips&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;These are some tips that are not bound to programming but just life and productivity in general.&lt;/p&gt;
&lt;h3 id=&#34;know-your-keyboard-shortcuts&#34; &gt;Know your keyboard shortcuts
&lt;span&gt;
    &lt;a href=&#34;#know-your-keyboard-shortcuts&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;Know both the program specific ones (browser, explorer, IDE of choice, etc.) and also OS specific ones (e.g. Win + R for run).&lt;/p&gt;
&lt;h3 id=&#34;using-the-terminal&#34; &gt;Using the Terminal
&lt;span&gt;
    &lt;a href=&#34;#using-the-terminal&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;Instead of doing a calculation by hand or opening an IDE to create and run a script, you can actually execute Python code from the command line.
Aside from the common batch functions (e.g. ls, cd), knowing how to use Python from the command line will save you a lot of time.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.elijahlopez.ca/images/intermediate-python/python-in-terminal.png&#34; alt=&#34;Python in the Terminal&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;how-to-search-engine&#34; &gt;How to Search Engine
&lt;span&gt;
    &lt;a href=&#34;#how-to-search-engine&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;Google (or your search engine of choice), should be your best friend. It has saved me a lot of time and so it could also save you a lot of time.
It can’t do that if you don’t use it or don’t know how to use it.
When you Google something, your query needs to be general enough that you can find answers, but also specific enough so that those answers are relevant.&lt;/p&gt;
&lt;h3 id=&#34;problem-breakdown-strategy&#34; &gt;Problem Breakdown Strategy
&lt;span&gt;
    &lt;a href=&#34;#problem-breakdown-strategy&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;This goes hand in hand with Googling. Suppose you have a problem/project. You need to break it down into smaller parts.
You then need to analyze each of these parts and see if they are small enough for you to complete each of them.
If not, either your missing some knowledge that you should Google or the part is too big and needs to be broken down again.
You keep doing this recursive procedure until your project has been split into solvable parts so that you can complete them and then weave together a project.
When I search and find answers through Google, I don’t expect them to be 100% what I need.
I usually need to remix them into what I want and that’s what you should also expect:
the bare minimum solution that takes you at least one step forward.&lt;/p&gt;
&lt;p&gt;With these tips stated, you can do a couple of different things next.
You can skim the rest of the document and make notes on the snippets of code I feature (what I would do personally),
read only the headings, skip to the project ideas section, or stop reading altogether as my tips are so useful.&lt;/p&gt;
&lt;h2 id=&#34;refresher&#34; &gt;Refresher
&lt;span&gt;
    &lt;a href=&#34;#refresher&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;In CS Circles, they talk about the print function and some of its optional parameters but it’s easy to forget about them so here they are again.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt;&amp;gt;&amp;gt; &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# The default parameters for print are sep=&amp;#39; &amp;#39;, and end=&amp;#39;\n&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt;&amp;gt;&amp;gt; &lt;span style=&#34;color:#24909d&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;4&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;21&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#3677a9&#34;&gt;2020&lt;/span&gt;, sep=&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;, end=&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;---------&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#3677a9&#34;&gt;4&lt;/span&gt;/&lt;span style=&#34;color:#3677a9&#34;&gt;21&lt;/span&gt;/&lt;span style=&#34;color:#3677a9&#34;&gt;2020&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---------
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;concepts&#34; &gt;Concepts
&lt;span&gt;
    &lt;a href=&#34;#concepts&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;h3 id=&#34;input-and-string-formatting&#34; &gt;input() and String Formatting
&lt;span&gt;
    &lt;a href=&#34;#input-and-string-formatting&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;The input function has an optional parameter so that it can also act as a prompt and if you are using Python 3.6+, you can make use of f-strings.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;name = &lt;span style=&#34;color:#24909d&#34;&gt;input&lt;/span&gt;(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;Enter your name: &amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#24909d&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#ed9d13&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;Hello &lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;{&lt;/span&gt;name&lt;span style=&#34;color:#ed9d13&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;!&amp;#39;&lt;/span&gt;)  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# modern way of string formatting&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# if input=&amp;#39;reader&amp;#39;, output: Hello reader!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;for-loops&#34; &gt;For Loops
&lt;span&gt;
    &lt;a href=&#34;#for-loops&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;I want to make clear to you that a for loop, is not a while loop as it is in other languages. In Python, a for loop is an iteration over an iterable object.&lt;/p&gt;
&lt;p&gt;The range function has three parameters, two of them being optional. The range has a default start value of 0, so unless you need to modify the default step value of 1, supplying a 0 is a redundant.&lt;/p&gt;
&lt;p&gt;In this example, I will show you exactly what I mean by “not a while loop” and how a for loop (specifically range) does not add to the temporary value.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# range(start=0, stop, step=1)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# range(5) == range(0, 5) == range(0, 5, 1)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#24909d&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#3677a9&#34;&gt;5&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#24909d&#34;&gt;print&lt;/span&gt;(i)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    i += &lt;span style=&#34;color:#3677a9&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# Guess the output. HINT: i += 2 does not impact the next loop&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you run this code, you’ll notice that the output is increasing by 1 each time even if we are adding 2 to i at the end of every loop.
This is because i is set to the next value in range and isn’t a variable being increased by one each loop.
This means that we can actually iterate over all sorts of iterable objects, like lists, without having to use range and indexing.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;some_letters = [&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;c&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;d&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;e&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;for&lt;/span&gt; letter &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;in&lt;/span&gt; some_letters:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# do something&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here I introduced the keyword &lt;code&gt;pass&lt;/code&gt; to avoid the syntax error that come with empty blocks.&lt;/p&gt;
&lt;p&gt;If you want to keep track of the index as well as the item, you don’t have to use range, you can use the built-in function &lt;code&gt;enumerate&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# start indicates the start number of the index, not the actual index to start enumeration at!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;for&lt;/span&gt; i, letter &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#24909d&#34;&gt;enumerate&lt;/span&gt;(some_letters, start=&lt;span style=&#34;color:#3677a9&#34;&gt;0&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#24909d&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#ed9d13&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;item at index &lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;{&lt;/span&gt;i&lt;span style=&#34;color:#ed9d13&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt; is &lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;{&lt;/span&gt;letter&lt;span style=&#34;color:#ed9d13&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can think of enumerate as turning an iterable into an iterable of pairs (index, item of iterable at index).&lt;/p&gt;
&lt;p&gt;You can also use the next function to retrieve the next value in an iterator (if there is no next item, an error will be raised). All iterators are iterable, but not all iterable objects are iterators! List for example, is iterable but not an iterator so don’t call next on it.&lt;/p&gt;
&lt;h3 id=&#34;file-io&#34; &gt;File IO
&lt;span&gt;
    &lt;a href=&#34;#file-io&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# make sure there exists a test.txt with content in it&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;with&lt;/span&gt; &lt;span style=&#34;color:#24909d&#34;&gt;open&lt;/span&gt;(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;test.txt&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;as&lt;/span&gt; f: &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# NEW; no close() needed&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#24909d&#34;&gt;print&lt;/span&gt;(f.read())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# f.read() moves the &amp;#34;cursor&amp;#34; to the end of the file&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;assert&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;not&lt;/span&gt; f.read()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   f.seek(&lt;span style=&#34;color:#3677a9&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;assert&lt;/span&gt; f.read()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# f.read() returns a string now (unless test.txt is empty)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;with&lt;/span&gt; &lt;span style=&#34;color:#24909d&#34;&gt;open&lt;/span&gt;(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;test.txt&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;as&lt;/span&gt; f:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# f.read()  ERROR do not do this&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    f.write(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;this is a test&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;&lt;/span&gt;)  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# note there is no end parameter&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    f.writelines([&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;line1&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;line2&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;&lt;/span&gt;])  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# note no auto newline&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# other modes: a for append, rb for reading-bytes, wb for writing bytes, and r+/w+ for both reading and writing at the same time&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# OLD way&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;f = &lt;span style=&#34;color:#24909d&#34;&gt;open&lt;/span&gt;(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;test.txt&amp;#39;&lt;/span&gt;)  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# note default is mode=&amp;#39;r&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# do something with f here&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;f.close()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;error-handling&#34; &gt;Error Handling
&lt;span&gt;
    &lt;a href=&#34;#error-handling&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# handling an error&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;raise&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;RuntimeWarning&lt;/span&gt;(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;Something could go wrong&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;RuntimeWarning&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;as&lt;/span&gt; e:  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# as e is optional&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# handle the exception here&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# ignoring an error&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# old&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;raise&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;Exception&lt;/span&gt;(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;BOO&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#bbb&#34;&gt;Exception&lt;/span&gt;: &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# new&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#447fcf;text-decoration:underline&#34;&gt;contextlib&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;import&lt;/span&gt; suppressdef ignore_error(exception: &lt;span style=&#34;color:#bbb&#34;&gt;Exception&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;    Use three quotes for docstrings or long strings
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# use a colon (:) for type hinting (in a dynamic typed language!) and&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# yes you can pass exceptions and functions as parameters&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;with&lt;/span&gt; suppress(exception):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;raise&lt;/span&gt; exception(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;BOO&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#24909d&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;not printed&amp;#39;&lt;/span&gt;)ignore_error(&lt;span style=&#34;color:#bbb&#34;&gt;RuntimeError&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#24909d&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;this gets printed&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;By this point if you are following along in IntelliJ, you would have seen some squiggly lines, especially under “Exception” in the above code.
These squiggly lines help you to avoid syntax errors, follow style guidelines, and bring attention to code that could be doing something you didn’t want it to be doing.&lt;/p&gt;
&lt;h3 id=&#34;more-data-types&#34; &gt;More Data Types
&lt;span&gt;
    &lt;a href=&#34;#more-data-types&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;There are dictionaries, sets and generators (not discussed here). Dictionaries are like hash tables in other languages, because they “hash” the key to store information.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;empty_dict = {}  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# or dict()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;my_dict = {&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;key&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# How to get value from dict&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;my_dict[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;]  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# raises KeyError if &amp;#39;a&amp;#39; not in dictionary&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;my_dict.get(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;, DEFAULT_VALUE)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;key&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;in&lt;/span&gt; my_dict:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    val = my_dict[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;key&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;val = my_dict.get(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;key&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;None&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; val &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;None&lt;/span&gt;: &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;with&lt;/span&gt; suppress(&lt;span style=&#34;color:#bbb&#34;&gt;KeyError&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    val = my_dict[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;key&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# iterations&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;for&lt;/span&gt; k &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;in&lt;/span&gt; my_dict: &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;pass&lt;/span&gt;  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# or for k in my_dict.keys()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;for&lt;/span&gt; v &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;in&lt;/span&gt; my_dict.values(): &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;for&lt;/span&gt; k, v &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;in&lt;/span&gt; my_dict.items():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# since items() generates the items as the iteration happens,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;#  my_dict cannot be modified in this loop.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# For modification use tuple(my_dict.items())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# remove key from dict&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;del&lt;/span&gt; my_dict[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;key&amp;#39;&lt;/span&gt;]  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# can raise KeyError&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# if you want to use the value, use .pop() and define a default&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# value to avoid KeyErrors&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;my_dict.pop(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;key&amp;#39;&lt;/span&gt;, DEFAULT_VALUE)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# sets&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;empty_set = &lt;span style=&#34;color:#24909d&#34;&gt;set&lt;/span&gt;()  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# {} would initialize an empty dict&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;my_set = {&lt;span style=&#34;color:#3677a9&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#3677a9&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#3677a9&#34;&gt;3&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#3677a9&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#24909d&#34;&gt;set&lt;/span&gt;: &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# there are many set methods, go check them out yourself&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# some include: union, intersect, difference&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# you can use + and - as well&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;data-structure-usage-efficiency&#34; &gt;Data Structure Usage (Efficiency)
&lt;span&gt;
    &lt;a href=&#34;#data-structure-usage-efficiency&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;The data structure you use is very important to writing good code.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;use dictionaries if order doesn’t matter + each key has information (value) associated with it&lt;/li&gt;
&lt;li&gt;use sets if order doesn’t matter + no values per key (e.g. keeping track of what you have ‘used’ per se)&lt;/li&gt;
&lt;li&gt;use tuples if you need ordered data but don’t need to modify the data (e.g. coordinates)&lt;/li&gt;
&lt;li&gt;use lists if you need order and mutability (most flexible)&lt;/li&gt;
&lt;li&gt;There are more data structures that are not mentioned in this article. Such as deque, heaps, custom node linked list&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can’t use sets or dictionaries or sets if you need to keep track of duplicates.
That’s because sets and dictionaries hash the keys so that it is super fast (O(1)) to check if a key is in a dictionary.
This does mean that you can’t use lists, sets, and generators as keys (but you can definitely use tuples as long as lists are not nested).&lt;/p&gt;
&lt;p&gt;Dictionaries are also like JSON objects so you can actually use the json module to export them to a JSON file.
Note that if you’re using sets as values, they are converted to lists in an exported json file.&lt;/p&gt;
&lt;h3 id=&#34;miscellaneous-functions&#34; &gt;Miscellaneous Functions
&lt;span&gt;
    &lt;a href=&#34;#miscellaneous-functions&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;Sometimes you will see functions like func(*args, **kwargs)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# args = a list of arguments&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# kwargs = keyword arguments&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# (in the function it&amp;#39;ll be a dictionary)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# *args: list in the function **kwargs: dict in the function&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#447fcf&#34;&gt;complex_func&lt;/span&gt;(*args, **kwargs):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#447fcf&#34;&gt;normal_func&lt;/span&gt;(a, b, c, sample_param=&lt;span style=&#34;color:#3677a9&#34;&gt;5&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sample_args = {&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;sample_param&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#3677a9&#34;&gt;3&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;args = [&lt;span style=&#34;color:#3677a9&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#3677a9&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#3677a9&#34;&gt;2&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;complex_func(&lt;span style=&#34;color:#3677a9&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#3677a9&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#3677a9&#34;&gt;3&lt;/span&gt;, test=&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;)  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# how you&amp;#39;d call it&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;complex_func(*args, **sample_args)  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# also works on normal functions&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;normal_func(*args, **sample_args)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;list-comprehension-and-ternary&#34; &gt;List Comprehension and Ternary
&lt;span&gt;
    &lt;a href=&#34;#list-comprehension-and-ternary&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;One of the most beautiful parts of Python is list comprehensions; one liners to create lists.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# example: input is space separated integers&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;integers = [&lt;span style=&#34;color:#24909d&#34;&gt;int&lt;/span&gt;(x) &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#24909d&#34;&gt;input&lt;/span&gt;.split()]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# split(sep=&amp;#39; &amp;#39;, maxsplit=-1), -1 means no limit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;no_negatives = [x &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;in&lt;/span&gt; integers &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; x &amp;gt; &lt;span style=&#34;color:#3677a9&#34;&gt;0&lt;/span&gt;]  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# only if&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;positives = [x &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; x &amp;gt; &lt;span style=&#34;color:#3677a9&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;else&lt;/span&gt; -x &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;in&lt;/span&gt; integers]  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# if and else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;back_to_str = &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;.join((&lt;span style=&#34;color:#24909d&#34;&gt;str&lt;/span&gt;(x) &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;in&lt;/span&gt; integers))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# items in the list to join need to be of type str&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#24909d&#34;&gt;print&lt;/span&gt;(integers)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# this next case demonstrates the ternary operator _ if _ else _&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#24909d&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;list is&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;not empty&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; integers &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;empty&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can also use list comprehensions to create dictionaries and sets&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set_example = {x &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#24909d&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#3677a9&#34;&gt;3&lt;/span&gt;)}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dict_example = {x: x &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#24909d&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#3677a9&#34;&gt;3&lt;/span&gt;)}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# use generator when only one iteration is required&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;generator_example = (x &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#24909d&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#3677a9&#34;&gt;3&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The third example is a generator. There are some use cases for it, so do your research before using them as they are an advanced topic not for this article.&lt;/p&gt;
&lt;h2 id=&#34;iterables-vs-primitives&#34; &gt;Iterables vs. Primitives
&lt;span&gt;
    &lt;a href=&#34;#iterables-vs-primitives&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;There is one very important distinction between primitive variables and iterable variables. For example.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a = &lt;span style=&#34;color:#3677a9&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b = a
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a = &lt;span style=&#34;color:#3677a9&#34;&gt;6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#24909d&#34;&gt;print&lt;/span&gt;(a == b)  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# vs.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a = [&lt;span style=&#34;color:#3677a9&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#3677a9&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#3677a9&#34;&gt;3&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b = a
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;c = [&lt;span style=&#34;color:#3677a9&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#3677a9&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#3677a9&#34;&gt;4&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a[&lt;span style=&#34;color:#3677a9&#34;&gt;2&lt;/span&gt;] = &lt;span style=&#34;color:#3677a9&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#24909d&#34;&gt;print&lt;/span&gt;(a == b == c)  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#24909d&#34;&gt;print&lt;/span&gt;(a &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;is&lt;/span&gt; b)  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# true; same refrence&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#24909d&#34;&gt;print&lt;/span&gt;(a &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;is&lt;/span&gt; c)  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is especially important when dealing with nested iterables with how you create nested iterables and also copy them. Try out these examples yourself.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lols = [[&lt;span style=&#34;color:#3677a9&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#24909d&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#3677a9&#34;&gt;3&lt;/span&gt;)] &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# [0] is created 3 times&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lols[&lt;span style=&#34;color:#3677a9&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#3677a9&#34;&gt;0&lt;/span&gt;] = &lt;span style=&#34;color:#3677a9&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#24909d&#34;&gt;print&lt;/span&gt;(lols)  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# [[5], [0], [0]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# vs.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a = [[&lt;span style=&#34;color:#3677a9&#34;&gt;0&lt;/span&gt;]]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lols = a * &lt;span style=&#34;color:#3677a9&#34;&gt;3&lt;/span&gt;  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# same as lols = [[0] * 3]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lols[&lt;span style=&#34;color:#3677a9&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#3677a9&#34;&gt;0&lt;/span&gt;] = &lt;span style=&#34;color:#3677a9&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#24909d&#34;&gt;print&lt;/span&gt;(lols)  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# [[5], [5], [5]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;copying-iterables&#34; &gt;Copying Iterables
&lt;span&gt;
    &lt;a href=&#34;#copying-iterables&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;To make a shallow copy, use .copy(). BUT, note that for any nested iterables, only the reference is copied, not the actual nested list. That’s why it’s called a shallow copy. To deepcopy, we can use the copy module.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;new_copy = lols.copy()  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# I prefer this over using [:]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;reversed_list = lols[::-&lt;span style=&#34;color:#3677a9&#34;&gt;1&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# I do not use the above since reversed() and .reverse() are explicit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;new_copy[&lt;span style=&#34;color:#3677a9&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#3677a9&#34;&gt;0&lt;/span&gt;] = &lt;span style=&#34;color:#3677a9&#34;&gt;6&lt;/span&gt;  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# lols == [[6], [6], [6]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;assert&lt;/span&gt; lols == new_copy &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;not&lt;/span&gt; lols &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;is&lt;/span&gt; new_copy
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#447fcf;text-decoration:underline&#34;&gt;copy&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;import&lt;/span&gt; deepcopynew_copy = deepcopy(list_of_lists)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;new_copy = list_of_lists
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;new_copy[&lt;span style=&#34;color:#3677a9&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#3677a9&#34;&gt;0&lt;/span&gt;] = &lt;span style=&#34;color:#3677a9&#34;&gt;4&lt;/span&gt;  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# [[4], [4], [4]] because 3x of the same list&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;assert&lt;/span&gt; lols != new_copy &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;and&lt;/span&gt; lols &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;not&lt;/span&gt; new_copy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;memoization-caching&#34; &gt;Memoization (Caching)
&lt;span&gt;
    &lt;a href=&#34;#memoization-caching&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;Memoization is the caching of function return results in order to speed up repetitive calculations. An example would be the recursive implementation of the Fibonacci sequence.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#447fcf;text-decoration:underline&#34;&gt;functools&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;import&lt;/span&gt; wrapsdef memo(func):  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# remove print statements in a practical setting&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cache = {}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;&amp;#39;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;    Without the use of @wraps, square.__name__ would return
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;    &amp;#39;_helper&amp;#39;, and the docstring of the original square() would
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;    have been lost.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;    &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ffa500&#34;&gt;@wraps&lt;/span&gt;(func)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#447fcf&#34;&gt;_helper&lt;/span&gt;(x):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# you could have multiple params (x, y, ...) and then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# cache using a tuple as the key&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;if&lt;/span&gt; x &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;in&lt;/span&gt; cache:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#24909d&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;not in cache&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            cache[x] = func(x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#24909d&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;in cache&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;return&lt;/span&gt; cache[x]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;return&lt;/span&gt; _helper
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ffa500&#34;&gt;@memo&lt;/span&gt;  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# square = memo(square) &amp;lt;-- what it means&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#447fcf&#34;&gt;square&lt;/span&gt;(x):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;return&lt;/span&gt; x * x
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#24909d&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#3677a9&#34;&gt;3&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    square(i), square(i)  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# second one uses the cached result&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;An exercise is to make a memoize function that takes any number of positional arguments.&lt;/p&gt;
&lt;p&gt;Once you understand how memoization works, you can actually start using the built-in version: &lt;code&gt;lru_cache(maxsize=None)&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#447fcf;text-decoration:underline&#34;&gt;functools&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;import&lt;/span&gt; lru_cache
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ffa500&#34;&gt;@lru_cache&lt;/span&gt;(maxsize=&lt;span style=&#34;color:#3677a9&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#447fcf&#34;&gt;get_value&lt;/span&gt;():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;   Calls a function that is resource intensive.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ed9d13&#34;&gt;   &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;return&lt;/span&gt; expensive_function()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;lambdas&#34; &gt;Lambdas
&lt;span&gt;
    &lt;a href=&#34;#lambdas&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;Usually used in place of a function parameter if the calculation is short. For example, sorting.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;aa&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;Bb&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;Cc&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;dD&amp;#39;&lt;/span&gt;].sort(key=&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;lambda&lt;/span&gt; string: string.upper())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#3677a9&#34;&gt;1&lt;/span&gt;), (&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#3677a9&#34;&gt;0&lt;/span&gt;)].sort(key=&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;lambda&lt;/span&gt; pair: pair[&lt;span style=&#34;color:#3677a9&#34;&gt;1&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#24909d&#34;&gt;sorted&lt;/span&gt;([(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#3677a9&#34;&gt;1&lt;/span&gt;), (&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#3677a9&#34;&gt;0&lt;/span&gt;)], key=&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;lambda&lt;/span&gt; pair: pair[&lt;span style=&#34;color:#3677a9&#34;&gt;1&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#24909d&#34;&gt;max&lt;/span&gt;([(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#3677a9&#34;&gt;1&lt;/span&gt;), (&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#3677a9&#34;&gt;0&lt;/span&gt;)], key=&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;lambda&lt;/span&gt; pair: pair[&lt;span style=&#34;color:#3677a9&#34;&gt;1&lt;/span&gt;])  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# and min&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;modules&#34; &gt;Modules
&lt;span&gt;
    &lt;a href=&#34;#modules&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;Modules play a big part in projects you will do. Some built-in ones are os, shutil, copy, glob, and threading.
For third party modules, you need to use the command &lt;code&gt;pip install module_name&lt;/code&gt; in your terminal.
Some common modules are requests, beautifulsoup4, PIL, and flask.
If you’re working on a big project, you’ll probably end up using 3rd party modules. Use a &lt;code&gt;requirements.txt&lt;/code&gt; file to track
the modules your project requires. You can install the modules from a file using &lt;code&gt;pip install -r requirements.txt&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;os&#34; &gt;os
&lt;span&gt;
    &lt;a href=&#34;#os&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#447fcf;text-decoration:underline&#34;&gt;os&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;os.mkdir()  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# to make a NEW dir&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;os.chdir()  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# choose a current working dir&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;os.getcwd()  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# get current working dir&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;os.path.exists()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;os.rename()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;os.remove()  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# for existing files only&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;os.rmdir()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;os.getenv(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;key&amp;#39;&lt;/span&gt;)  &lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# gets an environmental variable# use the shutil module for directories with sub directoriese&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;environmental-variables&#34; &gt;Environmental variables
&lt;span&gt;
    &lt;a href=&#34;#environmental-variables&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;I recommend the &lt;code&gt;python-dotenv&lt;/code&gt; module to parse &lt;code&gt;.env&lt;/code&gt; files&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pip install python-dotenv&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# in .env&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# KEY=VALUE&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#447fcf;text-decoration:underline&#34;&gt;dotenv&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;import&lt;/span&gt; load_dotenv
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;load_dotenv()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;glob&#34; &gt;glob
&lt;span&gt;
    &lt;a href=&#34;#glob&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;Used for getting a list of files/folders&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#447fcf;text-decoration:underline&#34;&gt;glob&lt;/span&gt; &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;import&lt;/span&gt; glob, iglob
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# get all .py files in cwd, * is a wildcard&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# glob.iglob returns a generator&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#24909d&#34;&gt;print&lt;/span&gt;([x &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#6ab825;font-weight:bold&#34;&gt;in&lt;/span&gt; iglob(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;*.py&amp;#39;&lt;/span&gt;)])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# and if you want a list use glob.glob&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#24909d&#34;&gt;print&lt;/span&gt;(glob(&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#39;*.py&amp;#39;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999;font-style:italic&#34;&gt;# exercise: find out how to get all .py files in cwd + its subdirs&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;threading&#34; &gt;Threading
&lt;span&gt;
    &lt;a href=&#34;#threading&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://gist.github.com/elibroftw/dc61cbb99c41976c1b466ad4db6bd6d4#file-threading_examples-py&#34;&gt;threading_example.py&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;advanced-topics-future-python-learning&#34; &gt;Advanced Topics (future Python learning)
&lt;span&gt;
    &lt;a href=&#34;#advanced-topics-future-python-learning&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;h3 id=&#34;classes&#34; &gt;Classes
&lt;span&gt;
    &lt;a href=&#34;#classes&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;I did not cover classes because that is more about OOP than Python programming and the use cases for classes are very small. One thing you should know when you are learning classes is &lt;strong&gt;slots&lt;/strong&gt; property, so do search that up on your own.&lt;/p&gt;
&lt;h3 id=&#34;generators&#34; &gt;Generators
&lt;span&gt;
    &lt;a href=&#34;#generators&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;Again this is an advanced topic and learning about it now will only lead to confusion, its best to learn this on your own or in a practical setting.&lt;/p&gt;
&lt;h3 id=&#34;decorators&#34; &gt;Decorators
&lt;span&gt;
    &lt;a href=&#34;#decorators&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;I covered the basics of decorators.
There are decorators used by lots of other 3rd party libraries and different use cases (e.g. timing functions) so I suggest you do your own research on them as well.
There is a wraps found in the functools module that’ll help you.&lt;/p&gt;
&lt;h3 id=&#34;git-and-git-workflow&#34; &gt;git and git workflow
&lt;span&gt;
    &lt;a href=&#34;#git-and-git-workflow&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;This is very important when your collaborating with others or are working for a company.
Git is a versioning tool used so that mistakes don’t hurt you, and for letting you work on multiple features at the same time.&lt;/p&gt;
&lt;h3 id=&#34;other-built-in-modules&#34; &gt;Other Built-in Modules
&lt;span&gt;
    &lt;a href=&#34;#other-built-in-modules&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;p&gt;Such as itertools, threading, multiprocessing, and more.&lt;/p&gt;
&lt;p&gt;Thanks for reading and good luck to your learning journey.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://gist.github.com/elibroftw/063115da075fc2203a7cf20bd8a1542e#file-intermediate-project-ideas-md&#34;&gt;Project Ideas&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Python3 Simplehttpserver</title>
      <link>https://blog.elijahlopez.ca/posts/python3-simplehttpserver/</link>
      <pubDate>Wed, 10 Jul 2019 22:38:39 -0500</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/python3-simplehttpserver/</guid>
      <description>&lt;h2 id=&#34;code&#34; &gt;Code
&lt;span&gt;
    &lt;a href=&#34;#code&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/elibroftw/bcbf2ee1c8662d8fb6f6116a3705d337.js&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;backstory&#34; &gt;Backstory
&lt;span&gt;
    &lt;a href=&#34;#backstory&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;p&gt;The project I am working on is a tray icon app that will let me play my audio files on my Google Home Mini. To do this I needed to have an HTTP server running so that I can serve my local files from my computer to the Home device.&lt;/p&gt;
&lt;p&gt;When I Googled how to do this, I came across this article from 2018 but uses a bit of Python2 to do it. So I tried to find the Python3 alternative and I found out about http.server.
This was still a command line solution, not a coded one, so I had to Google again and I came across this article but its too long for too little. I needed a simple HTTP server which can serve files.&lt;/p&gt;
&lt;p&gt;I fiddled with my imports and took a look at the BaseHTTPRequestHandler class and tried to use that for the HTTPServer, but it failed. My import statement looked like this:
from http.server import HTTPServer, BaseHTTPRequestHandler. I removed BaseHTTPRequestHandler and started typing in simple just out of curiosity and voila, my IDE recommend me SimpleHTTPRequestHandler.
It worked perfectly and I just had to os.chdir(‘C:/’) to get exactly what I wanted.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Running Python as a Scheduled Task (Windows)</title>
      <link>https://blog.elijahlopez.ca/posts/python-windows-task-scheduler/</link>
      <pubDate>Thu, 23 May 2019 22:34:21 -0500</pubDate>
      
      <guid>https://blog.elijahlopez.ca/posts/python-windows-task-scheduler/</guid>
      <description>&lt;p&gt;To run python in the background is easy, to do it in the background and as a scheduled task is harder.&lt;/p&gt;
&lt;p&gt;If you want to just run a script in the background, you can use&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pythonw &amp;quot;script.py&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;or change your script&amp;rsquo;s extension to .pyw, and then call the script.
Here&amp;rsquo;s how to schedule a task&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create &lt;code&gt;run.bat&lt;/code&gt; in your project directory with the content &lt;code&gt;python &amp;quot;script.py&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Open up Task Scheduler (search from the Start menu).&lt;/li&gt;
&lt;li&gt;On the left sidebar, click &amp;ldquo;Task Scheduler Library.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Click &amp;ldquo;Create Basic Task…&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Enter the task name, description, and click next.&lt;/li&gt;
&lt;li&gt;Select your trigger, I needed &amp;ldquo;When the computer starts.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Action is &amp;ldquo;Start a program.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Program/script will be the bat file you created in Step 1&lt;/li&gt;
&lt;li&gt;Make sure &amp;ldquo;Start in&amp;rdquo; is your project directory.&lt;/li&gt;
&lt;li&gt;Click next, and check &amp;ldquo;Open the Properties dialog…&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Have &amp;ldquo;Run whether user is logged on or not&amp;rdquo; checked (if your trigger is running when the computer starts).&lt;/li&gt;
&lt;li&gt;Have &amp;ldquo;Hidden&amp;rdquo; checked.&lt;/li&gt;
&lt;li&gt;Change &amp;ldquo;Configure for:&amp;rdquo; to the correct option. Windows 10, in my case.&lt;/li&gt;
&lt;li&gt;Tinker with the other options if you need to.&lt;/li&gt;
&lt;li&gt;Click &amp;ldquo;OK.&amp;rdquo; You will need to provide your password.&lt;/li&gt;
&lt;li&gt;Test the task by clicking &amp;ldquo;Run&amp;rdquo; on the right panel.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If the task did not execute (or it did but not in the background) it may be that you didn&amp;rsquo;t follow the steps properly (e.g. I forgot to set the configure for).
I hope you found this helpful. Leave a comment or email me if you have any issues.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
